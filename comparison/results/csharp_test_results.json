{
  "language": "csharp",
  "timestamp": 1753200285,
  "tests": [
    {
      "name": "testExtractBirthDate",
      "description": "Extract birthDate",
      "expression": "birthDate",
      "status": "passed",
      "execution_time_ms": 23.1757,
      "expected": [],
      "actual": [
        "1974-12-25"
      ]
    },
    {
      "name": "testPatientHasBirthDate",
      "description": "patient has a birthDate",
      "expression": "birthDate",
      "status": "passed",
      "execution_time_ms": 0.1919,
      "expected": [],
      "actual": [
        "1974-12-25"
      ]
    },
    {
      "name": "testPatientTelecomTypes",
      "description": "patient telecom types",
      "expression": "telecom.use",
      "status": "passed",
      "execution_time_ms": 0.4783,
      "expected": [],
      "actual": [
        "home",
        "work",
        "mobile",
        "old"
      ]
    },
    {
      "name": "testSimple",
      "description": "testSimple",
      "expression": "name.given",
      "status": "passed",
      "execution_time_ms": 0.125,
      "expected": [],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleNone",
      "description": "testSimpleNone",
      "expression": "name.suffix",
      "status": "passed",
      "execution_time_ms": 0.1366,
      "expected": [],
      "actual": []
    },
    {
      "name": "testEscapedIdentifier",
      "description": "testEscapedIdentifier",
      "expression": "name.\u0060given\u0060",
      "status": "passed",
      "execution_time_ms": 1.1011,
      "expected": [],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleBackTick1",
      "description": "testSimpleBackTick1",
      "expression": "\u0060Patient\u0060.name.\u0060given\u0060",
      "status": "passed",
      "execution_time_ms": 0.133,
      "expected": [],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleFail",
      "description": "testSimpleFail",
      "expression": "name.given1",
      "status": "passed",
      "execution_time_ms": 0.0782,
      "expected": [],
      "actual": []
    },
    {
      "name": "testSimpleWithContext",
      "description": "testSimpleWithContext",
      "expression": "Patient.name.given",
      "status": "passed",
      "execution_time_ms": 0.124,
      "expected": [],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleWithWrongContext",
      "description": "testSimpleWithWrongContext",
      "expression": "Encounter.name.given",
      "status": "passed",
      "execution_time_ms": 0.1713,
      "expected": [],
      "actual": []
    },
    {
      "name": "testPolymorphismA",
      "description": "testPolymorphismA",
      "expression": "Observation.value.unit",
      "status": "passed",
      "execution_time_ms": 4.6479,
      "expected": [],
      "actual": [
        "lbs"
      ]
    },
    {
      "name": "testPolymorphismB",
      "description": "testPolymorphismB",
      "expression": "Observation.valueQuantity.unit",
      "status": "passed",
      "execution_time_ms": 0.2397,
      "expected": [],
      "actual": []
    },
    {
      "name": "testPolymorphismIsA1",
      "description": "testPolymorphismIsA1",
      "expression": "Observation.value.is(Quantity)",
      "status": "passed",
      "execution_time_ms": 3.7005,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPolymorphismIsA2",
      "description": "testPolymorphismIsA2",
      "expression": "Observation.value is Quantity",
      "status": "passed",
      "execution_time_ms": 7.9963,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPolymorphismIsA3",
      "description": "testPolymorphismIsA3",
      "expression": "Observation.issued is instant",
      "status": "passed",
      "execution_time_ms": 0.3161,
      "expected": [],
      "actual": []
    },
    {
      "name": "testPolymorphismIsB",
      "description": "testPolymorphismIsB",
      "expression": "Observation.value.is(Period).not()",
      "status": "passed",
      "execution_time_ms": 2.1327,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPolymorphismAsA",
      "description": "testPolymorphismAsA",
      "expression": "Observation.value.as(Quantity).unit",
      "status": "passed",
      "execution_time_ms": 0.3406,
      "expected": [],
      "actual": [
        "lbs"
      ]
    },
    {
      "name": "testPolymorphismAsAFunction",
      "description": "testPolymorphismAsAFunction",
      "expression": "(Observation.value as Quantity).unit",
      "status": "passed",
      "execution_time_ms": 4.3907,
      "expected": [],
      "actual": [
        "lbs"
      ]
    },
    {
      "name": "testPolymorphismAsB",
      "description": "testPolymorphismAsB",
      "expression": "(Observation.value as Period).unit",
      "status": "passed",
      "execution_time_ms": 0.4761,
      "expected": [],
      "actual": []
    },
    {
      "name": "testPolymorphismAsBFunction",
      "description": "testPolymorphismAsBFunction",
      "expression": "Observation.value.as(Period).start",
      "status": "passed",
      "execution_time_ms": 0.3439,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDollarThis1",
      "description": "testDollarThis1",
      "expression": "Patient.name.given.where(substring($this.length()-3) = \u0027out\u0027)",
      "status": "passed",
      "execution_time_ms": 2.3913,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDollarThis2",
      "description": "testDollarThis2",
      "expression": "Patient.name.given.where(substring($this.length()-3) = \u0027ter\u0027)",
      "status": "passed",
      "execution_time_ms": 0.4287,
      "expected": [],
      "actual": [
        "Peter",
        "Peter"
      ]
    },
    {
      "name": "testDollarOrderAllowed",
      "description": "testDollarOrderAllowed",
      "expression": "Patient.name.skip(1).given",
      "status": "passed",
      "execution_time_ms": 0.8949,
      "expected": [],
      "actual": [
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testDollarOrderAllowedA",
      "description": "testDollarOrderAllowedA",
      "expression": "Patient.name.skip(3).given",
      "status": "passed",
      "execution_time_ms": 0.191,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDollarOrderNotAllowed",
      "description": "testDollarOrderNotAllowed",
      "expression": "Patient.children().skip(1)",
      "status": "passed",
      "execution_time_ms": 0.5084,
      "expected": [],
      "actual": [
        "Hl7.Fhir.ElementModel.PocoElementNode",
        "Hl7.Fhir.ElementModel.PocoElementNode",
        "True",
        "Hl7.Fhir.ElementModel.PocoElementNode",
        "Hl7.Fhir.ElementModel.PocoElementNode",
        "Hl7.Fhir.ElementModel.PocoElementNode",
        "Hl7.Fhir.ElementModel.PocoElementNode",
        "Hl7.Fhir.ElementModel.PocoElementNode",
        "Hl7.Fhir.ElementModel.PocoElementNode",
        "Hl7.Fhir.ElementModel.PocoElementNode",
        "male",
        "1974-12-25",
        "False",
        "Hl7.Fhir.ElementModel.PocoElementNode",
        "Hl7.Fhir.ElementModel.PocoElementNode",
        "Hl7.Fhir.ElementModel.PocoElementNode"
      ]
    },
    {
      "name": "testLiteralTrue",
      "description": "testLiteralTrue",
      "expression": "Patient.name.exists() = true",
      "status": "passed",
      "execution_time_ms": 0.7633,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralFalse",
      "description": "testLiteralFalse",
      "expression": "Patient.name.empty() = false",
      "status": "passed",
      "execution_time_ms": 0.2219,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralString",
      "description": "testLiteralString",
      "expression": "Patient.name.given.first() = \u0027Peter\u0027",
      "status": "passed",
      "execution_time_ms": 0.2693,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralInteger1",
      "description": "testLiteralInteger1",
      "expression": "1.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.9096,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralInteger0",
      "description": "testLiteralInteger0",
      "expression": "0.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.1182,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralIntegerNegative1",
      "description": "testLiteralIntegerNegative1",
      "expression": "(-1).convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.4295,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralIntegerNegative1Invalid",
      "description": "testLiteralIntegerNegative1Invalid",
      "expression": "-1.convertsToInteger()",
      "status": "error",
      "execution_time_ms": 0.6514,
      "expected": [],
      "actual": null,
      "error": "Invocation of operator \u0027-\u0027 failed: Unable to cast object of type \u0027Hl7.Fhir.ElementModel.Types.Boolean\u0027 to type \u0027Hl7.Fhir.ElementModel.Types.Quantity\u0027."
    },
    {
      "name": "testLiteralIntegerMax",
      "description": "testLiteralIntegerMax",
      "expression": "2147483647.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.2865,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralString",
      "description": "testLiteralString",
      "expression": "\u0027test\u0027.convertsToString()",
      "status": "passed",
      "execution_time_ms": 1.1277,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralStringEscapes",
      "description": "testLiteralStringEscapes",
      "expression": "\u0027\\\\\\/\\f\\r\\n\\t\\\u0022\\\u0060\\\u0027\\u002a\u0027.convertsToString()",
      "status": "passed",
      "execution_time_ms": 2.064,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralBooleanTrue",
      "description": "testLiteralBooleanTrue",
      "expression": "true.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.26,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralBooleanFalse",
      "description": "testLiteralBooleanFalse",
      "expression": "false.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.1025,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDecimal10",
      "description": "testLiteralDecimal10",
      "expression": "1.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.8666,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDecimal01",
      "description": "testLiteralDecimal01",
      "expression": "0.1.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.1424,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDecimal00",
      "description": "testLiteralDecimal00",
      "expression": "0.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.1047,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDecimalNegative01",
      "description": "testLiteralDecimalNegative01",
      "expression": "(-0.1).convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.4089,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDecimalNegative01Invalid",
      "description": "testLiteralDecimalNegative01Invalid",
      "expression": "-0.1.convertsToDecimal()",
      "status": "error",
      "execution_time_ms": 0.2737,
      "expected": [],
      "actual": null,
      "error": "Invocation of operator \u0027-\u0027 failed: Unable to cast object of type \u0027Hl7.Fhir.ElementModel.Types.Boolean\u0027 to type \u0027Hl7.Fhir.ElementModel.Types.Quantity\u0027."
    },
    {
      "name": "testLiteralDecimalMax",
      "description": "testLiteralDecimalMax",
      "expression": "1234567890987654321.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.0982,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDecimalStep",
      "description": "testLiteralDecimalStep",
      "expression": "0.00000001.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.092,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateYear",
      "description": "testLiteralDateYear",
      "expression": "@2015.is(Date)",
      "status": "passed",
      "execution_time_ms": 0.1875,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateMonth",
      "description": "testLiteralDateMonth",
      "expression": "@2015-02.is(Date)",
      "status": "passed",
      "execution_time_ms": 0.0962,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateDay",
      "description": "testLiteralDateDay",
      "expression": "@2015-02-04.is(Date)",
      "status": "passed",
      "execution_time_ms": 0.0785,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateTimeYear",
      "description": "testLiteralDateTimeYear",
      "expression": "@2015T.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.2378,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateTimeMonth",
      "description": "testLiteralDateTimeMonth",
      "expression": "@2015-02T.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.0736,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateTimeDay",
      "description": "testLiteralDateTimeDay",
      "expression": "@2015-02-04T.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.1082,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateTimeHour",
      "description": "testLiteralDateTimeHour",
      "expression": "@2015-02-04T14.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.4754,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateTimeMinute",
      "description": "testLiteralDateTimeMinute",
      "expression": "@2015-02-04T14:34.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.0852,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateTimeSecond",
      "description": "testLiteralDateTimeSecond",
      "expression": "@2015-02-04T14:34:28.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.075,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateTimeMillisecond",
      "description": "testLiteralDateTimeMillisecond",
      "expression": "@2015-02-04T14:34:28.123.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.0795,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateTimeUTC",
      "description": "testLiteralDateTimeUTC",
      "expression": "@2015-02-04T14:34:28Z.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.0731,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateTimeTimezoneOffset",
      "description": "testLiteralDateTimeTimezoneOffset",
      "expression": "@2015-02-04T14:34:28\u002B10:00.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.0748,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralTimeHour",
      "description": "testLiteralTimeHour",
      "expression": "@T14.is(Time)",
      "status": "passed",
      "execution_time_ms": 5.3877,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralTimeMinute",
      "description": "testLiteralTimeMinute",
      "expression": "@T14:34.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.134,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralTimeSecond",
      "description": "testLiteralTimeSecond",
      "expression": "@T14:34:28.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.0774,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralTimeMillisecond",
      "description": "testLiteralTimeMillisecond",
      "expression": "@T14:34:28.123.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.0744,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralTimeUTC",
      "description": "testLiteralTimeUTC",
      "expression": "@T14:34:28Z.is(Time)",
      "status": "error",
      "execution_time_ms": 0.5472,
      "expected": [],
      "actual": null,
      "error": "Compilation failed: Parsing failure: unexpected \u0027Z\u0027; expected end of input (Line 1, Column 11); recently consumed: @T14:34:28"
    },
    {
      "name": "testLiteralTimeTimezoneOffset",
      "description": "testLiteralTimeTimezoneOffset",
      "expression": "@T14:34:28\u002B10:00.is(Time)",
      "status": "error",
      "execution_time_ms": 0.1354,
      "expected": [],
      "actual": null,
      "error": "Compilation failed: Parsing failure: unexpected \u0027:\u0027; expected end of input (Line 1, Column 14); recently consumed: 4:34:28\u002B10"
    },
    {
      "name": "testLiteralQuantityDecimal",
      "description": "testLiteralQuantityDecimal",
      "expression": "10.1 \u0027mg\u0027.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 5.5235,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralQuantityInteger",
      "description": "testLiteralQuantityInteger",
      "expression": "10 \u0027mg\u0027.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.1416,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralQuantityDay",
      "description": "testLiteralQuantityDay",
      "expression": "4 days.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.3874,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralIntegerNotEqual",
      "description": "testLiteralIntegerNotEqual",
      "expression": "-3 != 3",
      "status": "passed",
      "execution_time_ms": 0.2817,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralIntegerEqual",
      "description": "testLiteralIntegerEqual",
      "expression": "Patient.name.given.count() = 5",
      "status": "passed",
      "execution_time_ms": 0.2645,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPolarityPrecedence",
      "description": "testPolarityPrecedence",
      "expression": "-Patient.name.given.count() = -5",
      "status": "passed",
      "execution_time_ms": 0.6685,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralIntegerGreaterThan",
      "description": "testLiteralIntegerGreaterThan",
      "expression": "Patient.name.given.count() \u003E -3",
      "status": "passed",
      "execution_time_ms": 0.5306,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralIntegerCountNotEqual",
      "description": "testLiteralIntegerCountNotEqual",
      "expression": "Patient.name.given.count() != 0",
      "status": "passed",
      "execution_time_ms": 0.213,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralIntegerLessThanTrue",
      "description": "testLiteralIntegerLessThanTrue",
      "expression": "1 \u003C 2",
      "status": "passed",
      "execution_time_ms": 0.1273,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralIntegerLessThanFalse",
      "description": "testLiteralIntegerLessThanFalse",
      "expression": "1 \u003C -2",
      "status": "passed",
      "execution_time_ms": 0.1103,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLiteralIntegerLessThanPolarityTrue",
      "description": "testLiteralIntegerLessThanPolarityTrue",
      "expression": "\u002B1 \u003C \u002B2",
      "status": "passed",
      "execution_time_ms": 0.129,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralIntegerLessThanPolarityFalse",
      "description": "testLiteralIntegerLessThanPolarityFalse",
      "expression": "-1 \u003C 2",
      "status": "passed",
      "execution_time_ms": 0.1037,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDecimalGreaterThanNonZeroTrue",
      "description": "testLiteralDecimalGreaterThanNonZeroTrue",
      "expression": "Observation.value.value \u003E 180.0",
      "status": "passed",
      "execution_time_ms": 0.3978,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDecimalGreaterThanZeroTrue",
      "description": "testLiteralDecimalGreaterThanZeroTrue",
      "expression": "Observation.value.value \u003E 0.0",
      "status": "passed",
      "execution_time_ms": 0.2265,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDecimalGreaterThanIntegerTrue",
      "description": "testLiteralDecimalGreaterThanIntegerTrue",
      "expression": "Observation.value.value \u003E 0",
      "status": "passed",
      "execution_time_ms": 0.3099,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDecimalLessThanInteger",
      "description": "testLiteralDecimalLessThanInteger",
      "expression": "Observation.value.value \u003C 190",
      "status": "passed",
      "execution_time_ms": 0.1964,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDecimalLessThanInvalid",
      "description": "testLiteralDecimalLessThanInvalid",
      "expression": "Observation.value.value \u003C \u0027test\u0027",
      "status": "error",
      "execution_time_ms": 0.6663,
      "expected": [],
      "actual": null,
      "error": "Invocation of operator \u0027\u003C\u0027 failed: Cannot compare 185 (of type Hl7.Fhir.ElementModel.Types.Decimal) to test (of type Hl7.Fhir.ElementModel.Types.String), because the types differ."
    },
    {
      "name": "testDateEqual",
      "description": "testDateEqual",
      "expression": "Patient.birthDate = @1974-12-25",
      "status": "passed",
      "execution_time_ms": 2.8672,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDateNotEqual",
      "description": "testDateNotEqual",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00",
      "status": "passed",
      "execution_time_ms": 0.7876,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDateNotEqualTimezoneOffsetBefore",
      "description": "testDateNotEqualTimezoneOffsetBefore",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00-10:00",
      "status": "passed",
      "execution_time_ms": 0.2152,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDateNotEqualTimezoneOffsetAfter",
      "description": "testDateNotEqualTimezoneOffsetAfter",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00\u002B10:00",
      "status": "passed",
      "execution_time_ms": 0.1435,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDateNotEqualUTC",
      "description": "testDateNotEqualUTC",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00Z",
      "status": "passed",
      "execution_time_ms": 0.1567,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDateNotEqualTimeSecond",
      "description": "testDateNotEqualTimeSecond",
      "expression": "Patient.birthDate != @T12:14:15",
      "status": "passed",
      "execution_time_ms": 0.2297,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDateNotEqualTimeMinute",
      "description": "testDateNotEqualTimeMinute",
      "expression": "Patient.birthDate != @T12:14",
      "status": "passed",
      "execution_time_ms": 0.1465,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDateNotEqualToday",
      "description": "testDateNotEqualToday",
      "expression": "Patient.birthDate \u003C today()",
      "status": "passed",
      "execution_time_ms": 4.8558,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDateTimeGreaterThanDate",
      "description": "testDateTimeGreaterThanDate",
      "expression": "now() \u003E Patient.birthDate",
      "status": "passed",
      "execution_time_ms": 0.4604,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateTimeTZGreater",
      "description": "testLiteralDateTimeTZGreater",
      "expression": "@2017-11-05T01:30:00.0-04:00 \u003E @2017-11-05T01:15:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.1334,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLiteralDateTimeTZLess",
      "description": "testLiteralDateTimeTZLess",
      "expression": "@2017-11-05T01:30:00.0-04:00 \u003C @2017-11-05T01:15:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.099,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralDateTimeTZEqualFalse",
      "description": "testLiteralDateTimeTZEqualFalse",
      "expression": "@2017-11-05T01:30:00.0-04:00 = @2017-11-05T01:15:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.1632,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLiteralDateTimeTZEqualTrue",
      "description": "testLiteralDateTimeTZEqualTrue",
      "expression": "@2017-11-05T01:30:00.0-04:00 = @2017-11-05T00:30:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.1031,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralUnicode",
      "description": "testLiteralUnicode",
      "expression": "Patient.name.given.first() = \u0027P\\u0065ter\u0027",
      "status": "passed",
      "execution_time_ms": 0.994,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCollectionNotEmpty",
      "description": "testCollectionNotEmpty",
      "expression": "Patient.name.given.empty().not()",
      "status": "passed",
      "execution_time_ms": 0.2189,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCollectionNotEqualEmpty",
      "description": "testCollectionNotEqualEmpty",
      "expression": "Patient.name.given != {}",
      "status": "passed",
      "execution_time_ms": 0.6457,
      "expected": [],
      "actual": []
    },
    {
      "name": "testExpressions",
      "description": "testExpressions",
      "expression": "Patient.name.select(given | family).distinct()",
      "status": "passed",
      "execution_time_ms": 0.5332,
      "expected": [],
      "actual": [
        "Peter",
        "James",
        "Chalmers",
        "Jim",
        "Windsor"
      ]
    },
    {
      "name": "testExpressionsEqual",
      "description": "testExpressionsEqual",
      "expression": "Patient.name.given.count() = 1 \u002B 4",
      "status": "passed",
      "execution_time_ms": 0.48,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNotEmpty",
      "description": "testNotEmpty",
      "expression": "Patient.name.empty().not()",
      "status": "passed",
      "execution_time_ms": 0.1743,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEmpty",
      "description": "testEmpty",
      "expression": "Patient.link.empty()",
      "status": "passed",
      "execution_time_ms": 0.1204,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralNotTrue",
      "description": "testLiteralNotTrue",
      "expression": "true.not() = false",
      "status": "passed",
      "execution_time_ms": 0.1394,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLiteralNotFalse",
      "description": "testLiteralNotFalse",
      "expression": "false.not() = true",
      "status": "passed",
      "execution_time_ms": 0.1358,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerBooleanNotTrue",
      "description": "testIntegerBooleanNotTrue",
      "expression": "(0).not() = true",
      "status": "passed",
      "execution_time_ms": 0.7784,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testIntegerBooleanNotFalse",
      "description": "testIntegerBooleanNotFalse",
      "expression": "(1).not() = false",
      "status": "passed",
      "execution_time_ms": 0.1826,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNotInvalid",
      "description": "testNotInvalid",
      "expression": "(1|2).not() = false",
      "status": "error",
      "execution_time_ms": 0.4937,
      "expected": [],
      "actual": null,
      "error": "Invocation of operator \u0027=\u0027 failed: Invocation of function \u0027not\u0027 failed: Operator Not is not applicable for collections with more than one item."
    },
    {
      "name": "testStringYearConvertsToDate",
      "description": "testStringYearConvertsToDate",
      "expression": "\u00272015\u0027.convertsToDate()",
      "status": "passed",
      "execution_time_ms": 0.2675,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringMonthConvertsToDate",
      "description": "testStringMonthConvertsToDate",
      "expression": "\u00272015-02\u0027.convertsToDate()",
      "status": "passed",
      "execution_time_ms": 0.1016,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringDayConvertsToDate",
      "description": "testStringDayConvertsToDate",
      "expression": "\u00272015-02-04\u0027.convertsToDate()",
      "status": "passed",
      "execution_time_ms": 0.09,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringYearConvertsToDateTime",
      "description": "testStringYearConvertsToDateTime",
      "expression": "\u00272015\u0027.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.16,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringMonthConvertsToDateTime",
      "description": "testStringMonthConvertsToDateTime",
      "expression": "\u00272015-02\u0027.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.1005,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringDayConvertsToDateTime",
      "description": "testStringDayConvertsToDateTime",
      "expression": "\u00272015-02-04\u0027.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.1222,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringHourConvertsToDateTime",
      "description": "testStringHourConvertsToDateTime",
      "expression": "\u00272015-02-04T14\u0027.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.0855,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringMinuteConvertsToDateTime",
      "description": "testStringMinuteConvertsToDateTime",
      "expression": "\u00272015-02-04T14:34\u0027.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.0852,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringSecondConvertsToDateTime",
      "description": "testStringSecondConvertsToDateTime",
      "expression": "\u00272015-02-04T14:34:28\u0027.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.083,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringMillisecondConvertsToDateTime",
      "description": "testStringMillisecondConvertsToDateTime",
      "expression": "\u00272015-02-04T14:34:28.123\u0027.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.0857,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringUTCConvertsToDateTime",
      "description": "testStringUTCConvertsToDateTime",
      "expression": "\u00272015-02-04T14:34:28Z\u0027.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.1051,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringTZConvertsToDateTime",
      "description": "testStringTZConvertsToDateTime",
      "expression": "\u00272015-02-04T14:34:28\u002B10:00\u0027.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.1198,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringHourConvertsToTime",
      "description": "testStringHourConvertsToTime",
      "expression": "\u002714\u0027.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.6555,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringMinuteConvertsToTime",
      "description": "testStringMinuteConvertsToTime",
      "expression": "\u002714:34\u0027.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.124,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringSecondConvertsToTime",
      "description": "testStringSecondConvertsToTime",
      "expression": "\u002714:34:28\u0027.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.103,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringMillisecondConvertsToTime",
      "description": "testStringMillisecondConvertsToTime",
      "expression": "\u002714:34:28.123\u0027.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.0995,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToInteger",
      "description": "testIntegerLiteralConvertsToInteger",
      "expression": "1.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.113,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralIsInteger",
      "description": "testIntegerLiteralIsInteger",
      "expression": "1.is(Integer)",
      "status": "passed",
      "execution_time_ms": 0.0995,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralIsSystemInteger",
      "description": "testIntegerLiteralIsSystemInteger",
      "expression": "1.is(System.Integer)",
      "status": "passed",
      "execution_time_ms": 0.378,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringLiteralConvertsToInteger",
      "description": "testStringLiteralConvertsToInteger",
      "expression": "\u00271\u0027.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.1324,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringLiteralConvertsToIntegerFalse",
      "description": "testStringLiteralConvertsToIntegerFalse",
      "expression": "\u0027a\u0027.convertsToInteger().not()",
      "status": "passed",
      "execution_time_ms": 0.5062,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringDecimalConvertsToIntegerFalse",
      "description": "testStringDecimalConvertsToIntegerFalse",
      "expression": "\u00271.0\u0027.convertsToInteger().not()",
      "status": "passed",
      "execution_time_ms": 0.1857,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringLiteralIsNotInteger",
      "description": "testStringLiteralIsNotInteger",
      "expression": "\u00271\u0027.is(Integer).not()",
      "status": "passed",
      "execution_time_ms": 0.1207,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToInteger",
      "description": "testBooleanLiteralConvertsToInteger",
      "expression": "true.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.1402,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLiteralIsNotInteger",
      "description": "testBooleanLiteralIsNotInteger",
      "expression": "true.is(Integer).not()",
      "status": "passed",
      "execution_time_ms": 0.1243,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDateIsNotInteger",
      "description": "testDateIsNotInteger",
      "expression": "@2013-04-05.is(Integer).not()",
      "status": "passed",
      "execution_time_ms": 0.1175,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralToInteger",
      "description": "testIntegerLiteralToInteger",
      "expression": "1.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.3136,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringIntegerLiteralToInteger",
      "description": "testStringIntegerLiteralToInteger",
      "expression": "\u00271\u0027.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.1422,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDecimalLiteralToInteger",
      "description": "testDecimalLiteralToInteger",
      "expression": "\u00271.1\u0027.toInteger() = {}",
      "status": "passed",
      "execution_time_ms": 0.5661,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDecimalLiteralToIntegerIsEmpty",
      "description": "testDecimalLiteralToIntegerIsEmpty",
      "expression": "\u00271.1\u0027.toInteger().empty()",
      "status": "passed",
      "execution_time_ms": 0.1602,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLiteralToInteger",
      "description": "testBooleanLiteralToInteger",
      "expression": "true.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.1369,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToDecimal",
      "description": "testIntegerLiteralConvertsToDecimal",
      "expression": "1.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.1352,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralIsNotDecimal",
      "description": "testIntegerLiteralIsNotDecimal",
      "expression": "1.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.114,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToDecimal",
      "description": "testDecimalLiteralConvertsToDecimal",
      "expression": "1.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.0989,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDecimalLiteralIsDecimal",
      "description": "testDecimalLiteralIsDecimal",
      "expression": "1.0.is(Decimal)",
      "status": "passed",
      "execution_time_ms": 0.0771,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringIntegerLiteralConvertsToDecimal",
      "description": "testStringIntegerLiteralConvertsToDecimal",
      "expression": "\u00271\u0027.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.1861,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringIntegerLiteralIsNotDecimal",
      "description": "testStringIntegerLiteralIsNotDecimal",
      "expression": "\u00271\u0027.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.1326,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringLiteralConvertsToDecimalFalse",
      "description": "testStringLiteralConvertsToDecimalFalse",
      "expression": "\u00271.a\u0027.convertsToDecimal().not()",
      "status": "passed",
      "execution_time_ms": 0.2647,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringDecimalLiteralConvertsToDecimal",
      "description": "testStringDecimalLiteralConvertsToDecimal",
      "expression": "\u00271.0\u0027.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.0948,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringDecimalLiteralIsNotDecimal",
      "description": "testStringDecimalLiteralIsNotDecimal",
      "expression": "\u00271.0\u0027.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.1052,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToDecimal",
      "description": "testBooleanLiteralConvertsToDecimal",
      "expression": "true.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.2657,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLiteralIsNotDecimal",
      "description": "testBooleanLiteralIsNotDecimal",
      "expression": "true.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.1222,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralToDecimal",
      "description": "testIntegerLiteralToDecimal",
      "expression": "1.toDecimal() = 1.0",
      "status": "passed",
      "execution_time_ms": 1.0618,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralToDeciamlEquivalent",
      "description": "testIntegerLiteralToDeciamlEquivalent",
      "expression": "1.toDecimal() ~ 1.0",
      "status": "passed",
      "execution_time_ms": 1.1296,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDecimalLiteralToDecimal",
      "description": "testDecimalLiteralToDecimal",
      "expression": "1.0.toDecimal() = 1.0",
      "status": "passed",
      "execution_time_ms": 0.2397,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDecimalLiteralToDecimalEqual",
      "description": "testDecimalLiteralToDecimalEqual",
      "expression": "\u00271.1\u0027.toDecimal() = 1.1",
      "status": "passed",
      "execution_time_ms": 0.1502,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLiteralToDecimal",
      "description": "testBooleanLiteralToDecimal",
      "expression": "true.toDecimal() = 1",
      "status": "passed",
      "execution_time_ms": 0.1474,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToQuantity",
      "description": "testIntegerLiteralConvertsToQuantity",
      "expression": "1.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.1432,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralIsNotQuantity",
      "description": "testIntegerLiteralIsNotQuantity",
      "expression": "1.is(Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.1485,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToQuantity",
      "description": "testDecimalLiteralConvertsToQuantity",
      "expression": "1.0.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.1477,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDecimalLiteralIsNotQuantity",
      "description": "testDecimalLiteralIsNotQuantity",
      "expression": "1.0.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.1221,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringIntegerLiteralConvertsToQuantity",
      "description": "testStringIntegerLiteralConvertsToQuantity",
      "expression": "\u00271\u0027.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.1358,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringIntegerLiteralIsNotQuantity",
      "description": "testStringIntegerLiteralIsNotQuantity",
      "expression": "\u00271\u0027.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.1062,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringQuantityLiteralConvertsToQuantity",
      "description": "testStringQuantityLiteralConvertsToQuantity",
      "expression": "\u00271 day\u0027.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.0898,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringQuantityWeekConvertsToQuantity",
      "description": "testStringQuantityWeekConvertsToQuantity",
      "expression": "\u00271 \\\u0027wk\\\u0027\u0027.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.0902,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringQuantityWeekConvertsToQuantityFalse",
      "description": "testStringQuantityWeekConvertsToQuantityFalse",
      "expression": "\u00271 wk\u0027.convertsToQuantity().not()",
      "status": "passed",
      "execution_time_ms": 0.1308,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringDecimalLiteralConvertsToQuantityFalse",
      "description": "testStringDecimalLiteralConvertsToQuantityFalse",
      "expression": "\u00271.a\u0027.convertsToQuantity().not()",
      "status": "passed",
      "execution_time_ms": 0.657,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringDecimalLiteralConvertsToQuantity",
      "description": "testStringDecimalLiteralConvertsToQuantity",
      "expression": "\u00271.0\u0027.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.0965,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringDecimalLiteralIsNotSystemQuantity",
      "description": "testStringDecimalLiteralIsNotSystemQuantity",
      "expression": "\u00271.0\u0027.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.1135,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToQuantity",
      "description": "testBooleanLiteralConvertsToQuantity",
      "expression": "true.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.172,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLiteralIsNotSystemQuantity",
      "description": "testBooleanLiteralIsNotSystemQuantity",
      "expression": "true.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.1102,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralToQuantity",
      "description": "testIntegerLiteralToQuantity",
      "expression": "1.toQuantity() = 1 \u00271\u0027",
      "status": "passed",
      "execution_time_ms": 0.4708,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDecimalLiteralToQuantity",
      "description": "testDecimalLiteralToQuantity",
      "expression": "1.0.toQuantity() = 1.0 \u00271\u0027",
      "status": "passed",
      "execution_time_ms": 0.1692,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringIntegerLiteralToQuantity",
      "description": "testStringIntegerLiteralToQuantity",
      "expression": "\u00271\u0027.toQuantity()",
      "status": "passed",
      "execution_time_ms": 0.0869,
      "expected": [],
      "actual": [
        "1 \u00271\u0027"
      ]
    },
    {
      "name": "testStringQuantityLiteralToQuantity",
      "description": "testStringQuantityLiteralToQuantity",
      "expression": "\u00271 day\u0027.toQuantity() = 1 day",
      "status": "passed",
      "execution_time_ms": 0.13,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringQuantityDayLiteralToQuantity",
      "description": "testStringQuantityDayLiteralToQuantity",
      "expression": "\u00271 day\u0027.toQuantity() = 1 \u0027{day}\u0027",
      "status": "passed",
      "execution_time_ms": 0.2523,
      "expected": [],
      "actual": []
    },
    {
      "name": "testStringQuantityWeekLiteralToQuantity",
      "description": "testStringQuantityWeekLiteralToQuantity",
      "expression": "\u00271 \\\u0027wk\\\u0027\u0027.toQuantity() = 1 \u0027wk\u0027",
      "status": "passed",
      "execution_time_ms": 0.155,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringDecimalLiteralToQuantity",
      "description": "testStringDecimalLiteralToQuantity",
      "expression": "\u00271.0\u0027.toQuantity() ~ 1 \u00271\u0027",
      "status": "passed",
      "execution_time_ms": 0.2066,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToBoolean",
      "description": "testIntegerLiteralConvertsToBoolean",
      "expression": "1.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.1513,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToBooleanFalse",
      "description": "testIntegerLiteralConvertsToBooleanFalse",
      "expression": "2.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.1533,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNegativeIntegerLiteralConvertsToBooleanFalse",
      "description": "testNegativeIntegerLiteralConvertsToBooleanFalse",
      "expression": "(-1).convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.1836,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testIntegerLiteralFalseConvertsToBoolean",
      "description": "testIntegerLiteralFalseConvertsToBoolean",
      "expression": "0.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.092,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToBoolean",
      "description": "testDecimalLiteralConvertsToBoolean",
      "expression": "1.0.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.5263,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringTrueLiteralConvertsToBoolean",
      "description": "testStringTrueLiteralConvertsToBoolean",
      "expression": "\u0027true\u0027.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.2279,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringFalseLiteralConvertsToBoolean",
      "description": "testStringFalseLiteralConvertsToBoolean",
      "expression": "\u0027false\u0027.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.0908,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringFalseLiteralAlsoConvertsToBoolean",
      "description": "testStringFalseLiteralAlsoConvertsToBoolean",
      "expression": "\u0027False\u0027.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.0845,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTrueLiteralConvertsToBoolean",
      "description": "testTrueLiteralConvertsToBoolean",
      "expression": "true.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.0887,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testFalseLiteralConvertsToBoolean",
      "description": "testFalseLiteralConvertsToBoolean",
      "expression": "false.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.0827,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralToBoolean",
      "description": "testIntegerLiteralToBoolean",
      "expression": "1.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.2601,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralToBooleanEmpty",
      "description": "testIntegerLiteralToBooleanEmpty",
      "expression": "2.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.0958,
      "expected": [],
      "actual": []
    },
    {
      "name": "testIntegerLiteralToBooleanFalse",
      "description": "testIntegerLiteralToBooleanFalse",
      "expression": "0.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.0861,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testStringTrueToBoolean",
      "description": "testStringTrueToBoolean",
      "expression": "\u0027true\u0027.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.0785,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringFalseToBoolean",
      "description": "testStringFalseToBoolean",
      "expression": "\u0027false\u0027.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.0795,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToString",
      "description": "testIntegerLiteralConvertsToString",
      "expression": "1.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.1194,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralIsNotString",
      "description": "testIntegerLiteralIsNotString",
      "expression": "1.is(String).not()",
      "status": "passed",
      "execution_time_ms": 0.1252,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNegativeIntegerLiteralConvertsToString",
      "description": "testNegativeIntegerLiteralConvertsToString",
      "expression": "(-1).convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.2064,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToString",
      "description": "testDecimalLiteralConvertsToString",
      "expression": "1.0.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.2567,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStringLiteralConvertsToString",
      "description": "testStringLiteralConvertsToString",
      "expression": "\u0027true\u0027.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.0925,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToString",
      "description": "testBooleanLiteralConvertsToString",
      "expression": "true.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.1338,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testQuantityLiteralConvertsToString",
      "description": "testQuantityLiteralConvertsToString",
      "expression": "1 \u0027wk\u0027.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.5644,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntegerLiteralToString",
      "description": "testIntegerLiteralToString",
      "expression": "1.toString()",
      "status": "passed",
      "execution_time_ms": 0.1433,
      "expected": [],
      "actual": [
        "1"
      ]
    },
    {
      "name": "testNegativeIntegerLiteralToString",
      "description": "testNegativeIntegerLiteralToString",
      "expression": "(-1).toString()",
      "status": "passed",
      "execution_time_ms": 0.1849,
      "expected": [],
      "actual": [
        "-1"
      ]
    },
    {
      "name": "testDecimalLiteralToString",
      "description": "testDecimalLiteralToString",
      "expression": "1.0.toString()",
      "status": "passed",
      "execution_time_ms": 0.0935,
      "expected": [],
      "actual": [
        "1.0"
      ]
    },
    {
      "name": "testStringLiteralToString",
      "description": "testStringLiteralToString",
      "expression": "\u0027true\u0027.toString()",
      "status": "passed",
      "execution_time_ms": 0.081,
      "expected": [],
      "actual": [
        "true"
      ]
    },
    {
      "name": "testBooleanLiteralToString",
      "description": "testBooleanLiteralToString",
      "expression": "true.toString()",
      "status": "passed",
      "execution_time_ms": 0.0831,
      "expected": [],
      "actual": [
        "true"
      ]
    },
    {
      "name": "testQuantityLiteralWkToString",
      "description": "testQuantityLiteralWkToString",
      "expression": "1 \u0027wk\u0027.toString()",
      "status": "passed",
      "execution_time_ms": 0.0905,
      "expected": [],
      "actual": [
        "1 \u0027wk\u0027"
      ]
    },
    {
      "name": "testQuantityLiteralWeekToString",
      "description": "testQuantityLiteralWeekToString",
      "expression": "1 week.toString()",
      "status": "passed",
      "execution_time_ms": 0.0856,
      "expected": [],
      "actual": [
        "1 \u0027week\u0027"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "Patient.name.exists()",
      "status": "passed",
      "execution_time_ms": 0.125,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "Patient.name.exists(use = \u0027nickname\u0027)",
      "status": "passed",
      "execution_time_ms": 1.1255,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "Patient.name.exists(use = \u0027official\u0027)",
      "status": "passed",
      "execution_time_ms": 0.3537,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "Patient.maritalStatus.coding.exists(code = \u0027P\u0027 and system = \u0027http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\u0027)\n\t\t\tor Patient.maritalStatus.coding.exists(code = \u0027A\u0027 and system = \u0027http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\u0027)",
      "status": "passed",
      "execution_time_ms": 1.6323,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testAllTrue1",
      "description": "testAllTrue1",
      "expression": "Patient.name.select(given.exists()).allTrue()",
      "status": "passed",
      "execution_time_ms": 0.4277,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testAllTrue2",
      "description": "testAllTrue2",
      "expression": "Patient.name.select(period.exists()).allTrue()",
      "status": "passed",
      "execution_time_ms": 0.3122,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testAllTrue3",
      "description": "testAllTrue3",
      "expression": "Patient.name.all(given.exists())",
      "status": "passed",
      "execution_time_ms": 0.8021,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testAllTrue4",
      "description": "testAllTrue4",
      "expression": "Patient.name.all(period.exists())",
      "status": "passed",
      "execution_time_ms": 0.2251,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testSubSetOf1",
      "description": "testSubSetOf1",
      "expression": "Patient.name.first().subsetOf($this.name)",
      "status": "passed",
      "execution_time_ms": 0.377,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSubSetOf2",
      "description": "testSubSetOf2",
      "expression": "Patient.name.subsetOf($this.name.first()).not()",
      "status": "passed",
      "execution_time_ms": 0.6212,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSuperSetOf1",
      "description": "testSuperSetOf1",
      "expression": "Patient.name.first().supersetOf($this.name).not()",
      "status": "passed",
      "execution_time_ms": 0.2655,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSuperSetOf2",
      "description": "testSuperSetOf2",
      "expression": "Patient.name.supersetOf($this.name.first())",
      "status": "passed",
      "execution_time_ms": 0.2042,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testQuantity1",
      "description": "testQuantity1",
      "expression": "4.0000 \u0027g\u0027 = 4000.0 \u0027mg\u0027",
      "status": "passed",
      "execution_time_ms": 0.1018,
      "expected": [],
      "actual": []
    },
    {
      "name": "testQuantity2",
      "description": "testQuantity2",
      "expression": "4 \u0027g\u0027 ~ 4000 \u0027mg\u0027",
      "status": "passed",
      "execution_time_ms": 0.1045,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testQuantity3",
      "description": "testQuantity3",
      "expression": "4 \u0027g\u0027 != 4040 \u0027mg\u0027",
      "status": "passed",
      "execution_time_ms": 0.0919,
      "expected": [],
      "actual": []
    },
    {
      "name": "testQuantity4",
      "description": "testQuantity4",
      "expression": "4 \u0027g\u0027 ~ 4040 \u0027mg\u0027",
      "status": "passed",
      "execution_time_ms": 0.0893,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testQuantity5",
      "description": "testQuantity5",
      "expression": "7 days = 1 week",
      "status": "passed",
      "execution_time_ms": 0.3233,
      "expected": [],
      "actual": []
    },
    {
      "name": "testQuantity6",
      "description": "testQuantity6",
      "expression": "7 days = 1 \u0027wk\u0027",
      "status": "passed",
      "execution_time_ms": 0.1018,
      "expected": [],
      "actual": []
    },
    {
      "name": "testQuantity7",
      "description": "testQuantity7",
      "expression": "6 days \u003C 1 week",
      "status": "passed",
      "execution_time_ms": 0.1325,
      "expected": [],
      "actual": []
    },
    {
      "name": "testQuantity8",
      "description": "testQuantity8",
      "expression": "8 days \u003E 1 week",
      "status": "passed",
      "execution_time_ms": 0.0882,
      "expected": [],
      "actual": []
    },
    {
      "name": "testQuantity9",
      "description": "testQuantity9",
      "expression": "2.0 \u0027cm\u0027 * 2.0 \u0027m\u0027 = 0.040 \u0027m2\u0027",
      "status": "error",
      "execution_time_ms": 0.3026,
      "expected": [],
      "actual": null,
      "error": "Invocation of operator \u0027=\u0027 failed: Invocation of operator \u0027*\u0027 failed: Multiplying two quantites is not yet supported"
    },
    {
      "name": "testQuantity10",
      "description": "testQuantity10",
      "expression": "4.0 \u0027g\u0027 / 2.0 \u0027m\u0027 = 2 \u0027g/m\u0027",
      "status": "error",
      "execution_time_ms": 0.5386,
      "expected": [],
      "actual": null,
      "error": "Invocation of operator \u0027=\u0027 failed: Invocation of operator \u0027/\u0027 failed: Dividing two quantites is not yet supported"
    },
    {
      "name": "testQuantity11",
      "description": "testQuantity11",
      "expression": "1.0 \u0027m\u0027 / 1.0 \u0027m\u0027 = 1 \u00271\u0027",
      "status": "error",
      "execution_time_ms": 0.2263,
      "expected": [],
      "actual": null,
      "error": "Invocation of operator \u0027=\u0027 failed: Invocation of operator \u0027/\u0027 failed: Dividing two quantites is not yet supported"
    },
    {
      "name": "testCollectionBoolean1",
      "description": "testCollectionBoolean1",
      "expression": "iif(1 | 2 | 3, true, false)",
      "status": "error",
      "execution_time_ms": 0.5009,
      "expected": [],
      "actual": null,
      "error": "Invocation of function \u0027iif\u0027 failed: Result of expression is not of type boolean"
    },
    {
      "name": "testCollectionBoolean2",
      "description": "testCollectionBoolean2",
      "expression": "iif({}, true, false)",
      "status": "passed",
      "execution_time_ms": 0.2109,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testCollectionBoolean3",
      "description": "testCollectionBoolean3",
      "expression": "iif(true, true, false)",
      "status": "passed",
      "execution_time_ms": 0.1905,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCollectionBoolean4",
      "description": "testCollectionBoolean4",
      "expression": "iif({} | true, true, false)",
      "status": "passed",
      "execution_time_ms": 0.2415,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCollectionBoolean5",
      "description": "testCollectionBoolean5",
      "expression": "iif(true, true, 1/0)",
      "status": "passed",
      "execution_time_ms": 0.2206,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCollectionBoolean6",
      "description": "testCollectionBoolean6",
      "expression": "iif(false, 1/0, true)",
      "status": "passed",
      "execution_time_ms": 0.4989,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDistinct1",
      "description": "testDistinct1",
      "expression": "(1 | 2 | 3).isDistinct()",
      "status": "passed",
      "execution_time_ms": 0.2729,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDistinct2",
      "description": "testDistinct2",
      "expression": "Questionnaire.descendants().linkId.isDistinct()",
      "status": "passed",
      "execution_time_ms": 9.5435,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDistinct3",
      "description": "testDistinct3",
      "expression": "Questionnaire.descendants().linkId.select(substring(0,1)).isDistinct().not()",
      "status": "passed",
      "execution_time_ms": 1.0078,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDistinct4",
      "description": "testDistinct4",
      "expression": "(1 | 2 | 3).distinct()",
      "status": "passed",
      "execution_time_ms": 0.2195,
      "expected": [],
      "actual": [
        "1",
        "2",
        "3"
      ]
    },
    {
      "name": "testDistinct5",
      "description": "testDistinct5",
      "expression": "Questionnaire.descendants().linkId.distinct().count()",
      "status": "passed",
      "execution_time_ms": 0.7237,
      "expected": [],
      "actual": [
        "10"
      ]
    },
    {
      "name": "testDistinct6",
      "description": "testDistinct6",
      "expression": "Questionnaire.descendants().linkId.select(substring(0,1)).distinct().count()",
      "status": "passed",
      "execution_time_ms": 0.4556,
      "expected": [],
      "actual": [
        "2"
      ]
    },
    {
      "name": "testCount1",
      "description": "testCount1",
      "expression": "Patient.name.count()",
      "status": "passed",
      "execution_time_ms": 0.1182,
      "expected": [],
      "actual": [
        "3"
      ]
    },
    {
      "name": "testCount2",
      "description": "testCount2",
      "expression": "Patient.name.count() = 3",
      "status": "passed",
      "execution_time_ms": 0.1567,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCount3",
      "description": "testCount3",
      "expression": "Patient.name.first().count()",
      "status": "passed",
      "execution_time_ms": 0.148,
      "expected": [],
      "actual": [
        "1"
      ]
    },
    {
      "name": "testCount4",
      "description": "testCount4",
      "expression": "Patient.name.first().count() = 1",
      "status": "passed",
      "execution_time_ms": 0.189,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testWhere1",
      "description": "testWhere1",
      "expression": "Patient.name.count() = 3",
      "status": "passed",
      "execution_time_ms": 0.1571,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testWhere2",
      "description": "testWhere2",
      "expression": "Patient.name.where(given = \u0027Jim\u0027).count() = 1",
      "status": "passed",
      "execution_time_ms": 0.6779,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testWhere3",
      "description": "testWhere3",
      "expression": "Patient.name.where(given = \u0027X\u0027).count() = 0",
      "status": "passed",
      "execution_time_ms": 0.2905,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testWhere4",
      "description": "testWhere4",
      "expression": "Patient.name.where($this.given = \u0027Jim\u0027).count() = 1",
      "status": "passed",
      "execution_time_ms": 0.2944,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSelect1",
      "description": "testSelect1",
      "expression": "Patient.name.select(given).count() = 5",
      "status": "passed",
      "execution_time_ms": 0.2415,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSelect2",
      "description": "testSelect2",
      "expression": "Patient.name.select(given | family).count() = 7 ",
      "status": "passed",
      "execution_time_ms": 0.2865,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testRepeat1",
      "description": "testRepeat1",
      "expression": "ValueSet.expansion.repeat(contains).count() = 10",
      "status": "passed",
      "execution_time_ms": 6.765,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testRepeat2",
      "description": "testRepeat2",
      "expression": "Questionnaire.repeat(item).code.count() = 11",
      "status": "passed",
      "execution_time_ms": 0.4672,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testRepeat3",
      "description": "testRepeat3",
      "expression": "Questionnaire.descendants().code.count() = 23",
      "status": "passed",
      "execution_time_ms": 0.2665,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testRepeat4",
      "description": "testRepeat4",
      "expression": "Questionnaire.children().code.count() = 2",
      "status": "passed",
      "execution_time_ms": 0.1998,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testAggregate1",
      "description": "testAggregate1",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate($this\u002B$total, 0) = 45",
      "status": "passed",
      "execution_time_ms": 1.8835,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testAggregate2",
      "description": "testAggregate2",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate($this\u002B$total, 2) = 47",
      "status": "passed",
      "execution_time_ms": 0.6566,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testAggregate3",
      "description": "testAggregate3",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate(iif($total.empty(), $this, iif($this \u003C $total, $this, $total))) = 1",
      "status": "passed",
      "execution_time_ms": 1.2864,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testAggregate4",
      "description": "testAggregate4",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate(iif($total.empty(), $this, iif($this \u003E $total, $this, $total))) = 9",
      "status": "passed",
      "execution_time_ms": 1.1853,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIndexer1",
      "description": "testIndexer1",
      "expression": "Patient.name[0].given = \u0027Peter\u0027 | \u0027James\u0027",
      "status": "passed",
      "execution_time_ms": 0.504,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIndexer2",
      "description": "testIndexer2",
      "expression": "Patient.name[1].given = \u0027Jim\u0027",
      "status": "passed",
      "execution_time_ms": 0.2173,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSingle1",
      "description": "testSingle1",
      "expression": "Patient.name.first().single().exists()",
      "status": "passed",
      "execution_time_ms": 0.2046,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSingle2",
      "description": "testSingle2",
      "expression": "Patient.name.single().exists()",
      "status": "error",
      "execution_time_ms": 0.5812,
      "expected": [],
      "actual": null,
      "error": "Invocation of function \u0027exists\u0027 failed: Invocation of function \u0027single\u0027 failed: Sequence contains more than one element"
    },
    {
      "name": "testFirstLast1",
      "description": "testFirstLast1",
      "expression": "Patient.name.first().given = \u0027Peter\u0027 | \u0027James\u0027",
      "status": "passed",
      "execution_time_ms": 0.2067,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testFirstLast2",
      "description": "testFirstLast2",
      "expression": "Patient.name.last().given = \u0027Peter\u0027 | \u0027James\u0027",
      "status": "passed",
      "execution_time_ms": 0.359,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTail1",
      "description": "testTail1",
      "expression": "(0 | 1 | 2).tail() = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.5244,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTail2",
      "description": "testTail2",
      "expression": "Patient.name.tail().given = \u0027Jim\u0027 | \u0027Peter\u0027 | \u0027James\u0027",
      "status": "passed",
      "execution_time_ms": 0.2322,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSkip1",
      "description": "testSkip1",
      "expression": "(0 | 1 | 2).skip(1) = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.3104,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSkip2",
      "description": "testSkip2",
      "expression": "(0 | 1 | 2).skip(2) = 2",
      "status": "passed",
      "execution_time_ms": 0.2685,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSkip3",
      "description": "testSkip3",
      "expression": "Patient.name.skip(1).given.trace(\u0027test\u0027) = \u0027Jim\u0027 | \u0027Peter\u0027 | \u0027James\u0027",
      "status": "passed",
      "execution_time_ms": 0.379,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSkip4",
      "description": "testSkip4",
      "expression": "Patient.name.skip(3).given.exists() = false",
      "status": "passed",
      "execution_time_ms": 0.2387,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTake1",
      "description": "testTake1",
      "expression": "(0 | 1 | 2).take(1) = 0",
      "status": "passed",
      "execution_time_ms": 0.516,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTake2",
      "description": "testTake2",
      "expression": "(0 | 1 | 2).take(2) = 0 | 1",
      "status": "passed",
      "execution_time_ms": 0.3197,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTake3",
      "description": "testTake3",
      "expression": "Patient.name.take(1).given = \u0027Peter\u0027 | \u0027James\u0027",
      "status": "passed",
      "execution_time_ms": 0.2328,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTake4",
      "description": "testTake4",
      "expression": "Patient.name.take(2).given = \u0027Peter\u0027 | \u0027James\u0027 | \u0027Jim\u0027",
      "status": "passed",
      "execution_time_ms": 0.2623,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTake5",
      "description": "testTake5",
      "expression": "Patient.name.take(3).given.count() = 5",
      "status": "passed",
      "execution_time_ms": 0.243,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTake6",
      "description": "testTake6",
      "expression": "Patient.name.take(4).given.count() = 5",
      "status": "passed",
      "execution_time_ms": 0.5325,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTake7",
      "description": "testTake7",
      "expression": "Patient.name.take(0).given.exists() = false",
      "status": "passed",
      "execution_time_ms": 0.2479,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIif1",
      "description": "testIif1",
      "expression": "iif(Patient.name.exists(), \u0027named\u0027, \u0027unnamed\u0027) = \u0027named\u0027",
      "status": "passed",
      "execution_time_ms": 0.301,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIif2",
      "description": "testIif2",
      "expression": "iif(Patient.name.empty(), \u0027unnamed\u0027, \u0027named\u0027) = \u0027named\u0027",
      "status": "passed",
      "execution_time_ms": 0.2937,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIif3",
      "description": "testIif3",
      "expression": "iif(true, true, (1 | 2).toString())",
      "status": "passed",
      "execution_time_ms": 0.356,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIif4",
      "description": "testIif4",
      "expression": "iif(false, (1 | 2).toString(), true)",
      "status": "passed",
      "execution_time_ms": 0.5645,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToInteger1",
      "description": "testToInteger1",
      "expression": "\u00271\u0027.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.1374,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToInteger2",
      "description": "testToInteger2",
      "expression": "\u0027-1\u0027.toInteger() = -1",
      "status": "passed",
      "execution_time_ms": 0.1556,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToInteger3",
      "description": "testToInteger3",
      "expression": "\u00270\u0027.toInteger() = 0",
      "status": "passed",
      "execution_time_ms": 0.1301,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToInteger4",
      "description": "testToInteger4",
      "expression": "\u00270.0\u0027.toInteger().empty()",
      "status": "passed",
      "execution_time_ms": 0.2017,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToInteger5",
      "description": "testToInteger5",
      "expression": "\u0027st\u0027.toInteger().empty()",
      "status": "passed",
      "execution_time_ms": 0.1472,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToDecimal1",
      "description": "testToDecimal1",
      "expression": "\u00271\u0027.toDecimal() = 1",
      "status": "passed",
      "execution_time_ms": 0.1427,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToDecimal2",
      "description": "testToDecimal2",
      "expression": "\u0027-1\u0027.toInteger() = -1",
      "status": "passed",
      "execution_time_ms": 0.1463,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToDecimal3",
      "description": "testToDecimal3",
      "expression": "\u00270\u0027.toDecimal() = 0",
      "status": "passed",
      "execution_time_ms": 0.1292,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToDecimal4",
      "description": "testToDecimal4",
      "expression": "\u00270.0\u0027.toDecimal() = 0.0",
      "status": "passed",
      "execution_time_ms": 0.1311,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToDecimal5",
      "description": "testToDecimal5",
      "expression": "\u0027st\u0027.toDecimal().empty()",
      "status": "passed",
      "execution_time_ms": 0.147,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToString1",
      "description": "testToString1",
      "expression": "1.toString() = \u00271\u0027",
      "status": "passed",
      "execution_time_ms": 0.1384,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToString2",
      "description": "testToString2",
      "expression": "\u0027-1\u0027.toInteger() = -1",
      "status": "passed",
      "execution_time_ms": 0.3924,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToString3",
      "description": "testToString3",
      "expression": "0.toString() = \u00270\u0027",
      "status": "passed",
      "execution_time_ms": 0.124,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToString4",
      "description": "testToString4",
      "expression": "0.0.toString() = \u00270.0\u0027",
      "status": "passed",
      "execution_time_ms": 0.1297,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToString5",
      "description": "testToString5",
      "expression": "@2014-12-14.toString() = \u00272014-12-14\u0027",
      "status": "passed",
      "execution_time_ms": 0.3325,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCase1",
      "description": "testCase1",
      "expression": "\u0027t\u0027.upper() = \u0027T\u0027",
      "status": "passed",
      "execution_time_ms": 0.267,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCase2",
      "description": "testCase2",
      "expression": "\u0027t\u0027.lower() = \u0027t\u0027",
      "status": "passed",
      "execution_time_ms": 0.171,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCase3",
      "description": "testCase3",
      "expression": "\u0027T\u0027.upper() = \u0027T\u0027",
      "status": "passed",
      "execution_time_ms": 0.124,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCase4",
      "description": "testCase4",
      "expression": "\u0027T\u0027.lower() = \u0027t\u0027",
      "status": "passed",
      "execution_time_ms": 0.1537,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToChars1",
      "description": "testToChars1",
      "expression": "\u0027t2\u0027.toChars() = \u0027t\u0027 | \u00272\u0027",
      "status": "passed",
      "execution_time_ms": 0.9141,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSubstring1",
      "description": "testSubstring1",
      "expression": "\u002712345\u0027.substring(2) = \u0027345\u0027",
      "status": "passed",
      "execution_time_ms": 0.1883,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSubstring2",
      "description": "testSubstring2",
      "expression": "\u002712345\u0027.substring(2,1) = \u00273\u0027",
      "status": "passed",
      "execution_time_ms": 0.2183,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSubstring3",
      "description": "testSubstring3",
      "expression": "\u002712345\u0027.substring(2,5) = \u0027345\u0027",
      "status": "passed",
      "execution_time_ms": 0.7559,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSubstring4",
      "description": "testSubstring4",
      "expression": "\u002712345\u0027.substring(25).empty()",
      "status": "passed",
      "execution_time_ms": 0.1802,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSubstring5",
      "description": "testSubstring5",
      "expression": "\u002712345\u0027.substring(-1).empty()",
      "status": "passed",
      "execution_time_ms": 0.1856,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStartsWith1",
      "description": "testStartsWith1",
      "expression": "\u002712345\u0027.startsWith(\u00272\u0027) = false",
      "status": "passed",
      "execution_time_ms": 0.2977,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStartsWith2",
      "description": "testStartsWith2",
      "expression": "\u002712345\u0027.startsWith(\u00271\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.1643,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStartsWith3",
      "description": "testStartsWith3",
      "expression": "\u002712345\u0027.startsWith(\u002712\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.1527,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStartsWith4",
      "description": "testStartsWith4",
      "expression": "\u002712345\u0027.startsWith(\u002713\u0027) = false",
      "status": "passed",
      "execution_time_ms": 0.1602,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStartsWith5",
      "description": "testStartsWith5",
      "expression": "\u002712345\u0027.startsWith(\u002712345\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.1599,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStartsWith6",
      "description": "testStartsWith6",
      "expression": "\u002712345\u0027.startsWith(\u0027123456\u0027) = false",
      "status": "passed",
      "execution_time_ms": 0.1478,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testStartsWith7",
      "description": "testStartsWith7",
      "expression": "\u002712345\u0027.startsWith(\u0027\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.5427,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEndsWith1",
      "description": "testEndsWith1",
      "expression": "\u002712345\u0027.endsWith(\u00272\u0027) = false",
      "status": "passed",
      "execution_time_ms": 0.1737,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEndsWith2",
      "description": "testEndsWith2",
      "expression": "\u002712345\u0027.endsWith(\u00275\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.1447,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEndsWith3",
      "description": "testEndsWith3",
      "expression": "\u002712345\u0027.endsWith(\u002745\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.137,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEndsWith4",
      "description": "testEndsWith4",
      "expression": "\u002712345\u0027.endsWith(\u002735\u0027) = false",
      "status": "passed",
      "execution_time_ms": 0.1385,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEndsWith5",
      "description": "testEndsWith5",
      "expression": "\u002712345\u0027.endsWith(\u002712345\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.1358,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEndsWith6",
      "description": "testEndsWith6",
      "expression": "\u002712345\u0027.endsWith(\u0027012345\u0027) = false",
      "status": "passed",
      "execution_time_ms": 0.1439,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEndsWith7",
      "description": "testEndsWith7",
      "expression": "\u002712345\u0027.endsWith(\u0027\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.1401,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testContainsString1",
      "description": "testContainsString1",
      "expression": "\u002712345\u0027.contains(\u00276\u0027) = false",
      "status": "passed",
      "execution_time_ms": 0.1547,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testContainsString2",
      "description": "testContainsString2",
      "expression": "\u002712345\u0027.contains(\u00275\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.1378,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testContainsString3",
      "description": "testContainsString3",
      "expression": "\u002712345\u0027.contains(\u002745\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.4529,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testContainsString4",
      "description": "testContainsString4",
      "expression": "\u002712345\u0027.contains(\u002735\u0027) = false",
      "status": "passed",
      "execution_time_ms": 0.1603,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testContainsString5",
      "description": "testContainsString5",
      "expression": "\u002712345\u0027.contains(\u002712345\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.1525,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testContainsString6",
      "description": "testContainsString6",
      "expression": "\u002712345\u0027.contains(\u0027012345\u0027) = false",
      "status": "passed",
      "execution_time_ms": 0.1566,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testContainsString7",
      "description": "testContainsString7",
      "expression": "\u002712345\u0027.contains(\u0027\u0027) = true",
      "status": "passed",
      "execution_time_ms": 0.1489,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLength1",
      "description": "testLength1",
      "expression": "\u0027123456\u0027.length() = 6",
      "status": "passed",
      "execution_time_ms": 0.1422,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLength2",
      "description": "testLength2",
      "expression": "\u002712345\u0027.length() = 5",
      "status": "passed",
      "execution_time_ms": 0.1399,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLength3",
      "description": "testLength3",
      "expression": "\u0027123\u0027.length() = 3",
      "status": "passed",
      "execution_time_ms": 0.1304,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLength4",
      "description": "testLength4",
      "expression": "\u00271\u0027.length() = 1",
      "status": "passed",
      "execution_time_ms": 0.1233,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLength5",
      "description": "testLength5",
      "expression": "\u0027\u0027.length() = 0",
      "status": "passed",
      "execution_time_ms": 0.1227,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027test\u0027.encode(\u0027base64\u0027)",
      "status": "passed",
      "execution_time_ms": 0.3989,
      "expected": [],
      "actual": [
        "dGVzdA=="
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027test\u0027.encode(\u0027hex\u0027)",
      "status": "passed",
      "execution_time_ms": 0.6625,
      "expected": [],
      "actual": [
        "74657374"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027subjects?_d\u0027.encode(\u0027base64\u0027)",
      "status": "passed",
      "execution_time_ms": 0.1159,
      "expected": [],
      "actual": [
        "c3ViamVjdHM/X2Q="
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027subjects?_d\u0027.encode(\u0027urlbase64\u0027)",
      "status": "passed",
      "execution_time_ms": 0.1885,
      "expected": [],
      "actual": [
        "c3ViamVjdHM_X2Q="
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027dGVzdA==\u0027.decode(\u0027base64\u0027)",
      "status": "passed",
      "execution_time_ms": 0.3186,
      "expected": [],
      "actual": [
        "test"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u002774657374\u0027.decode(\u0027hex\u0027)",
      "status": "passed",
      "execution_time_ms": 1.2265,
      "expected": [],
      "actual": [
        "test"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027c3ViamVjdHM/X2Q=\u0027.decode(\u0027base64\u0027)",
      "status": "passed",
      "execution_time_ms": 0.1399,
      "expected": [],
      "actual": [
        "subjects?_d"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027c3ViamVjdHM_X2Q=\u0027.decode(\u0027urlbase64\u0027)",
      "status": "passed",
      "execution_time_ms": 0.1648,
      "expected": [],
      "actual": [
        "subjects?_d"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027\u00221\u003C2\u0022\u0027.escape(\u0027html\u0027)",
      "status": "passed",
      "execution_time_ms": 0.2218,
      "expected": [],
      "actual": [
        "\u0026quot;1\u0026lt;2\u0026quot;"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027\u00221\u003C2\u0022\u0027.escape(\u0027json\u0027)",
      "status": "passed",
      "execution_time_ms": 0.577,
      "expected": [],
      "actual": [
        "\\\u00221\u003C2\\\u0022"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027\u0026quot;1\u0026lt;2\u0026quot;\u0027.unescape(\u0027html\u0027)",
      "status": "passed",
      "execution_time_ms": 1.0067,
      "expected": [],
      "actual": [
        "\u00221\u003C2\u0022"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027\\\u00221\u003C2\\\u0022\u0027.unescape(\u0027json\u0027)",
      "status": "passed",
      "execution_time_ms": 0.172,
      "expected": [],
      "actual": [
        "\u00221\u003C2\u0022"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027123456\u0027.trim().length() = 6",
      "status": "passed",
      "execution_time_ms": 0.2359,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027123 456\u0027.trim().length() = 7",
      "status": "passed",
      "execution_time_ms": 0.6478,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027 123456 \u0027.trim().length() = 6",
      "status": "passed",
      "execution_time_ms": 0.168,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027  \u0027.trim().length() = 0",
      "status": "passed",
      "execution_time_ms": 0.1597,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "\u0027Peter,James,Jim,Peter,James\u0027.split(\u0027,\u0027).count() = 5",
      "status": "passed",
      "execution_time_ms": 0.3299,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "name.given.join(\u0027,\u0027)",
      "status": "passed",
      "execution_time_ms": 0.3898,
      "expected": [],
      "actual": [
        "Peter,James,Jim,Peter,James"
      ]
    },
    {
      "name": "testTrace1",
      "description": "testTrace1",
      "expression": "name.given.trace(\u0027test\u0027).count() = 5",
      "status": "passed",
      "execution_time_ms": 0.2337,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTrace2",
      "description": "testTrace2",
      "expression": "name.trace(\u0027test\u0027, given).count() = 3",
      "status": "passed",
      "execution_time_ms": 0.4896,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToday1",
      "description": "testToday1",
      "expression": "Patient.birthDate \u003C today()",
      "status": "passed",
      "execution_time_ms": 0.2338,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testToday2",
      "description": "testToday2",
      "expression": "today().toString().length() = 10",
      "status": "passed",
      "execution_time_ms": 0.5674,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNow1",
      "description": "testNow1",
      "expression": "Patient.birthDate \u003C now()",
      "status": "passed",
      "execution_time_ms": 0.1922,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNow2",
      "description": "testNow2",
      "expression": "now().toString().length() \u003E 10",
      "status": "passed",
      "execution_time_ms": 0.2564,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality1",
      "description": "testEquality1",
      "expression": "1 = 1",
      "status": "passed",
      "execution_time_ms": 0.0949,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality2",
      "description": "testEquality2",
      "expression": "{} = {}",
      "status": "passed",
      "execution_time_ms": 0.1085,
      "expected": [],
      "actual": []
    },
    {
      "name": "testEquality3",
      "description": "testEquality3",
      "expression": "true = {}",
      "status": "passed",
      "execution_time_ms": 0.098,
      "expected": [],
      "actual": []
    },
    {
      "name": "testEquality4",
      "description": "testEquality4",
      "expression": "(1) = (1)",
      "status": "passed",
      "execution_time_ms": 0.1966,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality5",
      "description": "testEquality5",
      "expression": "(1 | 2) = (1 | 2)",
      "status": "passed",
      "execution_time_ms": 0.2641,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality6",
      "description": "testEquality6",
      "expression": "(1 | 2 | 3) = (1 | 2 | 3)",
      "status": "passed",
      "execution_time_ms": 0.3226,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality7",
      "description": "testEquality7",
      "expression": "(1 | 1) = (1 | 2 | {})",
      "status": "passed",
      "execution_time_ms": 0.5797,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquality8",
      "description": "testEquality8",
      "expression": "1 = 2",
      "status": "passed",
      "execution_time_ms": 0.0892,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquality9",
      "description": "testEquality9",
      "expression": "\u0027a\u0027 = \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0782,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality10",
      "description": "testEquality10",
      "expression": "\u0027a\u0027 = \u0027A\u0027",
      "status": "passed",
      "execution_time_ms": 0.0752,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquality11",
      "description": "testEquality11",
      "expression": "\u0027a\u0027 = \u0027b\u0027",
      "status": "passed",
      "execution_time_ms": 0.075,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquality12",
      "description": "testEquality12",
      "expression": "1.1 = 1.1",
      "status": "passed",
      "execution_time_ms": 0.0983,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality13",
      "description": "testEquality13",
      "expression": "1.1 = 1.2",
      "status": "passed",
      "execution_time_ms": 0.0895,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquality14",
      "description": "testEquality14",
      "expression": "1.10 = 1.1",
      "status": "passed",
      "execution_time_ms": 0.0904,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality15",
      "description": "testEquality15",
      "expression": "0 = 0",
      "status": "passed",
      "execution_time_ms": 0.0867,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality16",
      "description": "testEquality16",
      "expression": "0.0 = 0",
      "status": "passed",
      "execution_time_ms": 0.0883,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality17",
      "description": "testEquality17",
      "expression": "@2012-04-15 = @2012-04-15",
      "status": "passed",
      "execution_time_ms": 0.0889,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality18",
      "description": "testEquality18",
      "expression": "@2012-04-15 = @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.083,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquality19",
      "description": "testEquality19",
      "expression": "@2012-04-15 = @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.0855,
      "expected": [],
      "actual": []
    },
    {
      "name": "testEquality20",
      "description": "testEquality20",
      "expression": "@2012-04-15T15:00:00 = @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.084,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquality21",
      "description": "testEquality21",
      "expression": "@2012-04-15T15:30:31 = @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.3348,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality22",
      "description": "testEquality22",
      "expression": "@2012-04-15T15:30:31 = @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.0834,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquality23",
      "description": "testEquality23",
      "expression": "@2012-04-15T15:00:00Z = @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.0833,
      "expected": [],
      "actual": []
    },
    {
      "name": "testEquality24",
      "description": "testEquality24",
      "expression": "@2012-04-15T15:00:00\u002B02:00 = @2012-04-15T16:00:00\u002B03:00",
      "status": "passed",
      "execution_time_ms": 0.0832,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality25",
      "description": "testEquality25",
      "expression": "name = name",
      "status": "passed",
      "execution_time_ms": 0.6922,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality26",
      "description": "testEquality26",
      "expression": "name.take(2) = name.take(2).first() | name.take(2).last()",
      "status": "passed",
      "execution_time_ms": 0.479,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquality27",
      "description": "testEquality27",
      "expression": "name.take(2) = name.take(2).last() | name.take(2).first()",
      "status": "passed",
      "execution_time_ms": 0.4372,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquality28",
      "description": "testEquality28",
      "expression": "Observation.value = 185 \u0027[lb_av]\u0027",
      "status": "passed",
      "execution_time_ms": 0.2495,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNEquality1",
      "description": "testNEquality1",
      "expression": "1 != 1",
      "status": "passed",
      "execution_time_ms": 0.382,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNEquality2",
      "description": "testNEquality2",
      "expression": "{} != {}",
      "status": "passed",
      "execution_time_ms": 0.105,
      "expected": [],
      "actual": []
    },
    {
      "name": "testNEquality3",
      "description": "testNEquality3",
      "expression": "1 != 2",
      "status": "passed",
      "execution_time_ms": 0.0913,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNEquality4",
      "description": "testNEquality4",
      "expression": "\u0027a\u0027 != \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0805,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNEquality5",
      "description": "testNEquality5",
      "expression": "\u0027a\u0027 != \u0027b\u0027",
      "status": "passed",
      "execution_time_ms": 0.0779,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNEquality6",
      "description": "testNEquality6",
      "expression": "1.1 != 1.1",
      "status": "passed",
      "execution_time_ms": 0.0943,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNEquality7",
      "description": "testNEquality7",
      "expression": "1.1 != 1.2",
      "status": "passed",
      "execution_time_ms": 0.0946,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNEquality8",
      "description": "testNEquality8",
      "expression": "1.10 != 1.1",
      "status": "passed",
      "execution_time_ms": 0.1017,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNEquality9",
      "description": "testNEquality9",
      "expression": "0 != 0",
      "status": "passed",
      "execution_time_ms": 0.0887,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNEquality10",
      "description": "testNEquality10",
      "expression": "0.0 != 0",
      "status": "passed",
      "execution_time_ms": 0.0901,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNEquality11",
      "description": "testNEquality11",
      "expression": "@2012-04-15 != @2012-04-15",
      "status": "passed",
      "execution_time_ms": 0.0886,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNEquality12",
      "description": "testNEquality12",
      "expression": "@2012-04-15 != @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.0846,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNEquality13",
      "description": "testNEquality13",
      "expression": "@2012-04-15 != @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.0862,
      "expected": [],
      "actual": []
    },
    {
      "name": "testNEquality14",
      "description": "testNEquality14",
      "expression": "@2012-04-15T15:00:00 != @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.0862,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNEquality15",
      "description": "testNEquality15",
      "expression": "@2012-04-15T15:30:31 != @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.0854,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNEquality16",
      "description": "testNEquality16",
      "expression": "@2012-04-15T15:30:31 != @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.0852,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNEquality17",
      "description": "testNEquality17",
      "expression": "@2012-04-15T15:00:00Z != @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.0946,
      "expected": [],
      "actual": []
    },
    {
      "name": "testNEquality18",
      "description": "testNEquality18",
      "expression": "@2012-04-15T15:00:00\u002B02:00 != @2012-04-15T16:00:00\u002B03:00",
      "status": "passed",
      "execution_time_ms": 0.1047,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNEquality19",
      "description": "testNEquality19",
      "expression": "name != name",
      "status": "passed",
      "execution_time_ms": 0.3614,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNEquality20",
      "description": "testNEquality20",
      "expression": "name.take(2) != name.take(2).first() | name.take(2).last()",
      "status": "passed",
      "execution_time_ms": 0.4528,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNEquality21",
      "description": "testNEquality21",
      "expression": "name.take(2) != name.take(2).last() | name.take(2).first()",
      "status": "passed",
      "execution_time_ms": 0.4342,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNEquality22",
      "description": "testNEquality22",
      "expression": "1.2 / 1.8 != 0.6666667",
      "status": "passed",
      "execution_time_ms": 0.4162,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNEquality23",
      "description": "testNEquality23",
      "expression": "1.2 / 1.8 != 0.67",
      "status": "passed",
      "execution_time_ms": 0.1424,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNEquality24",
      "description": "testNEquality24",
      "expression": "Observation.value != 185 \u0027kg\u0027",
      "status": "passed",
      "execution_time_ms": 0.1297,
      "expected": [],
      "actual": []
    },
    {
      "name": "testEquivalent1",
      "description": "testEquivalent1",
      "expression": "1 ~ 1",
      "status": "passed",
      "execution_time_ms": 0.1137,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent2",
      "description": "testEquivalent2",
      "expression": "{} ~ {}",
      "status": "passed",
      "execution_time_ms": 0.3053,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent3",
      "description": "testEquivalent3",
      "expression": "1 ~ {}",
      "status": "passed",
      "execution_time_ms": 0.1017,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquivalent4",
      "description": "testEquivalent4",
      "expression": "1 ~ 2",
      "status": "passed",
      "execution_time_ms": 0.0907,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquivalent5",
      "description": "testEquivalent5",
      "expression": "\u0027a\u0027 ~ \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 1.3609,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent6",
      "description": "testEquivalent6",
      "expression": "\u0027a\u0027 ~ \u0027A\u0027",
      "status": "passed",
      "execution_time_ms": 0.0921,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent7",
      "description": "testEquivalent7",
      "expression": "\u0027a\u0027 ~ \u0027b\u0027",
      "status": "passed",
      "execution_time_ms": 0.0792,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquivalent8",
      "description": "testEquivalent8",
      "expression": "1.1 ~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.101,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent9",
      "description": "testEquivalent9",
      "expression": "1.1 ~ 1.2",
      "status": "passed",
      "execution_time_ms": 0.094,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquivalent10",
      "description": "testEquivalent10",
      "expression": "1.10 ~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.0918,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent11",
      "description": "testEquivalent11",
      "expression": "1.2 / 1.8 ~ 0.67",
      "status": "passed",
      "execution_time_ms": 0.1277,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent12",
      "description": "testEquivalent12",
      "expression": "0 ~ 0",
      "status": "passed",
      "execution_time_ms": 0.0903,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent13",
      "description": "testEquivalent13",
      "expression": "0.0 ~ 0",
      "status": "passed",
      "execution_time_ms": 0.0902,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent14",
      "description": "testEquivalent14",
      "expression": "@2012-04-15 ~ @2012-04-15",
      "status": "passed",
      "execution_time_ms": 0.1193,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent15",
      "description": "testEquivalent15",
      "expression": "@2012-04-15 ~ @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.0869,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquivalent16",
      "description": "testEquivalent16",
      "expression": "@2012-04-15 ~ @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.1085,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquivalent17",
      "description": "testEquivalent17",
      "expression": "@2012-04-15T15:30:31 ~ @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.0884,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent18",
      "description": "testEquivalent18",
      "expression": "@2012-04-15T15:30:31 ~ @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.3154,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testEquivalent19",
      "description": "testEquivalent19",
      "expression": "name ~ name",
      "status": "passed",
      "execution_time_ms": 0.2132,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent20",
      "description": "testEquivalent20",
      "expression": "name.take(2).given ~ name.take(2).first().given | name.take(2).last().given",
      "status": "passed",
      "execution_time_ms": 0.5345,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent21",
      "description": "testEquivalent21",
      "expression": "name.take(2).given ~ name.take(2).last().given | name.take(2).first().given",
      "status": "passed",
      "execution_time_ms": 0.4869,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testEquivalent22",
      "description": "testEquivalent22",
      "expression": "Observation.value ~ 185 \u0027[lb_av]\u0027",
      "status": "passed",
      "execution_time_ms": 0.1299,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNotEquivalent1",
      "description": "testNotEquivalent1",
      "expression": "1 !~ 1",
      "status": "passed",
      "execution_time_ms": 0.1175,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent2",
      "description": "testNotEquivalent2",
      "expression": "{} !~ {}",
      "status": "passed",
      "execution_time_ms": 0.3251,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent3",
      "description": "testNotEquivalent3",
      "expression": "{} !~ 1",
      "status": "passed",
      "execution_time_ms": 0.1013,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNotEquivalent4",
      "description": "testNotEquivalent4",
      "expression": "1 !~ 2",
      "status": "passed",
      "execution_time_ms": 0.0959,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNotEquivalent5",
      "description": "testNotEquivalent5",
      "expression": "\u0027a\u0027 !~ \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0824,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent6",
      "description": "testNotEquivalent6",
      "expression": "\u0027a\u0027 !~ \u0027A\u0027",
      "status": "passed",
      "execution_time_ms": 0.0811,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent7",
      "description": "testNotEquivalent7",
      "expression": "\u0027a\u0027 !~ \u0027b\u0027",
      "status": "passed",
      "execution_time_ms": 0.0811,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNotEquivalent8",
      "description": "testNotEquivalent8",
      "expression": "1.1 !~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.0969,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent9",
      "description": "testNotEquivalent9",
      "expression": "1.1 !~ 1.2",
      "status": "passed",
      "execution_time_ms": 0.0942,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNotEquivalent10",
      "description": "testNotEquivalent10",
      "expression": "1.10 !~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.0941,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent11",
      "description": "testNotEquivalent11",
      "expression": "0 !~ 0",
      "status": "passed",
      "execution_time_ms": 0.091,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent12",
      "description": "testNotEquivalent12",
      "expression": "0.0 !~ 0",
      "status": "passed",
      "execution_time_ms": 0.0933,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent13",
      "description": "testNotEquivalent13",
      "expression": "1.2 / 1.8 !~ 0.6",
      "status": "passed",
      "execution_time_ms": 0.1286,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNotEquivalent14",
      "description": "testNotEquivalent14",
      "expression": "@2012-04-15 !~ @2012-04-15",
      "status": "passed",
      "execution_time_ms": 0.0925,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent15",
      "description": "testNotEquivalent15",
      "expression": "@2012-04-15 !~ @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.0856,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNotEquivalent16",
      "description": "testNotEquivalent16",
      "expression": "@2012-04-15 !~ @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.0866,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNotEquivalent17",
      "description": "testNotEquivalent17",
      "expression": "@2012-04-15T15:30:31 !~ @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.2883,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent18",
      "description": "testNotEquivalent18",
      "expression": "@2012-04-15T15:30:31 !~ @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.0896,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testNotEquivalent19",
      "description": "testNotEquivalent19",
      "expression": "name !~ name",
      "status": "passed",
      "execution_time_ms": 0.1584,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent20",
      "description": "testNotEquivalent20",
      "expression": "name.take(2).given !~ name.take(2).first().given | name.take(2).last().given",
      "status": "passed",
      "execution_time_ms": 0.483,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent21",
      "description": "testNotEquivalent21",
      "expression": "name.take(2).given !~ name.take(2).last().given | name.take(2).first().given",
      "status": "passed",
      "execution_time_ms": 0.4815,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testNotEquivalent22",
      "description": "testNotEquivalent22",
      "expression": "Observation.value !~ 185 \u0027kg\u0027",
      "status": "passed",
      "execution_time_ms": 0.1387,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessThan1",
      "description": "testLessThan1",
      "expression": "1 \u003C 2",
      "status": "passed",
      "execution_time_ms": 0.0912,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessThan2",
      "description": "testLessThan2",
      "expression": "1.0 \u003C 1.2",
      "status": "passed",
      "execution_time_ms": 0.3165,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessThan3",
      "description": "testLessThan3",
      "expression": "\u0027a\u0027 \u003C \u0027b\u0027",
      "status": "passed",
      "execution_time_ms": 0.1709,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessThan4",
      "description": "testLessThan4",
      "expression": "\u0027A\u0027 \u003C \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0815,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessThan5",
      "description": "testLessThan5",
      "expression": "@2014-12-12 \u003C @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.0902,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessThan6",
      "description": "testLessThan6",
      "expression": "@2014-12-13T12:00:00 \u003C @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.084,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessThan7",
      "description": "testLessThan7",
      "expression": "@T12:00:00 \u003C @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.3303,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessThan8",
      "description": "testLessThan8",
      "expression": "1 \u003C 1",
      "status": "passed",
      "execution_time_ms": 0.118,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan9",
      "description": "testLessThan9",
      "expression": "1.0 \u003C 1.0",
      "status": "passed",
      "execution_time_ms": 0.1063,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan10",
      "description": "testLessThan10",
      "expression": "\u0027a\u0027 \u003C \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0826,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan11",
      "description": "testLessThan11",
      "expression": "\u0027A\u0027 \u003C \u0027A\u0027",
      "status": "passed",
      "execution_time_ms": 0.0787,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan12",
      "description": "testLessThan12",
      "expression": "@2014-12-12 \u003C @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.1011,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan13",
      "description": "testLessThan13",
      "expression": "@2014-12-13T12:00:00 \u003C @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.0923,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan14",
      "description": "testLessThan14",
      "expression": "@T12:00:00 \u003C @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.2199,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan15",
      "description": "testLessThan15",
      "expression": "2 \u003C 1",
      "status": "passed",
      "execution_time_ms": 0.2229,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan16",
      "description": "testLessThan16",
      "expression": "1.1 \u003C 1.0",
      "status": "passed",
      "execution_time_ms": 0.1121,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan17",
      "description": "testLessThan17",
      "expression": "\u0027b\u0027 \u003C \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.3599,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan18",
      "description": "testLessThan18",
      "expression": "\u0027B\u0027 \u003C \u0027A\u0027",
      "status": "passed",
      "execution_time_ms": 0.1063,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan19",
      "description": "testLessThan19",
      "expression": "@2014-12-13 \u003C @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.1052,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan20",
      "description": "testLessThan20",
      "expression": "@2014-12-13T12:00:01 \u003C @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.0916,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan21",
      "description": "testLessThan21",
      "expression": "@T12:00:01 \u003C @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.4788,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan22",
      "description": "testLessThan22",
      "expression": "Observation.value \u003C 200 \u0027[lb_av]\u0027",
      "status": "passed",
      "execution_time_ms": 0.247,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessThan23",
      "description": "testLessThan23",
      "expression": "@2018-03 \u003C @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.0888,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessThan24",
      "description": "testLessThan24",
      "expression": "@2018-03-01T10 \u003C @2018-03-01T10:30",
      "status": "passed",
      "execution_time_ms": 0.0834,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessThan25",
      "description": "testLessThan25",
      "expression": "@T10 \u003C @T10:30",
      "status": "passed",
      "execution_time_ms": 0.0836,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessThan26",
      "description": "testLessThan26",
      "expression": "@2018-03-01T10:30:00 \u003C @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.0823,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessThan27",
      "description": "testLessThan27",
      "expression": "@T10:30:00 \u003C @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.0835,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessOrEqual1",
      "description": "testLessOrEqual1",
      "expression": "1 \u003C= 2",
      "status": "passed",
      "execution_time_ms": 0.1257,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual2",
      "description": "testLessOrEqual2",
      "expression": "1.0 \u003C= 1.2",
      "status": "passed",
      "execution_time_ms": 0.0963,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual3",
      "description": "testLessOrEqual3",
      "expression": "\u0027a\u0027 \u003C= \u0027b\u0027",
      "status": "passed",
      "execution_time_ms": 0.0821,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual4",
      "description": "testLessOrEqual4",
      "expression": "\u0027A\u0027 \u003C= \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0719,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual5",
      "description": "testLessOrEqual5",
      "expression": "@2014-12-12 \u003C= @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.0828,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual6",
      "description": "testLessOrEqual6",
      "expression": "@2014-12-13T12:00:00 \u003C= @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.0865,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual7",
      "description": "testLessOrEqual7",
      "expression": "@T12:00:00 \u003C= @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.0827,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual8",
      "description": "testLessOrEqual8",
      "expression": "1 \u003C= 1",
      "status": "passed",
      "execution_time_ms": 0.093,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual9",
      "description": "testLessOrEqual9",
      "expression": "1.0 \u003C= 1.0",
      "status": "passed",
      "execution_time_ms": 0.0928,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual10",
      "description": "testLessOrEqual10",
      "expression": "\u0027a\u0027 \u003C= \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.073,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual11",
      "description": "testLessOrEqual11",
      "expression": "\u0027A\u0027 \u003C= \u0027A\u0027",
      "status": "passed",
      "execution_time_ms": 0.0726,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual12",
      "description": "testLessOrEqual12",
      "expression": "@2014-12-12 \u003C= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.4842,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual13",
      "description": "testLessOrEqual13",
      "expression": "@2014-12-13T12:00:00 \u003C= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.1057,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual14",
      "description": "testLessOrEqual14",
      "expression": "@T12:00:00 \u003C= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.1117,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual15",
      "description": "testLessOrEqual15",
      "expression": "2 \u003C= 1",
      "status": "passed",
      "execution_time_ms": 0.0929,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessOrEqual16",
      "description": "testLessOrEqual16",
      "expression": "1.1 \u003C= 1.0",
      "status": "passed",
      "execution_time_ms": 0.0976,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessOrEqual17",
      "description": "testLessOrEqual17",
      "expression": "\u0027b\u0027 \u003C= \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0742,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessOrEqual18",
      "description": "testLessOrEqual18",
      "expression": "\u0027B\u0027 \u003C= \u0027A\u0027",
      "status": "passed",
      "execution_time_ms": 0.072,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessOrEqual19",
      "description": "testLessOrEqual19",
      "expression": "@2014-12-13 \u003C= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.0821,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessOrEqual20",
      "description": "testLessOrEqual20",
      "expression": "@2014-12-13T12:00:01 \u003C= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.0814,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessOrEqual21",
      "description": "testLessOrEqual21",
      "expression": "@T12:00:01 \u003C= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.0802,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testLessOrEqual22",
      "description": "testLessOrEqual22",
      "expression": "Observation.value \u003C= 200 \u0027[lb_av]\u0027",
      "status": "passed",
      "execution_time_ms": 0.1353,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual23",
      "description": "testLessOrEqual23",
      "expression": "@2018-03 \u003C= @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.0784,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessOrEqual24",
      "description": "testLessOrEqual24",
      "expression": "@2018-03-01T10 \u003C= @2018-03-01T10:30",
      "status": "passed",
      "execution_time_ms": 0.0791,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessOrEqual25",
      "description": "testLessOrEqual25",
      "expression": "@T10 \u003C= @T10:30",
      "status": "passed",
      "execution_time_ms": 0.0773,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessOrEqual26",
      "description": "testLessOrEqual26",
      "expression": "@2018-03-01T10:30:00  \u003C= @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.0772,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLessOrEqual27",
      "description": "testLessOrEqual27",
      "expression": "@T10:30:00 \u003C= @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.077,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual1",
      "description": "testGreatorOrEqual1",
      "expression": "1 \u003E= 2",
      "status": "passed",
      "execution_time_ms": 0.1402,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreatorOrEqual2",
      "description": "testGreatorOrEqual2",
      "expression": "1.0 \u003E= 1.2",
      "status": "passed",
      "execution_time_ms": 0.092,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreatorOrEqual3",
      "description": "testGreatorOrEqual3",
      "expression": "\u0027a\u0027 \u003E= \u0027b\u0027",
      "status": "passed",
      "execution_time_ms": 0.4025,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreatorOrEqual4",
      "description": "testGreatorOrEqual4",
      "expression": "\u0027A\u0027 \u003E= \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0732,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreatorOrEqual5",
      "description": "testGreatorOrEqual5",
      "expression": "@2014-12-12 \u003E= @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.0811,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreatorOrEqual6",
      "description": "testGreatorOrEqual6",
      "expression": "@2014-12-13T12:00:00 \u003E= @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.0812,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreatorOrEqual7",
      "description": "testGreatorOrEqual7",
      "expression": "@T12:00:00 \u003E= @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.0798,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreatorOrEqual8",
      "description": "testGreatorOrEqual8",
      "expression": "1 \u003E= 1",
      "status": "passed",
      "execution_time_ms": 0.0862,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual9",
      "description": "testGreatorOrEqual9",
      "expression": "1.0 \u003E= 1.0",
      "status": "passed",
      "execution_time_ms": 0.0885,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual10",
      "description": "testGreatorOrEqual10",
      "expression": "\u0027a\u0027 \u003E= \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0725,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual11",
      "description": "testGreatorOrEqual11",
      "expression": "\u0027A\u0027 \u003E= \u0027A\u0027",
      "status": "passed",
      "execution_time_ms": 0.0712,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual12",
      "description": "testGreatorOrEqual12",
      "expression": "@2014-12-12 \u003E= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.0777,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual13",
      "description": "testGreatorOrEqual13",
      "expression": "@2014-12-13T12:00:00 \u003E= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.0796,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual14",
      "description": "testGreatorOrEqual14",
      "expression": "@T12:00:00 \u003E= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.0796,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual15",
      "description": "testGreatorOrEqual15",
      "expression": "2 \u003E= 1",
      "status": "passed",
      "execution_time_ms": 0.086,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual16",
      "description": "testGreatorOrEqual16",
      "expression": "1.1 \u003E= 1.0",
      "status": "passed",
      "execution_time_ms": 0.0873,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual17",
      "description": "testGreatorOrEqual17",
      "expression": "\u0027b\u0027 \u003E= \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0722,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual18",
      "description": "testGreatorOrEqual18",
      "expression": "\u0027B\u0027 \u003E= \u0027A\u0027",
      "status": "passed",
      "execution_time_ms": 0.0713,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual19",
      "description": "testGreatorOrEqual19",
      "expression": "@2014-12-13 \u003E= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.0778,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual20",
      "description": "testGreatorOrEqual20",
      "expression": "@2014-12-13T12:00:01 \u003E= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.0789,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual21",
      "description": "testGreatorOrEqual21",
      "expression": "@T12:00:01 \u003E= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.3694,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual22",
      "description": "testGreatorOrEqual22",
      "expression": "Observation.value \u003E= 100 \u0027[lb_av]\u0027",
      "status": "passed",
      "execution_time_ms": 0.1273,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual23",
      "description": "testGreatorOrEqual23",
      "expression": "@2018-03 \u003E= @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.0814,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreatorOrEqual24",
      "description": "testGreatorOrEqual24",
      "expression": "@2018-03-01T10 \u003E= @2018-03-01T10:30",
      "status": "passed",
      "execution_time_ms": 0.0792,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreatorOrEqual25",
      "description": "testGreatorOrEqual25",
      "expression": "@T10 \u003E= @T10:30",
      "status": "passed",
      "execution_time_ms": 0.0783,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreatorOrEqual26",
      "description": "testGreatorOrEqual26",
      "expression": "@2018-03-01T10:30:00 \u003E= @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.0782,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreatorOrEqual27",
      "description": "testGreatorOrEqual27",
      "expression": "@T10:30:00 \u003E= @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.078,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreaterThan1",
      "description": "testGreaterThan1",
      "expression": "1 \u003E 2",
      "status": "passed",
      "execution_time_ms": 0.0868,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan2",
      "description": "testGreaterThan2",
      "expression": "1.0 \u003E 1.2",
      "status": "passed",
      "execution_time_ms": 0.0896,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan3",
      "description": "testGreaterThan3",
      "expression": "\u0027a\u0027 \u003E \u0027b\u0027",
      "status": "passed",
      "execution_time_ms": 0.0737,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan4",
      "description": "testGreaterThan4",
      "expression": "\u0027A\u0027 \u003E \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0728,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan5",
      "description": "testGreaterThan5",
      "expression": "@2014-12-12 \u003E @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.0785,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan6",
      "description": "testGreaterThan6",
      "expression": "@2014-12-13T12:00:00 \u003E @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.0796,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan7",
      "description": "testGreaterThan7",
      "expression": "@T12:00:00 \u003E @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.0806,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan8",
      "description": "testGreaterThan8",
      "expression": "1 \u003E 1",
      "status": "passed",
      "execution_time_ms": 0.086,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan9",
      "description": "testGreaterThan9",
      "expression": "1.0 \u003E 1.0",
      "status": "passed",
      "execution_time_ms": 0.0878,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan10",
      "description": "testGreaterThan10",
      "expression": "\u0027a\u0027 \u003E \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0732,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan11",
      "description": "testGreaterThan11",
      "expression": "\u0027A\u0027 \u003E \u0027A\u0027",
      "status": "passed",
      "execution_time_ms": 0.0726,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan12",
      "description": "testGreaterThan12",
      "expression": "@2014-12-12 \u003E @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.079,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan13",
      "description": "testGreaterThan13",
      "expression": "@2014-12-13T12:00:00 \u003E @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.0967,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan14",
      "description": "testGreaterThan14",
      "expression": "@T12:00:00 \u003E @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.0882,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan15",
      "description": "testGreaterThan15",
      "expression": "2 \u003E 1",
      "status": "passed",
      "execution_time_ms": 0.0952,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreaterThan16",
      "description": "testGreaterThan16",
      "expression": "1.1 \u003E 1.0",
      "status": "passed",
      "execution_time_ms": 0.0999,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreaterThan17",
      "description": "testGreaterThan17",
      "expression": "\u0027b\u0027 \u003E \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.0841,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreaterThan18",
      "description": "testGreaterThan18",
      "expression": "\u0027B\u0027 \u003E \u0027A\u0027",
      "status": "passed",
      "execution_time_ms": 0.281,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreaterThan19",
      "description": "testGreaterThan19",
      "expression": "@2014-12-13 \u003E @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.0801,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreaterThan20",
      "description": "testGreaterThan20",
      "expression": "@2014-12-13T12:00:01 \u003E @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.08,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreaterThan21",
      "description": "testGreaterThan21",
      "expression": "@T12:00:01 \u003E @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.0793,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreaterThan22",
      "description": "testGreaterThan22",
      "expression": "Observation.value \u003E 100 \u0027[lb_av]\u0027",
      "status": "passed",
      "execution_time_ms": 0.1248,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testGreaterThan23",
      "description": "testGreaterThan23",
      "expression": "@2018-03 \u003E @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.0785,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreaterThan24",
      "description": "testGreaterThan24",
      "expression": "@2018-03-01T10 \u003E @2018-03-01T10:30",
      "status": "passed",
      "execution_time_ms": 0.0817,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreaterThan25",
      "description": "testGreaterThan25",
      "expression": "@T10 \u003E @T10:30",
      "status": "passed",
      "execution_time_ms": 0.079,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreaterThan26",
      "description": "testGreaterThan26",
      "expression": "@2018-03-01T10:30:00 \u003E @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.0793,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testGreaterThan27",
      "description": "testGreaterThan27",
      "expression": "@T10:30:00 \u003E @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.0782,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testUnion1",
      "description": "testUnion1",
      "expression": "(1 | 2 | 3).count() = 3",
      "status": "passed",
      "execution_time_ms": 0.2723,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testUnion2",
      "description": "testUnion2",
      "expression": "(1 | 2 | 2).count() = 2",
      "status": "passed",
      "execution_time_ms": 0.2417,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testUnion3",
      "description": "testUnion3",
      "expression": "(1|1).count() = 1",
      "status": "passed",
      "execution_time_ms": 0.4715,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testUnion4",
      "description": "testUnion4",
      "expression": "1.union(2).union(3).count() = 3",
      "status": "passed",
      "execution_time_ms": 0.3407,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testUnion5",
      "description": "testUnion5",
      "expression": "1.union(2.union(3)).count() = 3",
      "status": "passed",
      "execution_time_ms": 0.2641,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testUnion6",
      "description": "testUnion6",
      "expression": "(1 | 2).combine(2).count() = 3",
      "status": "passed",
      "execution_time_ms": 0.418,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testUnion7",
      "description": "testUnion7",
      "expression": "1.combine(1).count() = 2",
      "status": "passed",
      "execution_time_ms": 0.1965,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testUnion8",
      "description": "testUnion8",
      "expression": "1.combine(1).union(2).count() = 2",
      "status": "passed",
      "execution_time_ms": 0.2683,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntersect1",
      "description": "testIntersect1",
      "expression": "(1 | 2 | 3).intersect(2 | 4) = 2",
      "status": "passed",
      "execution_time_ms": 0.6822,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntersect2",
      "description": "testIntersect2",
      "expression": "(1 | 2).intersect(4).empty()",
      "status": "passed",
      "execution_time_ms": 0.2435,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntersect3",
      "description": "testIntersect3",
      "expression": "(1 | 2).intersect({}).empty()",
      "status": "passed",
      "execution_time_ms": 0.239,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIntersect4",
      "description": "testIntersect4",
      "expression": "1.combine(1).intersect(1).count() = 1",
      "status": "passed",
      "execution_time_ms": 0.2544,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testExclude1",
      "description": "testExclude1",
      "expression": "(1 | 2 | 3).exclude(2 | 4) = 1 | 3",
      "status": "passed",
      "execution_time_ms": 0.4419,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testExclude2",
      "description": "testExclude2",
      "expression": "(1 | 2).exclude(4) = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.5197,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testExclude3",
      "description": "testExclude3",
      "expression": "(1 | 2).exclude({}) = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.2817,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testExclude4",
      "description": "testExclude4",
      "expression": "1.combine(1).exclude(2).count() = 2",
      "status": "passed",
      "execution_time_ms": 0.2549,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIn1",
      "description": "testIn1",
      "expression": "1 in (1 | 2 | 3)",
      "status": "passed",
      "execution_time_ms": 0.2416,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIn2",
      "description": "testIn2",
      "expression": "1 in (2 | 3)",
      "status": "passed",
      "execution_time_ms": 0.1844,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testIn3",
      "description": "testIn3",
      "expression": "\u0027a\u0027 in (\u0027a\u0027 | \u0027c\u0027 | \u0027d\u0027)",
      "status": "passed",
      "execution_time_ms": 0.1905,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testIn4",
      "description": "testIn4",
      "expression": "\u0027b\u0027 in (\u0027a\u0027 | \u0027c\u0027 | \u0027d\u0027)",
      "status": "passed",
      "execution_time_ms": 0.3943,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testContainsCollection1",
      "description": "testContainsCollection1",
      "expression": "(1 | 2 | 3) contains 1",
      "status": "passed",
      "execution_time_ms": 0.234,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testContainsCollection2",
      "description": "testContainsCollection2",
      "expression": "(2 | 3) contains 1 ",
      "status": "passed",
      "execution_time_ms": 0.1812,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testContainsCollection3",
      "description": "testContainsCollection3",
      "expression": "(\u0027a\u0027 | \u0027c\u0027 | \u0027d\u0027) contains \u0027a\u0027",
      "status": "passed",
      "execution_time_ms": 0.1894,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testContainsCollection4",
      "description": "testContainsCollection4",
      "expression": "(\u0027a\u0027 | \u0027c\u0027 | \u0027d\u0027) contains \u0027b\u0027",
      "status": "passed",
      "execution_time_ms": 0.1882,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": "testBooleanLogicAnd1",
      "description": "testBooleanLogicAnd1",
      "expression": "(true and true) = true",
      "status": "passed",
      "execution_time_ms": 0.3135,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicAnd2",
      "description": "testBooleanLogicAnd2",
      "expression": "(true and false) = false",
      "status": "passed",
      "execution_time_ms": 0.1902,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicAnd3",
      "description": "testBooleanLogicAnd3",
      "expression": "(true and {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.1859,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicAnd4",
      "description": "testBooleanLogicAnd4",
      "expression": "(false and true) = false",
      "status": "passed",
      "execution_time_ms": 0.425,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicAnd5",
      "description": "testBooleanLogicAnd5",
      "expression": "(false and false) = false",
      "status": "passed",
      "execution_time_ms": 0.1813,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicAnd6",
      "description": "testBooleanLogicAnd6",
      "expression": "(false and {}) = false",
      "status": "passed",
      "execution_time_ms": 0.1899,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicAnd7",
      "description": "testBooleanLogicAnd7",
      "expression": "({} and true).empty()",
      "status": "passed",
      "execution_time_ms": 0.2037,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicAnd8",
      "description": "testBooleanLogicAnd8",
      "expression": "({} and false) = false",
      "status": "passed",
      "execution_time_ms": 0.192,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicAnd9",
      "description": "testBooleanLogicAnd9",
      "expression": "({} and {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.1923,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicOr1",
      "description": "testBooleanLogicOr1",
      "expression": "(true or true) = true",
      "status": "passed",
      "execution_time_ms": 0.1772,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicOr2",
      "description": "testBooleanLogicOr2",
      "expression": "(true or false) = true",
      "status": "passed",
      "execution_time_ms": 0.4399,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicOr3",
      "description": "testBooleanLogicOr3",
      "expression": "(true or {}) = true",
      "status": "passed",
      "execution_time_ms": 0.1972,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicOr4",
      "description": "testBooleanLogicOr4",
      "expression": "(false or true) = true",
      "status": "passed",
      "execution_time_ms": 0.1875,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicOr5",
      "description": "testBooleanLogicOr5",
      "expression": "(false or false) = false",
      "status": "passed",
      "execution_time_ms": 0.2045,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicOr6",
      "description": "testBooleanLogicOr6",
      "expression": "(false or {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.2014,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicOr7",
      "description": "testBooleanLogicOr7",
      "expression": "({} or true) = true",
      "status": "passed",
      "execution_time_ms": 0.1936,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicOr8",
      "description": "testBooleanLogicOr8",
      "expression": "({} or false).empty()",
      "status": "passed",
      "execution_time_ms": 0.1938,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicOr9",
      "description": "testBooleanLogicOr9",
      "expression": "({} or {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.466,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicXOr1",
      "description": "testBooleanLogicXOr1",
      "expression": "(true xor true) = false",
      "status": "passed",
      "execution_time_ms": 0.3407,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicXOr2",
      "description": "testBooleanLogicXOr2",
      "expression": "(true xor false) = true",
      "status": "passed",
      "execution_time_ms": 0.24,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicXOr3",
      "description": "testBooleanLogicXOr3",
      "expression": "(true xor {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.1977,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicXOr4",
      "description": "testBooleanLogicXOr4",
      "expression": "(false xor true) = true",
      "status": "passed",
      "execution_time_ms": 0.1848,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicXOr5",
      "description": "testBooleanLogicXOr5",
      "expression": "(false xor false) = false",
      "status": "passed",
      "execution_time_ms": 0.1847,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicXOr6",
      "description": "testBooleanLogicXOr6",
      "expression": "(false xor {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.1867,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicXOr7",
      "description": "testBooleanLogicXOr7",
      "expression": "({} xor true).empty()",
      "status": "passed",
      "execution_time_ms": 0.1859,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicXOr8",
      "description": "testBooleanLogicXOr8",
      "expression": "({} xor false).empty()",
      "status": "passed",
      "execution_time_ms": 0.5284,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanLogicXOr9",
      "description": "testBooleanLogicXOr9",
      "expression": "({} xor {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.2046,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanImplies1",
      "description": "testBooleanImplies1",
      "expression": "(true implies true) = true",
      "status": "passed",
      "execution_time_ms": 0.4051,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanImplies2",
      "description": "testBooleanImplies2",
      "expression": "(true implies false) = false",
      "status": "passed",
      "execution_time_ms": 0.2085,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanImplies3",
      "description": "testBooleanImplies3",
      "expression": "(true implies {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.2127,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanImplies4",
      "description": "testBooleanImplies4",
      "expression": "(false implies true) = true",
      "status": "passed",
      "execution_time_ms": 0.2016,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanImplies5",
      "description": "testBooleanImplies5",
      "expression": "(false implies false) = true",
      "status": "passed",
      "execution_time_ms": 0.2002,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanImplies6",
      "description": "testBooleanImplies6",
      "expression": "(false implies {}) = true",
      "status": "passed",
      "execution_time_ms": 0.5279,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanImplies7",
      "description": "testBooleanImplies7",
      "expression": "({} implies true) = true",
      "status": "passed",
      "execution_time_ms": 0.2005,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanImplies8",
      "description": "testBooleanImplies8",
      "expression": "({} implies false).empty()",
      "status": "passed",
      "execution_time_ms": 0.1977,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testBooleanImplies9",
      "description": "testBooleanImplies9",
      "expression": "({} implies {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.203,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPlus1",
      "description": "testPlus1",
      "expression": "1 \u002B 1 = 2",
      "status": "passed",
      "execution_time_ms": 0.1631,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPlus2",
      "description": "testPlus2",
      "expression": "1 \u002B 0 = 1",
      "status": "passed",
      "execution_time_ms": 0.1282,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPlus3",
      "description": "testPlus3",
      "expression": "1.2 \u002B 1.8 = 3.0",
      "status": "passed",
      "execution_time_ms": 0.6482,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPlus4",
      "description": "testPlus4",
      "expression": "\u0027a\u0027\u002B\u0027b\u0027 = \u0027ab\u0027",
      "status": "passed",
      "execution_time_ms": 0.206,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testConcatenate1",
      "description": "testConcatenate1",
      "expression": "\u0027a\u0027 \u0026 \u0027b\u0027 = \u0027ab\u0027",
      "status": "passed",
      "execution_time_ms": 0.1376,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testConcatenate2",
      "description": "testConcatenate2",
      "expression": "\u00271\u0027 \u0026 {} = \u00271\u0027",
      "status": "passed",
      "execution_time_ms": 0.3028,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testConcatenate3",
      "description": "testConcatenate3",
      "expression": "{} \u0026 \u0027b\u0027 = \u0027b\u0027",
      "status": "passed",
      "execution_time_ms": 0.6231,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testConcatenate4",
      "description": "testConcatenate4",
      "expression": "(1 | 2 | 3) \u0026 \u0027b\u0027 = \u00271,2,3b\u0027",
      "status": "error",
      "execution_time_ms": 0.8253,
      "expected": [],
      "actual": null,
      "error": "Invocation of operator \u0027=\u0027 failed: Invocation of operator \u0027\u0026\u0027 failed: Cannot cast from \u0027collection of System.Integer\u0027 to \u0027.NET type String\u0027"
    },
    {
      "name": "testMinus1",
      "description": "testMinus1",
      "expression": "1 - 1 = 0",
      "status": "passed",
      "execution_time_ms": 0.2865,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testMinus2",
      "description": "testMinus2",
      "expression": "1 - 0 = 1",
      "status": "passed",
      "execution_time_ms": 0.1428,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testMinus3",
      "description": "testMinus3",
      "expression": "1.8 - 1.2 = 0.6",
      "status": "passed",
      "execution_time_ms": 0.2582,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testMinus4",
      "description": "testMinus4",
      "expression": "\u0027a\u0027-\u0027b\u0027 = \u0027ab\u0027",
      "status": "error",
      "execution_time_ms": 0.3325,
      "expected": [],
      "actual": null,
      "error": "Invocation of operator \u0027=\u0027 failed: Invocation of operator \u0027-\u0027 failed: Unable to cast object of type \u0027Hl7.Fhir.ElementModel.Types.String\u0027 to type \u0027Hl7.Fhir.ElementModel.Types.Quantity\u0027."
    },
    {
      "name": "testMultiply1",
      "description": "testMultiply1",
      "expression": "1 * 1 = 1",
      "status": "passed",
      "execution_time_ms": 0.1715,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testMultiply2",
      "description": "testMultiply2",
      "expression": "1 * 0 = 0",
      "status": "passed",
      "execution_time_ms": 0.1765,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testMultiply3",
      "description": "testMultiply3",
      "expression": "1.2 * 1.8 = 2.16",
      "status": "passed",
      "execution_time_ms": 0.1915,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDivide1",
      "description": "testDivide1",
      "expression": "1 / 1 = 1",
      "status": "passed",
      "execution_time_ms": 0.1896,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDivide2",
      "description": "testDivide2",
      "expression": "4 / 2 = 2",
      "status": "passed",
      "execution_time_ms": 0.1381,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDivide3",
      "description": "testDivide3",
      "expression": "4.0 / 2.0 = 2.0",
      "status": "passed",
      "execution_time_ms": 0.5556,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDivide4",
      "description": "testDivide4",
      "expression": "1 / 2 = 0.5",
      "status": "passed",
      "execution_time_ms": 0.1292,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDivide5",
      "description": "testDivide5",
      "expression": "1.2 / 1.8 = 0.66666667",
      "status": "passed",
      "execution_time_ms": 0.1288,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDivide6",
      "description": "testDivide6",
      "expression": "1 / 0",
      "status": "passed",
      "execution_time_ms": 0.081,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDiv1",
      "description": "testDiv1",
      "expression": "1 div 1 = 1",
      "status": "passed",
      "execution_time_ms": 0.411,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDiv2",
      "description": "testDiv2",
      "expression": "4 div 2 = 2",
      "status": "passed",
      "execution_time_ms": 0.1437,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDiv3",
      "description": "testDiv3",
      "expression": "5 div 2 = 2",
      "status": "passed",
      "execution_time_ms": 0.1321,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDiv4",
      "description": "testDiv4",
      "expression": "2.2 div 1.8 = 1",
      "status": "passed",
      "execution_time_ms": 0.5237,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testDiv5",
      "description": "testDiv5",
      "expression": "5 div 0",
      "status": "passed",
      "execution_time_ms": 0.1001,
      "expected": [],
      "actual": []
    },
    {
      "name": "testMod1",
      "description": "testMod1",
      "expression": "1 mod 1 = 0",
      "status": "passed",
      "execution_time_ms": 0.1745,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testMod2",
      "description": "testMod2",
      "expression": "4 mod 2 = 0",
      "status": "passed",
      "execution_time_ms": 0.1399,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testMod3",
      "description": "testMod3",
      "expression": "5 mod 2 = 1",
      "status": "passed",
      "execution_time_ms": 0.1348,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testMod4",
      "description": "testMod4",
      "expression": "2.2 mod 1.8 = 0.4",
      "status": "passed",
      "execution_time_ms": 0.5518,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testMod5",
      "description": "testMod5",
      "expression": "5 mod 0",
      "status": "passed",
      "execution_time_ms": 0.0957,
      "expected": [],
      "actual": []
    },
    {
      "name": "testRound1",
      "description": "testRound1",
      "expression": "1.round() = 1",
      "status": "passed",
      "execution_time_ms": 0.3069,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testRound2",
      "description": "testRound2",
      "expression": "3.14159.round(3) = 3.142",
      "status": "passed",
      "execution_time_ms": 0.3319,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSqrt1",
      "description": "testSqrt1",
      "expression": "81.sqrt() = 9.0",
      "status": "passed",
      "execution_time_ms": 0.342,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testSqrt2",
      "description": "testSqrt2",
      "expression": "(-1).sqrt()",
      "status": "passed",
      "execution_time_ms": 0.1672,
      "expected": [],
      "actual": []
    },
    {
      "name": "testAbs1",
      "description": "testAbs1",
      "expression": "(-5).abs() = 5",
      "status": "passed",
      "execution_time_ms": 0.318,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testAbs2",
      "description": "testAbs2",
      "expression": "(-5.5).abs() = 5.5",
      "status": "passed",
      "execution_time_ms": 0.2739,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testAbs3",
      "description": "testAbs3",
      "expression": "(-5.5 \u0027mg\u0027).abs() = 5.5 \u0027mg\u0027",
      "status": "passed",
      "execution_time_ms": 0.389,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCeiling1",
      "description": "testCeiling1",
      "expression": "1.ceiling() = 1",
      "status": "passed",
      "execution_time_ms": 0.214,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCeiling2",
      "description": "testCeiling2",
      "expression": "(-1.1).ceiling() = -1",
      "status": "passed",
      "execution_time_ms": 0.8571,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testCeiling3",
      "description": "testCeiling3",
      "expression": "1.1.ceiling() = 2",
      "status": "passed",
      "execution_time_ms": 0.147,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testExp1",
      "description": "testExp1",
      "expression": "0.exp() = 1",
      "status": "passed",
      "execution_time_ms": 0.3579,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testExp2",
      "description": "testExp2",
      "expression": "(-0.0).exp() = 1",
      "status": "passed",
      "execution_time_ms": 0.2605,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testFloor1",
      "description": "testFloor1",
      "expression": "1.floor() = 1",
      "status": "passed",
      "execution_time_ms": 0.191,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testFloor2",
      "description": "testFloor2",
      "expression": "2.1.floor() = 2",
      "status": "passed",
      "execution_time_ms": 0.1461,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testFloor3",
      "description": "testFloor3",
      "expression": "(-2.1).floor() = -3",
      "status": "passed",
      "execution_time_ms": 0.2389,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLn1",
      "description": "testLn1",
      "expression": "1.ln() = 0.0",
      "status": "passed",
      "execution_time_ms": 0.1781,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLn2",
      "description": "testLn2",
      "expression": "1.0.ln() = 0.0",
      "status": "passed",
      "execution_time_ms": 0.1372,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLog1",
      "description": "testLog1",
      "expression": "16.log(2) = 4.0",
      "status": "passed",
      "execution_time_ms": 0.3685,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testLog2",
      "description": "testLog2",
      "expression": "100.0.log(10.0) = 2.0",
      "status": "passed",
      "execution_time_ms": 0.1808,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPower1",
      "description": "testPower1",
      "expression": "2.power(3) = 8",
      "status": "passed",
      "execution_time_ms": 0.378,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPower2",
      "description": "testPower2",
      "expression": "2.5.power(2) = 6.25",
      "status": "passed",
      "execution_time_ms": 0.4778,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPower3",
      "description": "testPower3",
      "expression": "(-1).power(0.5)",
      "status": "passed",
      "execution_time_ms": 0.1828,
      "expected": [],
      "actual": []
    },
    {
      "name": "testTruncate1",
      "description": "testTruncate1",
      "expression": "101.truncate() = 101",
      "status": "passed",
      "execution_time_ms": 0.1544,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTruncate2",
      "description": "testTruncate2",
      "expression": "1.00000001.truncate() = 1",
      "status": "passed",
      "execution_time_ms": 0.1347,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testTruncate3",
      "description": "testTruncate3",
      "expression": "(-1.56).truncate() = -1",
      "status": "passed",
      "execution_time_ms": 0.2064,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPrecedence1",
      "description": "test unary precedence",
      "expression": "-1.convertsToInteger()",
      "status": "error",
      "execution_time_ms": 0.2305,
      "expected": [],
      "actual": null,
      "error": "Invocation of operator \u0027-\u0027 failed: Unable to cast object of type \u0027Hl7.Fhir.ElementModel.Types.Boolean\u0027 to type \u0027Hl7.Fhir.ElementModel.Types.Quantity\u0027."
    },
    {
      "name": "testPrecedence2",
      "description": "testPrecedence2",
      "expression": "1\u002B2*3\u002B4 = 11",
      "status": "passed",
      "execution_time_ms": 0.1965,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPrecedence3",
      "description": "testPrecedence3",
      "expression": "1 \u003E 2 is Boolean",
      "status": "passed",
      "execution_time_ms": 0.121,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testPrecedence4",
      "description": "testPrecedence4",
      "expression": "1 | 1 is Integer",
      "status": "passed",
      "execution_time_ms": 0.1081,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testVariables1",
      "description": "testVariables1",
      "expression": "%sct = \u0027http://snomed.info/sct\u0027",
      "status": "passed",
      "execution_time_ms": 0.2353,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testVariables2",
      "description": "testVariables2",
      "expression": "%loinc = \u0027http://loinc.org\u0027",
      "status": "passed",
      "execution_time_ms": 0.1007,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testVariables3",
      "description": "testVariables3",
      "expression": "%ucum = \u0027http://unitsofmeasure.org\u0027",
      "status": "passed",
      "execution_time_ms": 0.1205,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testVariables4",
      "description": "testVariables4",
      "expression": "%\u0060vs-administrative-gender\u0060 = \u0027http://hl7.org/fhir/ValueSet/administrative-gender\u0027",
      "status": "passed",
      "execution_time_ms": 1.5211,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testExtension1",
      "description": "testExtension1",
      "expression": "Patient.birthDate.extension(\u0027http://hl7.org/fhir/StructureDefinition/patient-birthTime\u0027).exists()",
      "status": "passed",
      "execution_time_ms": 1.0635,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testExtension2",
      "description": "testExtension2",
      "expression": "Patient.birthDate.extension(%\u0060ext-patient-birthTime\u0060).exists()",
      "status": "passed",
      "execution_time_ms": 0.2502,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testExtension3",
      "description": "testExtension3",
      "expression": "Patient.birthDate.extension(\u0027http://hl7.org/fhir/StructureDefinition/patient-birthTime1\u0027).empty()",
      "status": "passed",
      "execution_time_ms": 0.1872,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType1",
      "description": "testType1",
      "expression": "1.type().namespace = \u0027System\u0027",
      "status": "error",
      "execution_time_ms": 0.1861,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027type\u0027"
    },
    {
      "name": "testType2",
      "description": "testType2",
      "expression": "1.type().name = \u0027Integer\u0027",
      "status": "error",
      "execution_time_ms": 0.1524,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027type\u0027"
    },
    {
      "name": "testType3",
      "description": "testType3",
      "expression": "true.type().namespace = \u0027System\u0027",
      "status": "error",
      "execution_time_ms": 0.1476,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027type\u0027"
    },
    {
      "name": "testType4",
      "description": "testType4",
      "expression": "true.type().name = \u0027Boolean\u0027",
      "status": "error",
      "execution_time_ms": 0.1407,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027type\u0027"
    },
    {
      "name": "testType5",
      "description": "testType5",
      "expression": "true.is(Boolean)",
      "status": "passed",
      "execution_time_ms": 0.0687,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType6",
      "description": "testType6",
      "expression": "true.is(System.Boolean)",
      "status": "passed",
      "execution_time_ms": 0.0678,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType7",
      "description": "testType7",
      "expression": "true is Boolean",
      "status": "passed",
      "execution_time_ms": 0.0605,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType8",
      "description": "testType8",
      "expression": "true is System.Boolean",
      "status": "passed",
      "execution_time_ms": 0.0618,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType9",
      "description": "testType9",
      "expression": "Patient.active.type().namespace = \u0027FHIR\u0027",
      "status": "error",
      "execution_time_ms": 0.457,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027type\u0027"
    },
    {
      "name": "testType10",
      "description": "testType10",
      "expression": "Patient.active.type().name = \u0027boolean\u0027",
      "status": "error",
      "execution_time_ms": 0.1667,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027type\u0027"
    },
    {
      "name": "testType11",
      "description": "testType11",
      "expression": "Patient.active.is(boolean)",
      "status": "passed",
      "execution_time_ms": 0.1022,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType12",
      "description": "testType12",
      "expression": "Patient.active.is(Boolean).not()",
      "status": "passed",
      "execution_time_ms": 0.1361,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType13",
      "description": "testType13",
      "expression": "Patient.active.is(FHIR.boolean)",
      "status": "passed",
      "execution_time_ms": 0.0988,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType14",
      "description": "testType14",
      "expression": "Patient.active.is(System.Boolean).not()",
      "status": "passed",
      "execution_time_ms": 0.1328,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType15",
      "description": "testType15",
      "expression": "Patient.type().namespace = \u0027FHIR\u0027",
      "status": "error",
      "execution_time_ms": 0.1556,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027type\u0027"
    },
    {
      "name": "testType16",
      "description": "testType16",
      "expression": "Patient.type().name = \u0027Patient\u0027",
      "status": "error",
      "execution_time_ms": 0.152,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027type\u0027"
    },
    {
      "name": "testType17",
      "description": "testType17",
      "expression": "Patient.is(Patient)",
      "status": "passed",
      "execution_time_ms": 0.0813,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType18",
      "description": "testType18",
      "expression": "Patient.is(FHIR.Patient)",
      "status": "passed",
      "execution_time_ms": 0.0809,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType19",
      "description": "testType19",
      "expression": "Patient.is(FHIR.\u0060Patient\u0060)",
      "status": "passed",
      "execution_time_ms": 0.0832,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType20",
      "description": "testType20",
      "expression": "Patient.ofType(Patient).type().name",
      "status": "error",
      "execution_time_ms": 0.1348,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027type\u0027"
    },
    {
      "name": "testType21",
      "description": "testType21",
      "expression": "Patient.ofType(FHIR.Patient).type().name",
      "status": "error",
      "execution_time_ms": 0.3659,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027type\u0027"
    },
    {
      "name": "testType22",
      "description": "testType22",
      "expression": "Patient.is(System.Patient).not()",
      "status": "passed",
      "execution_time_ms": 0.1155,
      "expected": [],
      "actual": [
        "True"
      ]
    },
    {
      "name": "testType23",
      "description": "testType23",
      "expression": "Patient.ofType(FHIR.\u0060Patient\u0060).type().name",
      "status": "error",
      "execution_time_ms": 0.1435,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027type\u0027"
    },
    {
      "name": "testConformsTo1",
      "description": "testConformsTo1",
      "expression": "conformsTo(\u0027http://hl7.org/fhir/StructureDefinition/Patient\u0027)",
      "status": "error",
      "execution_time_ms": 0.125,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027conformsTo\u0027"
    },
    {
      "name": "testConformsTo2",
      "description": "testConformsTo2",
      "expression": "conformsTo(\u0027http://hl7.org/fhir/StructureDefinition/Person\u0027)",
      "status": "error",
      "execution_time_ms": 0.1234,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027conformsTo\u0027"
    },
    {
      "name": "testConformsTo3",
      "description": "testConformsTo3",
      "expression": "conformsTo(\u0027http://trash\u0027)",
      "status": "error",
      "execution_time_ms": 0.1176,
      "expected": [],
      "actual": null,
      "error": "Unknown symbol \u0027conformsTo\u0027"
    },
    {
      "name": null,
      "description": null,
      "expression": "(true and \u0027foo\u0027).empty()",
      "status": "passed",
      "execution_time_ms": 0.1754,
      "expected": [],
      "actual": [
        "False"
      ]
    },
    {
      "name": null,
      "description": null,
      "expression": "(true | \u0027foo\u0027).allTrue()",
      "status": "passed",
      "execution_time_ms": 0.1605,
      "expected": [],
      "actual": [
        "False"
      ]
    }
  ],
  "summary": {
    "total": 711,
    "passed": 683,
    "failed": 0,
    "errors": 28
  }
}