{
  "language": "go",
  "timestamp": 1753210645.451272,
  "tests": [
    {
      "name": "testExtractBirthDate",
      "description": "Extract birthDate",
      "expression": "birthDate",
      "status": "passed",
      "execution_time_ms": 1.559042,
      "expected": [
        {
          "type": "date",
          "value": "1974-12-25"
        }
      ],
      "actual": [
        "1974-12-25"
      ]
    },
    {
      "name": "testPatientHasBirthDate",
      "description": "patient has a birthDate",
      "expression": "birthDate",
      "status": "passed",
      "execution_time_ms": 0.051,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        "1974-12-25"
      ]
    },
    {
      "name": "testPatientTelecomTypes",
      "description": "patient telecom types",
      "expression": "telecom.use",
      "status": "passed",
      "execution_time_ms": 0.116667,
      "expected": [
        {
          "type": "code",
          "value": "home"
        },
        {
          "type": "code",
          "value": "work"
        },
        {
          "type": "code",
          "value": "mobile"
        },
        {
          "type": "code",
          "value": "old"
        }
      ],
      "actual": [
        "home",
        "work",
        "mobile",
        "old"
      ]
    },
    {
      "name": "testSimple",
      "description": "",
      "expression": "name.given",
      "status": "passed",
      "execution_time_ms": 0.078667,
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        },
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        }
      ],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleNone",
      "description": "",
      "expression": "name.suffix",
      "status": "passed",
      "execution_time_ms": 0.052458,
      "expected": null,
      "actual": null
    },
    {
      "name": "testEscapedIdentifier",
      "description": "",
      "expression": "name.`given`",
      "status": "passed",
      "execution_time_ms": 0.104334,
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        },
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        }
      ],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleBackTick1",
      "description": "",
      "expression": "`Patient`.name.`given`",
      "status": "passed",
      "execution_time_ms": 0.057792,
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        },
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        }
      ],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleFail",
      "description": "",
      "expression": "name.given1",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testSimpleWithContext",
      "description": "",
      "expression": "Patient.name.given",
      "status": "passed",
      "execution_time_ms": 0.055792,
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        },
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        }
      ],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleWithWrongContext",
      "description": "",
      "expression": "Encounter.name.given",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testPolymorphismA",
      "description": "",
      "expression": "Observation.value.unit",
      "status": "passed",
      "execution_time_ms": 0.1405,
      "expected": [
        {
          "type": "string",
          "value": "lbs"
        }
      ],
      "actual": [
        "lbs"
      ]
    },
    {
      "name": "testPolymorphismB",
      "description": "",
      "expression": "Observation.valueQuantity.unit",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testPolymorphismIsA1",
      "description": "",
      "expression": "Observation.value.is(Quantity)",
      "status": "passed",
      "execution_time_ms": 0.166292,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPolymorphismIsA2",
      "description": "",
      "expression": "Observation.value is Quantity",
      "status": "passed",
      "execution_time_ms": 0.107792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPolymorphismIsA3",
      "description": "",
      "expression": "Observation.issued is instant",
      "status": "error",
      "execution_time_ms": 0.064875,
      "expected": null,
      "actual": [],
      "error": "Evaluation error: expected single input element"
    },
    {
      "name": "testPolymorphismIsB",
      "description": "",
      "expression": "Observation.value.is(Period).not()",
      "status": "passed",
      "execution_time_ms": 0.083916,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPolymorphismAsA",
      "description": "",
      "expression": "Observation.value.as(Quantity).unit",
      "status": "passed",
      "execution_time_ms": 0.090459,
      "expected": [
        {
          "type": "string",
          "value": "lbs"
        }
      ],
      "actual": [
        "lbs"
      ]
    },
    {
      "name": "testPolymorphismAsAFunction",
      "description": "",
      "expression": "(Observation.value as Quantity).unit",
      "status": "passed",
      "execution_time_ms": 0.067458,
      "expected": [
        {
          "type": "string",
          "value": "lbs"
        }
      ],
      "actual": [
        "lbs"
      ]
    },
    {
      "name": "testPolymorphismAsB",
      "description": "",
      "expression": "(Observation.value as Period).unit",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testPolymorphismAsBFunction",
      "description": "",
      "expression": "Observation.value.as(Period).start",
      "status": "passed",
      "execution_time_ms": 0.055416,
      "expected": null,
      "actual": null
    },
    {
      "name": "testDollarThis1",
      "description": "",
      "expression": "Patient.name.given.where(substring($this.length()-3) = 'out')",
      "status": "passed",
      "execution_time_ms": 0.480125,
      "expected": null,
      "actual": null
    },
    {
      "name": "testDollarThis2",
      "description": "",
      "expression": "Patient.name.given.where(substring($this.length()-3) = 'ter')",
      "status": "passed",
      "execution_time_ms": 0.128833,
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "Peter"
        }
      ],
      "actual": [
        "Peter",
        "Peter"
      ]
    },
    {
      "name": "testDollarOrderAllowed",
      "description": "",
      "expression": "Patient.name.skip(1).given",
      "status": "passed",
      "execution_time_ms": 0.096791,
      "expected": [
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        }
      ],
      "actual": [
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testDollarOrderAllowedA",
      "description": "",
      "expression": "Patient.name.skip(3).given",
      "status": "passed",
      "execution_time_ms": 0.094792,
      "expected": null,
      "actual": null
    },
    {
      "name": "testDollarOrderNotAllowed",
      "description": "",
      "expression": "Patient.children().skip(1)",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testLiteralTrue",
      "description": "",
      "expression": "Patient.name.exists() = true",
      "status": "passed",
      "execution_time_ms": 0.06825,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralFalse",
      "description": "",
      "expression": "Patient.name.empty() = false",
      "status": "passed",
      "execution_time_ms": 0.061833,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralString",
      "description": "",
      "expression": "Patient.name.given.first() = 'Peter'",
      "status": "passed",
      "execution_time_ms": 0.058,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralInteger1",
      "description": "",
      "expression": "1.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.399542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralInteger0",
      "description": "",
      "expression": "0.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.113584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerNegative1",
      "description": "",
      "expression": "(-1).convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.14,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerNegative1Invalid",
      "description": "",
      "expression": "-1.convertsToInteger()",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: true"
    },
    {
      "name": "testLiteralIntegerMax",
      "description": "",
      "expression": "2147483647.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.093375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralString",
      "description": "",
      "expression": "'test'.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.052542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralStringEscapes",
      "description": "",
      "expression": "'\\\\\\/\\f\\r\\n\\t\\\"\\`\\'\\u002a'.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.096666,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralBooleanTrue",
      "description": "",
      "expression": "true.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.048459,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralBooleanFalse",
      "description": "",
      "expression": "false.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.046667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimal10",
      "description": "",
      "expression": "1.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.07875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimal01",
      "description": "",
      "expression": "0.1.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.076167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimal00",
      "description": "",
      "expression": "0.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.070375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalNegative01",
      "description": "",
      "expression": "(-0.1).convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.089542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalNegative01Invalid",
      "description": "",
      "expression": "-0.1.convertsToDecimal()",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: true"
    },
    {
      "name": "testLiteralDecimalMax",
      "description": "",
      "expression": "1234567890987654321.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.07975,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalStep",
      "description": "",
      "expression": "0.00000001.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.074917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateYear",
      "description": "",
      "expression": "@2015.is(Date)",
      "status": "passed",
      "execution_time_ms": 0.065542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateMonth",
      "description": "",
      "expression": "@2015-02.is(Date)",
      "status": "passed",
      "execution_time_ms": 0.053208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateDay",
      "description": "",
      "expression": "@2015-02-04.is(Date)",
      "status": "passed",
      "execution_time_ms": 0.055167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeYear",
      "description": "",
      "expression": "@2015T.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.0725,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeMonth",
      "description": "",
      "expression": "@2015-02T.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.047,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeDay",
      "description": "",
      "expression": "@2015-02-04T.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.049167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeHour",
      "description": "",
      "expression": "@2015-02-04T14.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.04925,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeMinute",
      "description": "",
      "expression": "@2015-02-04T14:34.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.053709,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeSecond",
      "description": "",
      "expression": "@2015-02-04T14:34:28.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.052625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeMillisecond",
      "description": "",
      "expression": "@2015-02-04T14:34:28.123.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.056209,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeUTC",
      "description": "",
      "expression": "@2015-02-04T14:34:28Z.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.08475,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeTimezoneOffset",
      "description": "",
      "expression": "@2015-02-04T14:34:28+10:00.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.143709,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralTimeHour",
      "description": "",
      "expression": "@T14.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.062625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralTimeMinute",
      "description": "",
      "expression": "@T14:34.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.050334,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralTimeSecond",
      "description": "",
      "expression": "@T14:34:28.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.05125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralTimeMillisecond",
      "description": "",
      "expression": "@T14:34:28.123.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.052458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralTimeUTC",
      "description": "",
      "expression": "@T14:34:28Z.is(Time)",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: true"
    },
    {
      "name": "testLiteralTimeTimezoneOffset",
      "description": "",
      "expression": "@T14:34:28+10:00.is(Time)",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: true"
    },
    {
      "name": "testLiteralQuantityDecimal",
      "description": "",
      "expression": "10.1 'mg'.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.112417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralQuantityInteger",
      "description": "",
      "expression": "10 'mg'.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.049459,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralQuantityDay",
      "description": "",
      "expression": "4 days.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.071334,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerNotEqual",
      "description": "",
      "expression": "-3 != 3",
      "status": "passed",
      "execution_time_ms": 0.176458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerEqual",
      "description": "",
      "expression": "Patient.name.given.count() = 5",
      "status": "passed",
      "execution_time_ms": 0.09875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPolarityPrecedence",
      "description": "",
      "expression": "-Patient.name.given.count() = -5",
      "status": "passed",
      "execution_time_ms": 0.399,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerGreaterThan",
      "description": "",
      "expression": "Patient.name.given.count() \u003e -3",
      "status": "passed",
      "execution_time_ms": 0.247125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerCountNotEqual",
      "description": "",
      "expression": "Patient.name.given.count() != 0",
      "status": "passed",
      "execution_time_ms": 0.083208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerLessThanTrue",
      "description": "",
      "expression": "1 \u003c 2",
      "status": "passed",
      "execution_time_ms": 0.154375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerLessThanFalse",
      "description": "",
      "expression": "1 \u003c -2",
      "status": "passed",
      "execution_time_ms": 0.112875,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLiteralIntegerLessThanPolarityTrue",
      "description": "",
      "expression": "+1 \u003c +2",
      "status": "passed",
      "execution_time_ms": 0.118292,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerLessThanPolarityFalse",
      "description": "",
      "expression": "-1 \u003c 2",
      "status": "passed",
      "execution_time_ms": 0.112167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalGreaterThanNonZeroTrue",
      "description": "",
      "expression": "Observation.value.value \u003e 180.0",
      "status": "passed",
      "execution_time_ms": 0.075917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalGreaterThanZeroTrue",
      "description": "",
      "expression": "Observation.value.value \u003e 0.0",
      "status": "passed",
      "execution_time_ms": 0.067584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalGreaterThanIntegerTrue",
      "description": "",
      "expression": "Observation.value.value \u003e 0",
      "status": "passed",
      "execution_time_ms": 0.065708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalLessThanInteger",
      "description": "",
      "expression": "Observation.value.value \u003c 190",
      "status": "passed",
      "execution_time_ms": 0.065833,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalLessThanInvalid",
      "description": "",
      "expression": "Observation.value.value \u003c 'test'",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testDateEqual",
      "description": "",
      "expression": "Patient.birthDate = @1974-12-25",
      "status": "passed",
      "execution_time_ms": 0.080958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateNotEqual",
      "description": "",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00",
      "status": "passed",
      "execution_time_ms": 0.054875,
      "expected": null,
      "actual": null
    },
    {
      "name": "testDateNotEqualTimezoneOffsetBefore",
      "description": "",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00-10:00",
      "status": "failed",
      "execution_time_ms": 0.055416,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testDateNotEqualTimezoneOffsetAfter",
      "description": "",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00+10:00",
      "status": "failed",
      "execution_time_ms": 0.04325,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testDateNotEqualUTC",
      "description": "",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00Z",
      "status": "failed",
      "execution_time_ms": 0.042375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testDateNotEqualTimeSecond",
      "description": "",
      "expression": "Patient.birthDate != @T12:14:15",
      "status": "passed",
      "execution_time_ms": 0.072833,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateNotEqualTimeMinute",
      "description": "",
      "expression": "Patient.birthDate != @T12:14",
      "status": "passed",
      "execution_time_ms": 0.04925,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateNotEqualToday",
      "description": "",
      "expression": "Patient.birthDate \u003c today()",
      "status": "passed",
      "execution_time_ms": 0.051166,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateTimeGreaterThanDate",
      "description": "",
      "expression": "now() \u003e Patient.birthDate",
      "status": "failed",
      "execution_time_ms": 0.053459,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testLiteralDateTimeTZGreater",
      "description": "",
      "expression": "@2017-11-05T01:30:00.0-04:00 \u003e @2017-11-05T01:15:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.061333,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLiteralDateTimeTZLess",
      "description": "",
      "expression": "@2017-11-05T01:30:00.0-04:00 \u003c @2017-11-05T01:15:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.0455,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeTZEqualFalse",
      "description": "",
      "expression": "@2017-11-05T01:30:00.0-04:00 = @2017-11-05T01:15:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.048375,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLiteralDateTimeTZEqualTrue",
      "description": "",
      "expression": "@2017-11-05T01:30:00.0-04:00 = @2017-11-05T00:30:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.047042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralUnicode",
      "description": "",
      "expression": "Patient.name.given.first() = 'P\\u0065ter'",
      "status": "passed",
      "execution_time_ms": 0.06525,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCollectionNotEmpty",
      "description": "",
      "expression": "Patient.name.given.empty().not()",
      "status": "passed",
      "execution_time_ms": 0.04975,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCollectionNotEqualEmpty",
      "description": "",
      "expression": "Patient.name.given != {}",
      "status": "passed",
      "execution_time_ms": 0.060875,
      "expected": null,
      "actual": null
    },
    {
      "name": "testExpressions",
      "description": "",
      "expression": "Patient.name.select(given | family).distinct()",
      "status": "passed",
      "execution_time_ms": 0.104584,
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        },
        {
          "type": "string",
          "value": "Chalmers"
        },
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Windsor"
        }
      ],
      "actual": [
        "Peter",
        "James",
        "Chalmers",
        "Jim",
        "Windsor"
      ]
    },
    {
      "name": "testExpressionsEqual",
      "description": "",
      "expression": "Patient.name.given.count() = 1 + 4",
      "status": "passed",
      "execution_time_ms": 0.166708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEmpty",
      "description": "",
      "expression": "Patient.name.empty().not()",
      "status": "passed",
      "execution_time_ms": 0.043958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEmpty",
      "description": "",
      "expression": "Patient.link.empty()",
      "status": "passed",
      "execution_time_ms": 0.135833,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralNotTrue",
      "description": "",
      "expression": "true.not() = false",
      "status": "passed",
      "execution_time_ms": 0.092708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralNotFalse",
      "description": "",
      "expression": "false.not() = true",
      "status": "passed",
      "execution_time_ms": 0.116166,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerBooleanNotTrue",
      "description": "",
      "expression": "(0).not() = true",
      "status": "passed",
      "execution_time_ms": 0.284041,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testIntegerBooleanNotFalse",
      "description": "",
      "expression": "(1).not() = false",
      "status": "passed",
      "execution_time_ms": 0.08775,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotInvalid",
      "description": "",
      "expression": "(1|2).not() = false",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testStringYearConvertsToDate",
      "description": "",
      "expression": "'2015'.convertsToDate()",
      "status": "passed",
      "execution_time_ms": 0.053541,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMonthConvertsToDate",
      "description": "",
      "expression": "'2015-02'.convertsToDate()",
      "status": "passed",
      "execution_time_ms": 0.043375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDayConvertsToDate",
      "description": "",
      "expression": "'2015-02-04'.convertsToDate()",
      "status": "passed",
      "execution_time_ms": 0.050958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringYearConvertsToDateTime",
      "description": "",
      "expression": "'2015'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.040875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMonthConvertsToDateTime",
      "description": "",
      "expression": "'2015-02'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.040666,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDayConvertsToDateTime",
      "description": "",
      "expression": "'2015-02-04'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.045708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringHourConvertsToDateTime",
      "description": "",
      "expression": "'2015-02-04T14'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.045958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMinuteConvertsToDateTime",
      "description": "",
      "expression": "'2015-02-04T14:34'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.042792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringSecondConvertsToDateTime",
      "description": "",
      "expression": "'2015-02-04T14:34:28'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.040875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMillisecondConvertsToDateTime",
      "description": "",
      "expression": "'2015-02-04T14:34:28.123'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.044708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringUTCConvertsToDateTime",
      "description": "",
      "expression": "'2015-02-04T14:34:28Z'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.048584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringTZConvertsToDateTime",
      "description": "",
      "expression": "'2015-02-04T14:34:28+10:00'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.045208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringHourConvertsToTime",
      "description": "",
      "expression": "'14'.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.039875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMinuteConvertsToTime",
      "description": "",
      "expression": "'14:34'.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.041791,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringSecondConvertsToTime",
      "description": "",
      "expression": "'14:34:28'.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.041583,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMillisecondConvertsToTime",
      "description": "",
      "expression": "'14:34:28.123'.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.041208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToInteger",
      "description": "",
      "expression": "1.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.06575,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralIsInteger",
      "description": "",
      "expression": "1.is(Integer)",
      "status": "passed",
      "execution_time_ms": 0.082291,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralIsSystemInteger",
      "description": "",
      "expression": "1.is(System.Integer)",
      "status": "passed",
      "execution_time_ms": 0.077959,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringLiteralConvertsToInteger",
      "description": "",
      "expression": "'1'.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.040417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringLiteralConvertsToIntegerFalse",
      "description": "",
      "expression": "'a'.convertsToInteger().not()",
      "status": "passed",
      "execution_time_ms": 0.047875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalConvertsToIntegerFalse",
      "description": "",
      "expression": "'1.0'.convertsToInteger().not()",
      "status": "passed",
      "execution_time_ms": 0.046417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringLiteralIsNotInteger",
      "description": "",
      "expression": "'1'.is(Integer).not()",
      "status": "passed",
      "execution_time_ms": 0.047083,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToInteger",
      "description": "",
      "expression": "true.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.040958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralIsNotInteger",
      "description": "",
      "expression": "true.is(Integer).not()",
      "status": "passed",
      "execution_time_ms": 0.043709,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateIsNotInteger",
      "description": "",
      "expression": "@2013-04-05.is(Integer).not()",
      "status": "passed",
      "execution_time_ms": 0.047709,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToInteger",
      "description": "",
      "expression": "1.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.098667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringIntegerLiteralToInteger",
      "description": "",
      "expression": "'1'.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.071375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralToInteger",
      "description": "",
      "expression": "'1.1'.toInteger() = {}",
      "status": "passed",
      "execution_time_ms": 0.045791,
      "expected": null,
      "actual": null
    },
    {
      "name": "testDecimalLiteralToIntegerIsEmpty",
      "description": "",
      "expression": "'1.1'.toInteger().empty()",
      "status": "passed",
      "execution_time_ms": 0.046625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralToInteger",
      "description": "",
      "expression": "true.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.061458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToDecimal",
      "description": "",
      "expression": "1.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.0665,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralIsNotDecimal",
      "description": "",
      "expression": "1.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.080708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToDecimal",
      "description": "",
      "expression": "1.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.062208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralIsDecimal",
      "description": "",
      "expression": "1.0.is(Decimal)",
      "status": "passed",
      "execution_time_ms": 0.064667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringIntegerLiteralConvertsToDecimal",
      "description": "",
      "expression": "'1'.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.319208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringIntegerLiteralIsNotDecimal",
      "description": "",
      "expression": "'1'.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.172417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringLiteralConvertsToDecimalFalse",
      "description": "",
      "expression": "'1.a'.convertsToDecimal().not()",
      "status": "passed",
      "execution_time_ms": 0.046167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalLiteralConvertsToDecimal",
      "description": "",
      "expression": "'1.0'.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.04125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalLiteralIsNotDecimal",
      "description": "",
      "expression": "'1.0'.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.043375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToDecimal",
      "description": "",
      "expression": "true.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.037083,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralIsNotDecimal",
      "description": "",
      "expression": "true.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.042084,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToDecimal",
      "description": "",
      "expression": "1.toDecimal() = 1.0",
      "status": "passed",
      "execution_time_ms": 0.108,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToDeciamlEquivalent",
      "description": "",
      "expression": "1.toDecimal() ~ 1.0",
      "status": "passed",
      "execution_time_ms": 0.095,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralToDecimal",
      "description": "",
      "expression": "1.0.toDecimal() = 1.0",
      "status": "passed",
      "execution_time_ms": 0.089625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralToDecimalEqual",
      "description": "",
      "expression": "'1.1'.toDecimal() = 1.1",
      "status": "passed",
      "execution_time_ms": 0.062458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralToDecimal",
      "description": "",
      "expression": "true.toDecimal() = 1",
      "status": "passed",
      "execution_time_ms": 0.0625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToQuantity",
      "description": "",
      "expression": "1.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.062583,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralIsNotQuantity",
      "description": "",
      "expression": "1.is(Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.068042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToQuantity",
      "description": "",
      "expression": "1.0.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.061792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralIsNotQuantity",
      "description": "",
      "expression": "1.0.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.070959,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringIntegerLiteralConvertsToQuantity",
      "description": "",
      "expression": "'1'.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.061625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringIntegerLiteralIsNotQuantity",
      "description": "",
      "expression": "'1'.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.045,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringQuantityLiteralConvertsToQuantity",
      "description": "",
      "expression": "'1 day'.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.056834,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringQuantityWeekConvertsToQuantity",
      "description": "",
      "expression": "'1 \\'wk\\''.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.04925,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringQuantityWeekConvertsToQuantityFalse",
      "description": "",
      "expression": "'1 wk'.convertsToQuantity().not()",
      "status": "passed",
      "execution_time_ms": 0.065333,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalLiteralConvertsToQuantityFalse",
      "description": "",
      "expression": "'1.a'.convertsToQuantity().not()",
      "status": "passed",
      "execution_time_ms": 0.088917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalLiteralConvertsToQuantity",
      "description": "",
      "expression": "'1.0'.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.059917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalLiteralIsNotSystemQuantity",
      "description": "",
      "expression": "'1.0'.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.045167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToQuantity",
      "description": "",
      "expression": "true.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.043959,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralIsNotSystemQuantity",
      "description": "",
      "expression": "true.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.045125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToQuantity",
      "description": "",
      "expression": "1.toQuantity() = 1 '1'",
      "status": "passed",
      "execution_time_ms": 0.071959,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralToQuantity",
      "description": "",
      "expression": "1.0.toQuantity() = 1.0 '1'",
      "status": "passed",
      "execution_time_ms": 0.073541,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringIntegerLiteralToQuantity",
      "description": "",
      "expression": "'1'.toQuantity()",
      "status": "passed",
      "execution_time_ms": 0.062541,
      "expected": [
        {
          "type": "Quantity",
          "value": "1 '1'"
        }
      ],
      "actual": [
        "1 '1'"
      ]
    },
    {
      "name": "testStringQuantityLiteralToQuantity",
      "description": "",
      "expression": "'1 day'.toQuantity() = 1 day",
      "status": "passed",
      "execution_time_ms": 0.05325,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringQuantityDayLiteralToQuantity",
      "description": "",
      "expression": "'1 day'.toQuantity() = 1 '{day}'",
      "status": "failed",
      "execution_time_ms": 0.05225,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testStringQuantityWeekLiteralToQuantity",
      "description": "",
      "expression": "'1 \\'wk\\''.toQuantity() = 1 'wk'",
      "status": "passed",
      "execution_time_ms": 0.049291,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalLiteralToQuantity",
      "description": "",
      "expression": "'1.0'.toQuantity() ~ 1 '1'",
      "status": "passed",
      "execution_time_ms": 0.06875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToBoolean",
      "description": "",
      "expression": "1.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.261584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToBooleanFalse",
      "description": "",
      "expression": "2.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.425958,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNegativeIntegerLiteralConvertsToBooleanFalse",
      "description": "",
      "expression": "(-1).convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.110458,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testIntegerLiteralFalseConvertsToBoolean",
      "description": "",
      "expression": "0.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.064125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToBoolean",
      "description": "",
      "expression": "1.0.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.0675,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringTrueLiteralConvertsToBoolean",
      "description": "",
      "expression": "'true'.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.0385,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringFalseLiteralConvertsToBoolean",
      "description": "",
      "expression": "'false'.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.042417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringFalseLiteralAlsoConvertsToBoolean",
      "description": "",
      "expression": "'False'.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.04125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTrueLiteralConvertsToBoolean",
      "description": "",
      "expression": "true.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.036125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFalseLiteralConvertsToBoolean",
      "description": "",
      "expression": "false.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.034667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToBoolean",
      "description": "",
      "expression": "1.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.063875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToBooleanEmpty",
      "description": "",
      "expression": "2.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.055875,
      "expected": null,
      "actual": null
    },
    {
      "name": "testIntegerLiteralToBooleanFalse",
      "description": "",
      "expression": "0.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.06375,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testStringTrueToBoolean",
      "description": "",
      "expression": "'true'.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.0345,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringFalseToBoolean",
      "description": "",
      "expression": "'false'.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.033417,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToString",
      "description": "",
      "expression": "1.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.063709,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralIsNotString",
      "description": "",
      "expression": "1.is(String).not()",
      "status": "passed",
      "execution_time_ms": 0.071375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNegativeIntegerLiteralConvertsToString",
      "description": "",
      "expression": "(-1).convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.069541,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToString",
      "description": "",
      "expression": "1.0.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.072541,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringLiteralConvertsToString",
      "description": "",
      "expression": "'true'.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.038917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToString",
      "description": "",
      "expression": "true.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.038167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantityLiteralConvertsToString",
      "description": "",
      "expression": "1 'wk'.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.043792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToString",
      "description": "",
      "expression": "1.toString()",
      "status": "passed",
      "execution_time_ms": 0.068458,
      "expected": [
        {
          "type": "string",
          "value": "1"
        }
      ],
      "actual": [
        "1"
      ]
    },
    {
      "name": "testNegativeIntegerLiteralToString",
      "description": "",
      "expression": "(-1).toString()",
      "status": "passed",
      "execution_time_ms": 0.073833,
      "expected": [
        {
          "type": "string",
          "value": "-1"
        }
      ],
      "actual": [
        "-1"
      ]
    },
    {
      "name": "testDecimalLiteralToString",
      "description": "",
      "expression": "1.0.toString()",
      "status": "passed",
      "execution_time_ms": 0.064875,
      "expected": [
        {
          "type": "string",
          "value": "1.0"
        }
      ],
      "actual": [
        "1.0"
      ]
    },
    {
      "name": "testStringLiteralToString",
      "description": "",
      "expression": "'true'.toString()",
      "status": "passed",
      "execution_time_ms": 0.037292,
      "expected": [
        {
          "type": "string",
          "value": "true"
        }
      ],
      "actual": [
        "true"
      ]
    },
    {
      "name": "testBooleanLiteralToString",
      "description": "",
      "expression": "true.toString()",
      "status": "passed",
      "execution_time_ms": 0.040084,
      "expected": [
        {
          "type": "string",
          "value": "true"
        }
      ],
      "actual": [
        "true"
      ]
    },
    {
      "name": "testQuantityLiteralWkToString",
      "description": "",
      "expression": "1 'wk'.toString()",
      "status": "passed",
      "execution_time_ms": 0.046,
      "expected": [
        {
          "type": "string",
          "value": "1 'wk'"
        }
      ],
      "actual": [
        "1 'wk'"
      ]
    },
    {
      "name": "testQuantityLiteralWeekToString",
      "description": "",
      "expression": "1 week.toString()",
      "status": "passed",
      "execution_time_ms": 0.056083,
      "expected": [
        {
          "type": "string",
          "value": "1 'week'"
        }
      ],
      "actual": [
        "1 'week'"
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "Patient.name.exists()",
      "status": "passed",
      "execution_time_ms": 0.040333,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "Patient.name.exists(use = 'nickname')",
      "status": "passed",
      "execution_time_ms": 0.055042,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "Patient.name.exists(use = 'official')",
      "status": "passed",
      "execution_time_ms": 0.043917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "Patient.maritalStatus.coding.exists(code = 'P' and system = 'http://terminology.hl7.org/CodeSystem/v3-MaritalStatus')\n\t\t\tor Patient.maritalStatus.coding.exists(code = 'A' and system = 'http://terminology.hl7.org/CodeSystem/v3-MaritalStatus')",
      "status": "passed",
      "execution_time_ms": 0.206708,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testAllTrue1",
      "description": "",
      "expression": "Patient.name.select(given.exists()).allTrue()",
      "status": "passed",
      "execution_time_ms": 0.347334,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAllTrue2",
      "description": "",
      "expression": "Patient.name.select(period.exists()).allTrue()",
      "status": "passed",
      "execution_time_ms": 0.237625,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testAllTrue3",
      "description": "",
      "expression": "Patient.name.all(given.exists())",
      "status": "passed",
      "execution_time_ms": 0.052417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAllTrue4",
      "description": "",
      "expression": "Patient.name.all(period.exists())",
      "status": "passed",
      "execution_time_ms": 0.050125,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testSubSetOf1",
      "description": "",
      "expression": "Patient.name.first().subsetOf($this.name)",
      "status": "passed",
      "execution_time_ms": 0.058125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubSetOf2",
      "description": "",
      "expression": "Patient.name.subsetOf($this.name.first()).not()",
      "status": "passed",
      "execution_time_ms": 0.052042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSuperSetOf1",
      "description": "",
      "expression": "Patient.name.first().supersetOf($this.name).not()",
      "status": "passed",
      "execution_time_ms": 0.049959,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSuperSetOf2",
      "description": "",
      "expression": "Patient.name.supersetOf($this.name.first())",
      "status": "passed",
      "execution_time_ms": 0.045084,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantity1",
      "description": "",
      "expression": "4.0000 'g' = 4000.0 'mg'",
      "status": "failed",
      "execution_time_ms": 0.052959,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testQuantity2",
      "description": "",
      "expression": "4 'g' ~ 4000 'mg'",
      "status": "passed",
      "execution_time_ms": 0.048667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testQuantity3",
      "description": "",
      "expression": "4 'g' != 4040 'mg'",
      "status": "failed",
      "execution_time_ms": 0.045458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testQuantity4",
      "description": "",
      "expression": "4 'g' ~ 4040 'mg'",
      "status": "passed",
      "execution_time_ms": 0.046,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testQuantity5",
      "description": "",
      "expression": "7 days = 1 week",
      "status": "failed",
      "execution_time_ms": 0.05375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testQuantity6",
      "description": "",
      "expression": "7 days = 1 'wk'",
      "status": "failed",
      "execution_time_ms": 0.047583,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testQuantity7",
      "description": "",
      "expression": "6 days \u003c 1 week",
      "status": "error",
      "execution_time_ms": 0.081208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: quantity units do not match, left: 'days' right: 'wk'"
    },
    {
      "name": "testQuantity8",
      "description": "",
      "expression": "8 days \u003e 1 week",
      "status": "error",
      "execution_time_ms": 0.0525,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: quantity units do not match, left: 'days' right: 'wk'"
    },
    {
      "name": "testQuantity9",
      "description": "",
      "expression": "2.0 'cm' * 2.0 'm' = 0.040 'm2'",
      "status": "failed",
      "execution_time_ms": 0.0765,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testQuantity10",
      "description": "",
      "expression": "4.0 'g' / 2.0 'm' = 2 'g/m'",
      "status": "failed",
      "execution_time_ms": 0.075125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testQuantity11",
      "description": "",
      "expression": "1.0 'm' / 1.0 'm' = 1 '1'",
      "status": "failed",
      "execution_time_ms": 0.051292,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testCollectionBoolean1",
      "description": "",
      "expression": "iif(1 | 2 | 3, true, false)",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testCollectionBoolean2",
      "description": "",
      "expression": "iif({}, true, false)",
      "status": "passed",
      "execution_time_ms": 0.054834,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testCollectionBoolean3",
      "description": "",
      "expression": "iif(true, true, false)",
      "status": "passed",
      "execution_time_ms": 0.04175,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCollectionBoolean4",
      "description": "",
      "expression": "iif({} | true, true, false)",
      "status": "passed",
      "execution_time_ms": 0.050208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCollectionBoolean5",
      "description": "",
      "expression": "iif(true, true, 1/0)",
      "status": "passed",
      "execution_time_ms": 0.20325,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCollectionBoolean6",
      "description": "",
      "expression": "iif(false, 1/0, true)",
      "status": "passed",
      "execution_time_ms": 0.175625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDistinct1",
      "description": "",
      "expression": "(1 | 2 | 3).isDistinct()",
      "status": "passed",
      "execution_time_ms": 0.215542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDistinct2",
      "description": "",
      "expression": "Questionnaire.descendants().linkId.isDistinct()",
      "status": "error",
      "execution_time_ms": 0.247291,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: expected element of type {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Questionnaire\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Url\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Version\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Title\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"DerivedFrom\",\n      \"type\": \"List\\u003cFHIR.Canonical\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Status\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Experimental\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"SubjectType\",\n      \"type\": \"List\\u003cFHIR.Code\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Date\",\n      \"type\": \"FHIR.DateTime\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Publisher\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.ContactDetail\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Description\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"UseContext\",\n      \"type\": \"List\\u003cFHIR.UsageContext\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Jurisdiction\",\n      \"type\": \"List\\u003cFHIR.CodeableConcept\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Purpose\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Copyright\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ApprovalDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"LastReviewDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"EffectivePeriod\",\n      \"type\": \"FHIR.Period\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Code\",\n      \"type\": \"List\\u003cFHIR.Coding\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Item\",\n      \"type\": \"List\\u003cFHIR.QuestionnaireItem\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}, got {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Patient\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Active\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"List\\u003cFHIR.HumanName\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Telecom\",\n      \"type\": \"List\\u003cFHIR.ContactPoint\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Gender\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"BirthDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Deceased\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Address\",\n      \"type\": \"List\\u003cFHIR.Address\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MaritalStatus\",\n      \"type\": \"FHIR.CodeableConcept\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MultipleBirth\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Photo\",\n      \"type\": \"List\\u003cFHIR.Attachment\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.PatientContact\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Communication\",\n      \"type\": \"List\\u003cFHIR.PatientCommunication\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"GeneralPractitioner\",\n      \"type\": \"List\\u003cFHIR.Reference\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ManagingOrganization\",\n      \"type\": \"FHIR.Reference\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Link\",\n      \"type\": \"List\\u003cFHIR.PatientLink\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}"
    },
    {
      "name": "testDistinct3",
      "description": "",
      "expression": "Questionnaire.descendants().linkId.select(substring(0,1)).isDistinct().not()",
      "status": "error",
      "execution_time_ms": 0.862959,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: expected element of type {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Questionnaire\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Url\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Version\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Title\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"DerivedFrom\",\n      \"type\": \"List\\u003cFHIR.Canonical\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Status\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Experimental\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"SubjectType\",\n      \"type\": \"List\\u003cFHIR.Code\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Date\",\n      \"type\": \"FHIR.DateTime\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Publisher\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.ContactDetail\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Description\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"UseContext\",\n      \"type\": \"List\\u003cFHIR.UsageContext\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Jurisdiction\",\n      \"type\": \"List\\u003cFHIR.CodeableConcept\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Purpose\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Copyright\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ApprovalDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"LastReviewDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"EffectivePeriod\",\n      \"type\": \"FHIR.Period\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Code\",\n      \"type\": \"List\\u003cFHIR.Coding\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Item\",\n      \"type\": \"List\\u003cFHIR.QuestionnaireItem\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}, got {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Patient\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Active\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"List\\u003cFHIR.HumanName\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Telecom\",\n      \"type\": \"List\\u003cFHIR.ContactPoint\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Gender\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"BirthDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Deceased\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Address\",\n      \"type\": \"List\\u003cFHIR.Address\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MaritalStatus\",\n      \"type\": \"FHIR.CodeableConcept\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MultipleBirth\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Photo\",\n      \"type\": \"List\\u003cFHIR.Attachment\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.PatientContact\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Communication\",\n      \"type\": \"List\\u003cFHIR.PatientCommunication\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"GeneralPractitioner\",\n      \"type\": \"List\\u003cFHIR.Reference\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ManagingOrganization\",\n      \"type\": \"FHIR.Reference\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Link\",\n      \"type\": \"List\\u003cFHIR.PatientLink\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}"
    },
    {
      "name": "testDistinct4",
      "description": "",
      "expression": "(1 | 2 | 3).distinct()",
      "status": "passed",
      "execution_time_ms": 0.185459,
      "expected": [
        {
          "type": "integer",
          "value": "1"
        },
        {
          "type": "integer",
          "value": "2"
        },
        {
          "type": "integer",
          "value": "3"
        }
      ],
      "actual": [
        "1",
        "2",
        "3"
      ]
    },
    {
      "name": "testDistinct5",
      "description": "",
      "expression": "Questionnaire.descendants().linkId.distinct().count()",
      "status": "error",
      "execution_time_ms": 0.171125,
      "expected": [
        {
          "type": "integer",
          "value": "10"
        }
      ],
      "actual": [],
      "error": "Evaluation error: expected element of type {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Questionnaire\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Url\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Version\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Title\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"DerivedFrom\",\n      \"type\": \"List\\u003cFHIR.Canonical\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Status\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Experimental\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"SubjectType\",\n      \"type\": \"List\\u003cFHIR.Code\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Date\",\n      \"type\": \"FHIR.DateTime\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Publisher\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.ContactDetail\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Description\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"UseContext\",\n      \"type\": \"List\\u003cFHIR.UsageContext\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Jurisdiction\",\n      \"type\": \"List\\u003cFHIR.CodeableConcept\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Purpose\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Copyright\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ApprovalDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"LastReviewDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"EffectivePeriod\",\n      \"type\": \"FHIR.Period\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Code\",\n      \"type\": \"List\\u003cFHIR.Coding\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Item\",\n      \"type\": \"List\\u003cFHIR.QuestionnaireItem\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}, got {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Patient\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Active\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"List\\u003cFHIR.HumanName\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Telecom\",\n      \"type\": \"List\\u003cFHIR.ContactPoint\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Gender\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"BirthDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Deceased\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Address\",\n      \"type\": \"List\\u003cFHIR.Address\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MaritalStatus\",\n      \"type\": \"FHIR.CodeableConcept\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MultipleBirth\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Photo\",\n      \"type\": \"List\\u003cFHIR.Attachment\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.PatientContact\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Communication\",\n      \"type\": \"List\\u003cFHIR.PatientCommunication\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"GeneralPractitioner\",\n      \"type\": \"List\\u003cFHIR.Reference\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ManagingOrganization\",\n      \"type\": \"FHIR.Reference\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Link\",\n      \"type\": \"List\\u003cFHIR.PatientLink\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}"
    },
    {
      "name": "testDistinct6",
      "description": "",
      "expression": "Questionnaire.descendants().linkId.select(substring(0,1)).distinct().count()",
      "status": "error",
      "execution_time_ms": 0.264209,
      "expected": [
        {
          "type": "integer",
          "value": "2"
        }
      ],
      "actual": [],
      "error": "Evaluation error: expected element of type {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Questionnaire\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Url\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Version\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Title\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"DerivedFrom\",\n      \"type\": \"List\\u003cFHIR.Canonical\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Status\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Experimental\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"SubjectType\",\n      \"type\": \"List\\u003cFHIR.Code\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Date\",\n      \"type\": \"FHIR.DateTime\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Publisher\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.ContactDetail\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Description\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"UseContext\",\n      \"type\": \"List\\u003cFHIR.UsageContext\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Jurisdiction\",\n      \"type\": \"List\\u003cFHIR.CodeableConcept\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Purpose\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Copyright\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ApprovalDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"LastReviewDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"EffectivePeriod\",\n      \"type\": \"FHIR.Period\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Code\",\n      \"type\": \"List\\u003cFHIR.Coding\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Item\",\n      \"type\": \"List\\u003cFHIR.QuestionnaireItem\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}, got {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Patient\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Active\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"List\\u003cFHIR.HumanName\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Telecom\",\n      \"type\": \"List\\u003cFHIR.ContactPoint\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Gender\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"BirthDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Deceased\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Address\",\n      \"type\": \"List\\u003cFHIR.Address\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MaritalStatus\",\n      \"type\": \"FHIR.CodeableConcept\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MultipleBirth\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Photo\",\n      \"type\": \"List\\u003cFHIR.Attachment\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.PatientContact\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Communication\",\n      \"type\": \"List\\u003cFHIR.PatientCommunication\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"GeneralPractitioner\",\n      \"type\": \"List\\u003cFHIR.Reference\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ManagingOrganization\",\n      \"type\": \"FHIR.Reference\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Link\",\n      \"type\": \"List\\u003cFHIR.PatientLink\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}"
    },
    {
      "name": "testCount1",
      "description": "",
      "expression": "Patient.name.count()",
      "status": "passed",
      "execution_time_ms": 0.045416,
      "expected": [
        {
          "type": "integer",
          "value": "3"
        }
      ],
      "actual": [
        "3"
      ]
    },
    {
      "name": "testCount2",
      "description": "",
      "expression": "Patient.name.count() = 3",
      "status": "passed",
      "execution_time_ms": 0.068375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCount3",
      "description": "",
      "expression": "Patient.name.first().count()",
      "status": "passed",
      "execution_time_ms": 0.0435,
      "expected": [
        {
          "type": "integer",
          "value": "1"
        }
      ],
      "actual": [
        "1"
      ]
    },
    {
      "name": "testCount4",
      "description": "",
      "expression": "Patient.name.first().count() = 1",
      "status": "passed",
      "execution_time_ms": 0.07725,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testWhere1",
      "description": "",
      "expression": "Patient.name.count() = 3",
      "status": "passed",
      "execution_time_ms": 0.069791,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testWhere2",
      "description": "",
      "expression": "Patient.name.where(given = 'Jim').count() = 1",
      "status": "passed",
      "execution_time_ms": 0.117542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testWhere3",
      "description": "",
      "expression": "Patient.name.where(given = 'X').count() = 0",
      "status": "passed",
      "execution_time_ms": 0.091541,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testWhere4",
      "description": "",
      "expression": "Patient.name.where($this.given = 'Jim').count() = 1",
      "status": "passed",
      "execution_time_ms": 0.086916,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSelect1",
      "description": "",
      "expression": "Patient.name.select(given).count() = 5",
      "status": "passed",
      "execution_time_ms": 0.08025,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSelect2",
      "description": "",
      "expression": "Patient.name.select(given | family).count() = 7 ",
      "status": "passed",
      "execution_time_ms": 0.090333,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testRepeat1",
      "description": "",
      "expression": "ValueSet.expansion.repeat(contains).count() = 10",
      "status": "error",
      "execution_time_ms": 0.272042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: expected element of type {\n  \"namespace\": \"FHIR\",\n  \"name\": \"ValueSet\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Url\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Version\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Title\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Status\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Experimental\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Date\",\n      \"type\": \"FHIR.DateTime\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Publisher\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.ContactDetail\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Description\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"UseContext\",\n      \"type\": \"List\\u003cFHIR.UsageContext\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Jurisdiction\",\n      \"type\": \"List\\u003cFHIR.CodeableConcept\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Immutable\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Purpose\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Copyright\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Compose\",\n      \"type\": \"FHIR.ValueSetCompose\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Expansion\",\n      \"type\": \"FHIR.ValueSetExpansion\",\n      \"isOneBased\": false\n    }\n  ]\n}, got {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Patient\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Active\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"List\\u003cFHIR.HumanName\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Telecom\",\n      \"type\": \"List\\u003cFHIR.ContactPoint\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Gender\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"BirthDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Deceased\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Address\",\n      \"type\": \"List\\u003cFHIR.Address\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MaritalStatus\",\n      \"type\": \"FHIR.CodeableConcept\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MultipleBirth\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Photo\",\n      \"type\": \"List\\u003cFHIR.Attachment\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.PatientContact\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Communication\",\n      \"type\": \"List\\u003cFHIR.PatientCommunication\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"GeneralPractitioner\",\n      \"type\": \"List\\u003cFHIR.Reference\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ManagingOrganization\",\n      \"type\": \"FHIR.Reference\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Link\",\n      \"type\": \"List\\u003cFHIR.PatientLink\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}"
    },
    {
      "name": "testRepeat2",
      "description": "",
      "expression": "Questionnaire.repeat(item).code.count() = 11",
      "status": "error",
      "execution_time_ms": 0.207834,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: expected element of type {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Questionnaire\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Url\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Version\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Title\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"DerivedFrom\",\n      \"type\": \"List\\u003cFHIR.Canonical\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Status\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Experimental\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"SubjectType\",\n      \"type\": \"List\\u003cFHIR.Code\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Date\",\n      \"type\": \"FHIR.DateTime\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Publisher\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.ContactDetail\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Description\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"UseContext\",\n      \"type\": \"List\\u003cFHIR.UsageContext\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Jurisdiction\",\n      \"type\": \"List\\u003cFHIR.CodeableConcept\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Purpose\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Copyright\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ApprovalDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"LastReviewDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"EffectivePeriod\",\n      \"type\": \"FHIR.Period\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Code\",\n      \"type\": \"List\\u003cFHIR.Coding\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Item\",\n      \"type\": \"List\\u003cFHIR.QuestionnaireItem\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}, got {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Patient\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Active\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"List\\u003cFHIR.HumanName\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Telecom\",\n      \"type\": \"List\\u003cFHIR.ContactPoint\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Gender\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"BirthDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Deceased\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Address\",\n      \"type\": \"List\\u003cFHIR.Address\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MaritalStatus\",\n      \"type\": \"FHIR.CodeableConcept\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MultipleBirth\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Photo\",\n      \"type\": \"List\\u003cFHIR.Attachment\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.PatientContact\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Communication\",\n      \"type\": \"List\\u003cFHIR.PatientCommunication\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"GeneralPractitioner\",\n      \"type\": \"List\\u003cFHIR.Reference\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ManagingOrganization\",\n      \"type\": \"FHIR.Reference\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Link\",\n      \"type\": \"List\\u003cFHIR.PatientLink\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}"
    },
    {
      "name": "testRepeat3",
      "description": "",
      "expression": "Questionnaire.descendants().code.count() = 23",
      "status": "error",
      "execution_time_ms": 0.211625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: expected element of type {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Questionnaire\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Url\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Version\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Title\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"DerivedFrom\",\n      \"type\": \"List\\u003cFHIR.Canonical\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Status\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Experimental\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"SubjectType\",\n      \"type\": \"List\\u003cFHIR.Code\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Date\",\n      \"type\": \"FHIR.DateTime\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Publisher\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.ContactDetail\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Description\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"UseContext\",\n      \"type\": \"List\\u003cFHIR.UsageContext\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Jurisdiction\",\n      \"type\": \"List\\u003cFHIR.CodeableConcept\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Purpose\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Copyright\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ApprovalDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"LastReviewDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"EffectivePeriod\",\n      \"type\": \"FHIR.Period\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Code\",\n      \"type\": \"List\\u003cFHIR.Coding\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Item\",\n      \"type\": \"List\\u003cFHIR.QuestionnaireItem\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}, got {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Patient\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Active\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"List\\u003cFHIR.HumanName\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Telecom\",\n      \"type\": \"List\\u003cFHIR.ContactPoint\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Gender\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"BirthDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Deceased\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Address\",\n      \"type\": \"List\\u003cFHIR.Address\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MaritalStatus\",\n      \"type\": \"FHIR.CodeableConcept\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MultipleBirth\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Photo\",\n      \"type\": \"List\\u003cFHIR.Attachment\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.PatientContact\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Communication\",\n      \"type\": \"List\\u003cFHIR.PatientCommunication\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"GeneralPractitioner\",\n      \"type\": \"List\\u003cFHIR.Reference\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ManagingOrganization\",\n      \"type\": \"FHIR.Reference\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Link\",\n      \"type\": \"List\\u003cFHIR.PatientLink\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}"
    },
    {
      "name": "testRepeat4",
      "description": "",
      "expression": "Questionnaire.children().code.count() = 2",
      "status": "error",
      "execution_time_ms": 0.908208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: expected element of type {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Questionnaire\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Url\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Version\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Title\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"DerivedFrom\",\n      \"type\": \"List\\u003cFHIR.Canonical\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Status\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Experimental\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"SubjectType\",\n      \"type\": \"List\\u003cFHIR.Code\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Date\",\n      \"type\": \"FHIR.DateTime\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Publisher\",\n      \"type\": \"FHIR.String\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.ContactDetail\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Description\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"UseContext\",\n      \"type\": \"List\\u003cFHIR.UsageContext\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Jurisdiction\",\n      \"type\": \"List\\u003cFHIR.CodeableConcept\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Purpose\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Copyright\",\n      \"type\": \"FHIR.Markdown\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ApprovalDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"LastReviewDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"EffectivePeriod\",\n      \"type\": \"FHIR.Period\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Code\",\n      \"type\": \"List\\u003cFHIR.Coding\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Item\",\n      \"type\": \"List\\u003cFHIR.QuestionnaireItem\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}, got {\n  \"namespace\": \"FHIR\",\n  \"name\": \"Patient\",\n  \"baseType\": \"FHIR.DomainResource\",\n  \"element\": [\n    {\n      \"name\": \"Id\",\n      \"type\": \"FHIR.Id\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Meta\",\n      \"type\": \"FHIR.Meta\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ImplicitRules\",\n      \"type\": \"FHIR.Uri\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Language\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Text\",\n      \"type\": \"FHIR.Narrative\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contained\",\n      \"type\": \"List\\u003cFHIR.\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Extension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ModifierExtension\",\n      \"type\": \"List\\u003cFHIR.Extension\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Identifier\",\n      \"type\": \"List\\u003cFHIR.Identifier\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Active\",\n      \"type\": \"FHIR.Boolean\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Name\",\n      \"type\": \"List\\u003cFHIR.HumanName\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Telecom\",\n      \"type\": \"List\\u003cFHIR.ContactPoint\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Gender\",\n      \"type\": \"FHIR.Code\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"BirthDate\",\n      \"type\": \"FHIR.Date\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Deceased\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Address\",\n      \"type\": \"List\\u003cFHIR.Address\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MaritalStatus\",\n      \"type\": \"FHIR.CodeableConcept\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"MultipleBirth\",\n      \"type\": \"FHIR.PrimitiveElement\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Photo\",\n      \"type\": \"List\\u003cFHIR.Attachment\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Contact\",\n      \"type\": \"List\\u003cFHIR.PatientContact\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Communication\",\n      \"type\": \"List\\u003cFHIR.PatientCommunication\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"GeneralPractitioner\",\n      \"type\": \"List\\u003cFHIR.Reference\\u003e\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"ManagingOrganization\",\n      \"type\": \"FHIR.Reference\",\n      \"isOneBased\": false\n    },\n    {\n      \"name\": \"Link\",\n      \"type\": \"List\\u003cFHIR.PatientLink\\u003e\",\n      \"isOneBased\": false\n    }\n  ]\n}"
    },
    {
      "name": "testAggregate1",
      "description": "",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate($this+$total, 0) = 45",
      "status": "passed",
      "execution_time_ms": 0.566,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAggregate2",
      "description": "",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate($this+$total, 2) = 47",
      "status": "passed",
      "execution_time_ms": 0.486084,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAggregate3",
      "description": "",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate(iif($total.empty(), $this, iif($this \u003c $total, $this, $total))) = 1",
      "status": "passed",
      "execution_time_ms": 0.642042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAggregate4",
      "description": "",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate(iif($total.empty(), $this, iif($this \u003e $total, $this, $total))) = 9",
      "status": "passed",
      "execution_time_ms": 1.033417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIndexer1",
      "description": "",
      "expression": "Patient.name[0].given = 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.223917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIndexer2",
      "description": "",
      "expression": "Patient.name[1].given = 'Jim'",
      "status": "passed",
      "execution_time_ms": 0.075375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSingle1",
      "description": "",
      "expression": "Patient.name.first().single().exists()",
      "status": "passed",
      "execution_time_ms": 0.057375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSingle2",
      "description": "",
      "expression": "Patient.name.single().exists()",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testFirstLast1",
      "description": "",
      "expression": "Patient.name.first().given = 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.049584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFirstLast2",
      "description": "",
      "expression": "Patient.name.last().given = 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.050667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTail1",
      "description": "",
      "expression": "(0 | 1 | 2).tail() = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.2315,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTail2",
      "description": "",
      "expression": "Patient.name.tail().given = 'Jim' | 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.057833,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSkip1",
      "description": "",
      "expression": "(0 | 1 | 2).skip(1) = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.240625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSkip2",
      "description": "",
      "expression": "(0 | 1 | 2).skip(2) = 2",
      "status": "passed",
      "execution_time_ms": 0.20825,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSkip3",
      "description": "",
      "expression": "Patient.name.skip(1).given.trace('test') = 'Jim' | 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.1125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSkip4",
      "description": "",
      "expression": "Patient.name.skip(3).given.exists() = false",
      "status": "passed",
      "execution_time_ms": 0.085083,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake1",
      "description": "",
      "expression": "(0 | 1 | 2).take(1) = 0",
      "status": "passed",
      "execution_time_ms": 0.371375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake2",
      "description": "",
      "expression": "(0 | 1 | 2).take(2) = 0 | 1",
      "status": "passed",
      "execution_time_ms": 0.417917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake3",
      "description": "",
      "expression": "Patient.name.take(1).given = 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.087333,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake4",
      "description": "",
      "expression": "Patient.name.take(2).given = 'Peter' | 'James' | 'Jim'",
      "status": "passed",
      "execution_time_ms": 0.082583,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake5",
      "description": "",
      "expression": "Patient.name.take(3).given.count() = 5",
      "status": "passed",
      "execution_time_ms": 0.106,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake6",
      "description": "",
      "expression": "Patient.name.take(4).given.count() = 5",
      "status": "passed",
      "execution_time_ms": 0.098667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake7",
      "description": "",
      "expression": "Patient.name.take(0).given.exists() = false",
      "status": "passed",
      "execution_time_ms": 0.080167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIif1",
      "description": "",
      "expression": "iif(Patient.name.exists(), 'named', 'unnamed') = 'named'",
      "status": "passed",
      "execution_time_ms": 0.052458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIif2",
      "description": "",
      "expression": "iif(Patient.name.empty(), 'unnamed', 'named') = 'named'",
      "status": "passed",
      "execution_time_ms": 0.043791,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIif3",
      "description": "",
      "expression": "iif(true, true, (1 | 2).toString())",
      "status": "passed",
      "execution_time_ms": 0.108458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIif4",
      "description": "",
      "expression": "iif(false, (1 | 2).toString(), true)",
      "status": "passed",
      "execution_time_ms": 0.113834,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToInteger1",
      "description": "",
      "expression": "'1'.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.060084,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToInteger2",
      "description": "",
      "expression": "'-1'.toInteger() = -1",
      "status": "passed",
      "execution_time_ms": 0.065667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToInteger3",
      "description": "",
      "expression": "'0'.toInteger() = 0",
      "status": "passed",
      "execution_time_ms": 0.057,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToInteger4",
      "description": "",
      "expression": "'0.0'.toInteger().empty()",
      "status": "passed",
      "execution_time_ms": 0.0345,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToInteger5",
      "description": "",
      "expression": "'st'.toInteger().empty()",
      "status": "passed",
      "execution_time_ms": 0.035792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToDecimal1",
      "description": "",
      "expression": "'1'.toDecimal() = 1",
      "status": "passed",
      "execution_time_ms": 0.060166,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToDecimal2",
      "description": "",
      "expression": "'-1'.toInteger() = -1",
      "status": "passed",
      "execution_time_ms": 0.064209,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToDecimal3",
      "description": "",
      "expression": "'0'.toDecimal() = 0",
      "status": "passed",
      "execution_time_ms": 0.066375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToDecimal4",
      "description": "",
      "expression": "'0.0'.toDecimal() = 0.0",
      "status": "passed",
      "execution_time_ms": 0.295959,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToDecimal5",
      "description": "",
      "expression": "'st'.toDecimal().empty()",
      "status": "passed",
      "execution_time_ms": 0.206125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToString1",
      "description": "",
      "expression": "1.toString() = '1'",
      "status": "passed",
      "execution_time_ms": 0.079833,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToString2",
      "description": "",
      "expression": "'-1'.toInteger() = -1",
      "status": "passed",
      "execution_time_ms": 0.084458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToString3",
      "description": "",
      "expression": "0.toString() = '0'",
      "status": "passed",
      "execution_time_ms": 0.126625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToString4",
      "description": "",
      "expression": "0.0.toString() = '0.0'",
      "status": "passed",
      "execution_time_ms": 0.070209,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToString5",
      "description": "",
      "expression": "@2014-12-14.toString() = '2014-12-14'",
      "status": "passed",
      "execution_time_ms": 0.054292,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCase1",
      "description": "",
      "expression": "'t'.upper() = 'T'",
      "status": "passed",
      "execution_time_ms": 0.042916,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCase2",
      "description": "",
      "expression": "'t'.lower() = 't'",
      "status": "passed",
      "execution_time_ms": 0.037583,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCase3",
      "description": "",
      "expression": "'T'.upper() = 'T'",
      "status": "passed",
      "execution_time_ms": 0.0475,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCase4",
      "description": "",
      "expression": "'T'.lower() = 't'",
      "status": "passed",
      "execution_time_ms": 0.042167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToChars1",
      "description": "",
      "expression": "'t2'.toChars() = 't' | '2'",
      "status": "passed",
      "execution_time_ms": 0.055209,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring1",
      "description": "",
      "expression": "'12345'.substring(2) = '345'",
      "status": "passed",
      "execution_time_ms": 0.1005,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring2",
      "description": "",
      "expression": "'12345'.substring(2,1) = '3'",
      "status": "passed",
      "execution_time_ms": 0.147708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring3",
      "description": "",
      "expression": "'12345'.substring(2,5) = '345'",
      "status": "passed",
      "execution_time_ms": 0.128542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring4",
      "description": "",
      "expression": "'12345'.substring(25).empty()",
      "status": "passed",
      "execution_time_ms": 0.093542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring5",
      "description": "",
      "expression": "'12345'.substring(-1).empty()",
      "status": "passed",
      "execution_time_ms": 0.086916,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith1",
      "description": "",
      "expression": "'12345'.startsWith('2') = false",
      "status": "passed",
      "execution_time_ms": 0.049958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith2",
      "description": "",
      "expression": "'12345'.startsWith('1') = true",
      "status": "passed",
      "execution_time_ms": 0.038208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith3",
      "description": "",
      "expression": "'12345'.startsWith('12') = true",
      "status": "passed",
      "execution_time_ms": 0.0385,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith4",
      "description": "",
      "expression": "'12345'.startsWith('13') = false",
      "status": "passed",
      "execution_time_ms": 0.040375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith5",
      "description": "",
      "expression": "'12345'.startsWith('12345') = true",
      "status": "passed",
      "execution_time_ms": 0.046833,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith6",
      "description": "",
      "expression": "'12345'.startsWith('123456') = false",
      "status": "passed",
      "execution_time_ms": 0.046875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith7",
      "description": "",
      "expression": "'12345'.startsWith('') = true",
      "status": "passed",
      "execution_time_ms": 0.040917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith1",
      "description": "",
      "expression": "'12345'.endsWith('2') = false",
      "status": "passed",
      "execution_time_ms": 0.047666,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith2",
      "description": "",
      "expression": "'12345'.endsWith('5') = true",
      "status": "passed",
      "execution_time_ms": 0.037917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith3",
      "description": "",
      "expression": "'12345'.endsWith('45') = true",
      "status": "passed",
      "execution_time_ms": 0.035084,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith4",
      "description": "",
      "expression": "'12345'.endsWith('35') = false",
      "status": "passed",
      "execution_time_ms": 0.039416,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith5",
      "description": "",
      "expression": "'12345'.endsWith('12345') = true",
      "status": "passed",
      "execution_time_ms": 0.034291,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith6",
      "description": "",
      "expression": "'12345'.endsWith('012345') = false",
      "status": "passed",
      "execution_time_ms": 0.039,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith7",
      "description": "",
      "expression": "'12345'.endsWith('') = true",
      "status": "passed",
      "execution_time_ms": 0.036792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString1",
      "description": "",
      "expression": "'12345'.contains('6') = false",
      "status": "passed",
      "execution_time_ms": 0.044834,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString2",
      "description": "",
      "expression": "'12345'.contains('5') = true",
      "status": "passed",
      "execution_time_ms": 0.037167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString3",
      "description": "",
      "expression": "'12345'.contains('45') = true",
      "status": "passed",
      "execution_time_ms": 0.33425,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString4",
      "description": "",
      "expression": "'12345'.contains('35') = false",
      "status": "passed",
      "execution_time_ms": 0.130958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString5",
      "description": "",
      "expression": "'12345'.contains('12345') = true",
      "status": "passed",
      "execution_time_ms": 0.08325,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString6",
      "description": "",
      "expression": "'12345'.contains('012345') = false",
      "status": "passed",
      "execution_time_ms": 0.102917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString7",
      "description": "",
      "expression": "'12345'.contains('') = true",
      "status": "passed",
      "execution_time_ms": 0.122166,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLength1",
      "description": "",
      "expression": "'123456'.length() = 6",
      "status": "passed",
      "execution_time_ms": 0.076292,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLength2",
      "description": "",
      "expression": "'12345'.length() = 5",
      "status": "passed",
      "execution_time_ms": 0.063291,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLength3",
      "description": "",
      "expression": "'123'.length() = 3",
      "status": "passed",
      "execution_time_ms": 0.055584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLength4",
      "description": "",
      "expression": "'1'.length() = 1",
      "status": "passed",
      "execution_time_ms": 0.067708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLength5",
      "description": "",
      "expression": "''.length() = 0",
      "status": "passed",
      "execution_time_ms": 0.060542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'test'.encode('base64')",
      "status": "passed",
      "execution_time_ms": 0.038,
      "expected": [
        {
          "type": "string",
          "value": "dGVzdA=="
        }
      ],
      "actual": [
        "dGVzdA=="
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'test'.encode('hex')",
      "status": "passed",
      "execution_time_ms": 0.036792,
      "expected": [
        {
          "type": "string",
          "value": "74657374"
        }
      ],
      "actual": [
        "74657374"
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'subjects?_d'.encode('base64')",
      "status": "passed",
      "execution_time_ms": 0.037417,
      "expected": [
        {
          "type": "string",
          "value": "c3ViamVjdHM/X2Q="
        }
      ],
      "actual": [
        "c3ViamVjdHM/X2Q="
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'subjects?_d'.encode('urlbase64')",
      "status": "passed",
      "execution_time_ms": 0.034583,
      "expected": [
        {
          "type": "string",
          "value": "c3ViamVjdHM_X2Q="
        }
      ],
      "actual": [
        "c3ViamVjdHM_X2Q="
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'dGVzdA=='.decode('base64')",
      "status": "passed",
      "execution_time_ms": 0.058792,
      "expected": [
        {
          "type": "string",
          "value": "test"
        }
      ],
      "actual": [
        "test"
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'74657374'.decode('hex')",
      "status": "passed",
      "execution_time_ms": 0.037458,
      "expected": [
        {
          "type": "string",
          "value": "test"
        }
      ],
      "actual": [
        "test"
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'c3ViamVjdHM/X2Q='.decode('base64')",
      "status": "passed",
      "execution_time_ms": 0.040292,
      "expected": [
        {
          "type": "string",
          "value": "subjects?_d"
        }
      ],
      "actual": [
        "subjects?_d"
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'c3ViamVjdHM_X2Q='.decode('urlbase64')",
      "status": "passed",
      "execution_time_ms": 0.032792,
      "expected": [
        {
          "type": "string",
          "value": "subjects?_d"
        }
      ],
      "actual": [
        "subjects?_d"
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'\"1\u003c2\"'.escape('html')",
      "status": "error",
      "execution_time_ms": 0.037792,
      "expected": [
        {
          "type": "string",
          "value": "\u0026quot;1\u0026lt;2\u0026quot;"
        }
      ],
      "actual": [],
      "error": "Evaluation error: invalid syntax"
    },
    {
      "name": "",
      "description": "",
      "expression": "'\"1\u003c2\"'.escape('json')",
      "status": "error",
      "execution_time_ms": 0.034834,
      "expected": [
        {
          "type": "string",
          "value": "\\\"1\u003c2\\\""
        }
      ],
      "actual": [],
      "error": "Evaluation error: invalid syntax"
    },
    {
      "name": "",
      "description": "",
      "expression": "'\u0026quot;1\u0026lt;2\u0026quot;'.unescape('html')",
      "status": "passed",
      "execution_time_ms": 0.149041,
      "expected": [
        {
          "type": "string",
          "value": "\"1\u003c2\""
        }
      ],
      "actual": [
        "\"1\u003c2\""
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'\\\"1\u003c2\\\"'.unescape('json')",
      "status": "error",
      "execution_time_ms": 0.044333,
      "expected": [
        {
          "type": "string",
          "value": "\"1\u003c2\""
        }
      ],
      "actual": [],
      "error": "Evaluation error: failed to unescape JSON string: invalid character '1' after top-level value"
    },
    {
      "name": "",
      "description": "",
      "expression": "'123456'.trim().length() = 6",
      "status": "passed",
      "execution_time_ms": 0.063416,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'123 456'.trim().length() = 7",
      "status": "passed",
      "execution_time_ms": 0.057416,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "' 123456 '.trim().length() = 6",
      "status": "passed",
      "execution_time_ms": 0.059917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'  '.trim().length() = 0",
      "status": "passed",
      "execution_time_ms": 0.054667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "'Peter,James,Jim,Peter,James'.split(',').count() = 5",
      "status": "passed",
      "execution_time_ms": 0.061292,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "name.given.join(',')",
      "status": "passed",
      "execution_time_ms": 0.047709,
      "expected": [
        {
          "type": "string",
          "value": "Peter,James,Jim,Peter,James"
        }
      ],
      "actual": [
        "Peter,James,Jim,Peter,James"
      ]
    },
    {
      "name": "testTrace1",
      "description": "",
      "expression": "name.given.trace('test').count() = 5",
      "status": "passed",
      "execution_time_ms": 0.075833,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTrace2",
      "description": "",
      "expression": "name.trace('test', given).count() = 3",
      "status": "passed",
      "execution_time_ms": 0.159291,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToday1",
      "description": "",
      "expression": "Patient.birthDate \u003c today()",
      "status": "passed",
      "execution_time_ms": 0.059208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToday2",
      "description": "",
      "expression": "today().toString().length() = 10",
      "status": "passed",
      "execution_time_ms": 0.221334,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNow1",
      "description": "",
      "expression": "Patient.birthDate \u003c now()",
      "status": "failed",
      "execution_time_ms": 0.08725,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testNow2",
      "description": "",
      "expression": "now().toString().length() \u003e 10",
      "status": "passed",
      "execution_time_ms": 0.180208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality1",
      "description": "",
      "expression": "1 = 1",
      "status": "passed",
      "execution_time_ms": 0.247375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality2",
      "description": "",
      "expression": "{} = {}",
      "status": "passed",
      "execution_time_ms": 0.037125,
      "expected": null,
      "actual": null
    },
    {
      "name": "testEquality3",
      "description": "",
      "expression": "true = {}",
      "status": "passed",
      "execution_time_ms": 0.047792,
      "expected": null,
      "actual": null
    },
    {
      "name": "testEquality4",
      "description": "",
      "expression": "(1) = (1)",
      "status": "passed",
      "execution_time_ms": 0.123333,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality5",
      "description": "",
      "expression": "(1 | 2) = (1 | 2)",
      "status": "passed",
      "execution_time_ms": 0.179083,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality6",
      "description": "",
      "expression": "(1 | 2 | 3) = (1 | 2 | 3)",
      "status": "passed",
      "execution_time_ms": 0.254542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality7",
      "description": "",
      "expression": "(1 | 1) = (1 | 2 | {})",
      "status": "failed",
      "execution_time_ms": 0.17975,
      "expected": null,
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality8",
      "description": "",
      "expression": "1 = 2",
      "status": "passed",
      "execution_time_ms": 0.093125,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality9",
      "description": "",
      "expression": "'a' = 'a'",
      "status": "passed",
      "execution_time_ms": 0.037083,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality10",
      "description": "",
      "expression": "'a' = 'A'",
      "status": "passed",
      "execution_time_ms": 0.031584,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality11",
      "description": "",
      "expression": "'a' = 'b'",
      "status": "passed",
      "execution_time_ms": 0.031,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality12",
      "description": "",
      "expression": "1.1 = 1.1",
      "status": "passed",
      "execution_time_ms": 0.10475,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality13",
      "description": "",
      "expression": "1.1 = 1.2",
      "status": "passed",
      "execution_time_ms": 0.10675,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality14",
      "description": "",
      "expression": "1.10 = 1.1",
      "status": "passed",
      "execution_time_ms": 0.084958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality15",
      "description": "",
      "expression": "0 = 0",
      "status": "passed",
      "execution_time_ms": 0.215834,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality16",
      "description": "",
      "expression": "0.0 = 0",
      "status": "passed",
      "execution_time_ms": 0.31725,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality17",
      "description": "",
      "expression": "@2012-04-15 = @2012-04-15",
      "status": "passed",
      "execution_time_ms": 0.046708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality18",
      "description": "",
      "expression": "@2012-04-15 = @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.035958,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality19",
      "description": "",
      "expression": "@2012-04-15 = @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.046083,
      "expected": null,
      "actual": null
    },
    {
      "name": "testEquality20",
      "description": "",
      "expression": "@2012-04-15T15:00:00 = @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.040416,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality21",
      "description": "",
      "expression": "@2012-04-15T15:30:31 = @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.037625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality22",
      "description": "",
      "expression": "@2012-04-15T15:30:31 = @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.039959,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality23",
      "description": "",
      "expression": "@2012-04-15T15:00:00Z = @2012-04-15T10:00:00",
      "status": "failed",
      "execution_time_ms": 0.036833,
      "expected": null,
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality24",
      "description": "",
      "expression": "@2012-04-15T15:00:00+02:00 = @2012-04-15T16:00:00+03:00",
      "status": "passed",
      "execution_time_ms": 0.041416,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality25",
      "description": "",
      "expression": "name = name",
      "status": "passed",
      "execution_time_ms": 0.0395,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality26",
      "description": "",
      "expression": "name.take(2) = name.take(2).first() | name.take(2).last()",
      "status": "passed",
      "execution_time_ms": 0.167916,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality27",
      "description": "",
      "expression": "name.take(2) = name.take(2).last() | name.take(2).first()",
      "status": "passed",
      "execution_time_ms": 0.137792,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality28",
      "description": "",
      "expression": "Observation.value = 185 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.050584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality1",
      "description": "",
      "expression": "1 != 1",
      "status": "passed",
      "execution_time_ms": 0.078416,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality2",
      "description": "",
      "expression": "{} != {}",
      "status": "passed",
      "execution_time_ms": 0.030167,
      "expected": null,
      "actual": null
    },
    {
      "name": "testNEquality3",
      "description": "",
      "expression": "1 != 2",
      "status": "passed",
      "execution_time_ms": 0.076292,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality4",
      "description": "",
      "expression": "'a' != 'a'",
      "status": "passed",
      "execution_time_ms": 0.030292,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality5",
      "description": "",
      "expression": "'a' != 'b'",
      "status": "passed",
      "execution_time_ms": 0.029375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality6",
      "description": "",
      "expression": "1.1 != 1.1",
      "status": "passed",
      "execution_time_ms": 0.078709,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality7",
      "description": "",
      "expression": "1.1 != 1.2",
      "status": "passed",
      "execution_time_ms": 0.076375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality8",
      "description": "",
      "expression": "1.10 != 1.1",
      "status": "passed",
      "execution_time_ms": 0.077,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality9",
      "description": "",
      "expression": "0 != 0",
      "status": "passed",
      "execution_time_ms": 0.197917,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality10",
      "description": "",
      "expression": "0.0 != 0",
      "status": "passed",
      "execution_time_ms": 0.313625,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality11",
      "description": "",
      "expression": "@2012-04-15 != @2012-04-15",
      "status": "passed",
      "execution_time_ms": 0.034333,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality12",
      "description": "",
      "expression": "@2012-04-15 != @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.030542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality13",
      "description": "",
      "expression": "@2012-04-15 != @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.035958,
      "expected": null,
      "actual": null
    },
    {
      "name": "testNEquality14",
      "description": "",
      "expression": "@2012-04-15T15:00:00 != @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.034042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality15",
      "description": "",
      "expression": "@2012-04-15T15:30:31 != @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.032541,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality16",
      "description": "",
      "expression": "@2012-04-15T15:30:31 != @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.03325,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality17",
      "description": "",
      "expression": "@2012-04-15T15:00:00Z != @2012-04-15T10:00:00",
      "status": "failed",
      "execution_time_ms": 0.032041,
      "expected": null,
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality18",
      "description": "",
      "expression": "@2012-04-15T15:00:00+02:00 != @2012-04-15T16:00:00+03:00",
      "status": "passed",
      "execution_time_ms": 0.034083,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality19",
      "description": "",
      "expression": "name != name",
      "status": "passed",
      "execution_time_ms": 0.034292,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality20",
      "description": "",
      "expression": "name.take(2) != name.take(2).first() | name.take(2).last()",
      "status": "passed",
      "execution_time_ms": 0.14875,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality21",
      "description": "",
      "expression": "name.take(2) != name.take(2).last() | name.take(2).first()",
      "status": "passed",
      "execution_time_ms": 0.13725,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality22",
      "description": "",
      "expression": "1.2 / 1.8 != 0.6666667",
      "status": "passed",
      "execution_time_ms": 0.131083,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality23",
      "description": "",
      "expression": "1.2 / 1.8 != 0.67",
      "status": "passed",
      "execution_time_ms": 0.121625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality24",
      "description": "",
      "expression": "Observation.value != 185 'kg'",
      "status": "failed",
      "execution_time_ms": 0.040708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": null
    },
    {
      "name": "testEquivalent1",
      "description": "",
      "expression": "1 ~ 1",
      "status": "passed",
      "execution_time_ms": 0.10225,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent2",
      "description": "",
      "expression": "{} ~ {}",
      "status": "passed",
      "execution_time_ms": 0.037792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent3",
      "description": "",
      "expression": "1 ~ {}",
      "status": "passed",
      "execution_time_ms": 0.063959,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent4",
      "description": "",
      "expression": "1 ~ 2",
      "status": "passed",
      "execution_time_ms": 0.079542,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent5",
      "description": "",
      "expression": "'a' ~ 'a'",
      "status": "passed",
      "execution_time_ms": 0.240541,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent6",
      "description": "",
      "expression": "'a' ~ 'A'",
      "status": "passed",
      "execution_time_ms": 0.170375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent7",
      "description": "",
      "expression": "'a' ~ 'b'",
      "status": "passed",
      "execution_time_ms": 0.0335,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent8",
      "description": "",
      "expression": "1.1 ~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.106875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent9",
      "description": "",
      "expression": "1.1 ~ 1.2",
      "status": "passed",
      "execution_time_ms": 0.086667,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent10",
      "description": "",
      "expression": "1.10 ~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.075667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent11",
      "description": "",
      "expression": "1.2 / 1.8 ~ 0.67",
      "status": "passed",
      "execution_time_ms": 0.131083,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent12",
      "description": "",
      "expression": "0 ~ 0",
      "status": "passed",
      "execution_time_ms": 0.09375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent13",
      "description": "",
      "expression": "0.0 ~ 0",
      "status": "passed",
      "execution_time_ms": 0.088667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent14",
      "description": "",
      "expression": "@2012-04-15 ~ @2012-04-15",
      "status": "passed",
      "execution_time_ms": 0.038875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent15",
      "description": "",
      "expression": "@2012-04-15 ~ @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.033292,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent16",
      "description": "",
      "expression": "@2012-04-15 ~ @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.038916,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent17",
      "description": "",
      "expression": "@2012-04-15T15:30:31 ~ @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.033,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent18",
      "description": "",
      "expression": "@2012-04-15T15:30:31 ~ @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.035708,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent19",
      "description": "",
      "expression": "name ~ name",
      "status": "passed",
      "execution_time_ms": 0.043791,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent20",
      "description": "",
      "expression": "name.take(2).given ~ name.take(2).first().given | name.take(2).last().given",
      "status": "passed",
      "execution_time_ms": 0.169791,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent21",
      "description": "",
      "expression": "name.take(2).given ~ name.take(2).last().given | name.take(2).first().given",
      "status": "passed",
      "execution_time_ms": 0.162333,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent22",
      "description": "",
      "expression": "Observation.value ~ 185 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.046333,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent1",
      "description": "",
      "expression": "1 !~ 1",
      "status": "passed",
      "execution_time_ms": 0.112084,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent2",
      "description": "",
      "expression": "{} !~ {}",
      "status": "passed",
      "execution_time_ms": 0.036291,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent3",
      "description": "",
      "expression": "{} !~ 1",
      "status": "passed",
      "execution_time_ms": 0.148791,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent4",
      "description": "",
      "expression": "1 !~ 2",
      "status": "passed",
      "execution_time_ms": 0.196,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent5",
      "description": "",
      "expression": "'a' !~ 'a'",
      "status": "passed",
      "execution_time_ms": 0.1335,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent6",
      "description": "",
      "expression": "'a' !~ 'A'",
      "status": "passed",
      "execution_time_ms": 0.037083,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent7",
      "description": "",
      "expression": "'a' !~ 'b'",
      "status": "passed",
      "execution_time_ms": 0.034584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent8",
      "description": "",
      "expression": "1.1 !~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.089334,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent9",
      "description": "",
      "expression": "1.1 !~ 1.2",
      "status": "passed",
      "execution_time_ms": 0.092708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent10",
      "description": "",
      "expression": "1.10 !~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.081292,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent11",
      "description": "",
      "expression": "0 !~ 0",
      "status": "passed",
      "execution_time_ms": 0.077041,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent12",
      "description": "",
      "expression": "0.0 !~ 0",
      "status": "passed",
      "execution_time_ms": 0.080667,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent13",
      "description": "",
      "expression": "1.2 / 1.8 !~ 0.6",
      "status": "passed",
      "execution_time_ms": 0.129792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent14",
      "description": "",
      "expression": "@2012-04-15 !~ @2012-04-15",
      "status": "passed",
      "execution_time_ms": 0.029792,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent15",
      "description": "",
      "expression": "@2012-04-15 !~ @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.031666,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent16",
      "description": "",
      "expression": "@2012-04-15 !~ @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.032709,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent17",
      "description": "",
      "expression": "@2012-04-15T15:30:31 !~ @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.032375,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent18",
      "description": "",
      "expression": "@2012-04-15T15:30:31 !~ @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.033833,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent19",
      "description": "",
      "expression": "name !~ name",
      "status": "passed",
      "execution_time_ms": 0.037917,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent20",
      "description": "",
      "expression": "name.take(2).given !~ name.take(2).first().given | name.take(2).last().given",
      "status": "passed",
      "execution_time_ms": 0.148708,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent21",
      "description": "",
      "expression": "name.take(2).given !~ name.take(2).last().given | name.take(2).first().given",
      "status": "passed",
      "execution_time_ms": 0.150291,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent22",
      "description": "",
      "expression": "Observation.value !~ 185 'kg'",
      "status": "passed",
      "execution_time_ms": 0.037375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan1",
      "description": "",
      "expression": "1 \u003c 2",
      "status": "passed",
      "execution_time_ms": 0.071583,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan2",
      "description": "",
      "expression": "1.0 \u003c 1.2",
      "status": "passed",
      "execution_time_ms": 0.214292,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan3",
      "description": "",
      "expression": "'a' \u003c 'b'",
      "status": "passed",
      "execution_time_ms": 0.138208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan4",
      "description": "",
      "expression": "'A' \u003c 'a'",
      "status": "passed",
      "execution_time_ms": 0.027875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan5",
      "description": "",
      "expression": "@2014-12-12 \u003c @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.032208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan6",
      "description": "",
      "expression": "@2014-12-13T12:00:00 \u003c @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.030083,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan7",
      "description": "",
      "expression": "@T12:00:00 \u003c @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.036791,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan8",
      "description": "",
      "expression": "1 \u003c 1",
      "status": "passed",
      "execution_time_ms": 0.072792,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan9",
      "description": "",
      "expression": "1.0 \u003c 1.0",
      "status": "passed",
      "execution_time_ms": 0.07325,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan10",
      "description": "",
      "expression": "'a' \u003c 'a'",
      "status": "passed",
      "execution_time_ms": 0.026041,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan11",
      "description": "",
      "expression": "'A' \u003c 'A'",
      "status": "passed",
      "execution_time_ms": 0.026709,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan12",
      "description": "",
      "expression": "@2014-12-12 \u003c @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.0275,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan13",
      "description": "",
      "expression": "@2014-12-13T12:00:00 \u003c @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.031875,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan14",
      "description": "",
      "expression": "@T12:00:00 \u003c @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.035958,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan15",
      "description": "",
      "expression": "2 \u003c 1",
      "status": "passed",
      "execution_time_ms": 0.072417,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan16",
      "description": "",
      "expression": "1.1 \u003c 1.0",
      "status": "passed",
      "execution_time_ms": 0.070375,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan17",
      "description": "",
      "expression": "'b' \u003c 'a'",
      "status": "passed",
      "execution_time_ms": 0.026708,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan18",
      "description": "",
      "expression": "'B' \u003c 'A'",
      "status": "passed",
      "execution_time_ms": 0.028291,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan19",
      "description": "",
      "expression": "@2014-12-13 \u003c @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.031417,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan20",
      "description": "",
      "expression": "@2014-12-13T12:00:01 \u003c @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.029958,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan21",
      "description": "",
      "expression": "@T12:00:01 \u003c @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.028416,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan22",
      "description": "",
      "expression": "Observation.value \u003c 200 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.038917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan23",
      "description": "",
      "expression": "@2018-03 \u003c @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.035792,
      "expected": null,
      "actual": null
    },
    {
      "name": "testLessThan24",
      "description": "",
      "expression": "@2018-03-01T10 \u003c @2018-03-01T10:30",
      "status": "passed",
      "execution_time_ms": 0.03375,
      "expected": null,
      "actual": null
    },
    {
      "name": "testLessThan25",
      "description": "",
      "expression": "@T10 \u003c @T10:30",
      "status": "passed",
      "execution_time_ms": 0.02875,
      "expected": null,
      "actual": null
    },
    {
      "name": "testLessThan26",
      "description": "",
      "expression": "@2018-03-01T10:30:00 \u003c @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.030584,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan27",
      "description": "",
      "expression": "@T10:30:00 \u003c @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.030083,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual1",
      "description": "",
      "expression": "1 \u003c= 2",
      "status": "passed",
      "execution_time_ms": 0.097792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual2",
      "description": "",
      "expression": "1.0 \u003c= 1.2",
      "status": "passed",
      "execution_time_ms": 0.072583,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual3",
      "description": "",
      "expression": "'a' \u003c= 'b'",
      "status": "passed",
      "execution_time_ms": 0.103416,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual4",
      "description": "",
      "expression": "'A' \u003c= 'a'",
      "status": "passed",
      "execution_time_ms": 0.05675,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual5",
      "description": "",
      "expression": "@2014-12-12 \u003c= @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.05725,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual6",
      "description": "",
      "expression": "@2014-12-13T12:00:00 \u003c= @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.145875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual7",
      "description": "",
      "expression": "@T12:00:00 \u003c= @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.03125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual8",
      "description": "",
      "expression": "1 \u003c= 1",
      "status": "passed",
      "execution_time_ms": 0.08175,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual9",
      "description": "",
      "expression": "1.0 \u003c= 1.0",
      "status": "passed",
      "execution_time_ms": 0.070167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual10",
      "description": "",
      "expression": "'a' \u003c= 'a'",
      "status": "passed",
      "execution_time_ms": 0.02725,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual11",
      "description": "",
      "expression": "'A' \u003c= 'A'",
      "status": "passed",
      "execution_time_ms": 0.027459,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual12",
      "description": "",
      "expression": "@2014-12-12 \u003c= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.028292,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual13",
      "description": "",
      "expression": "@2014-12-13T12:00:00 \u003c= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.0315,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual14",
      "description": "",
      "expression": "@T12:00:00 \u003c= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.027959,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual15",
      "description": "",
      "expression": "2 \u003c= 1",
      "status": "passed",
      "execution_time_ms": 0.069167,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual16",
      "description": "",
      "expression": "1.1 \u003c= 1.0",
      "status": "passed",
      "execution_time_ms": 0.069833,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual17",
      "description": "",
      "expression": "'b' \u003c= 'a'",
      "status": "passed",
      "execution_time_ms": 0.026917,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual18",
      "description": "",
      "expression": "'B' \u003c= 'A'",
      "status": "passed",
      "execution_time_ms": 0.027042,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual19",
      "description": "",
      "expression": "@2014-12-13 \u003c= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.027666,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual20",
      "description": "",
      "expression": "@2014-12-13T12:00:01 \u003c= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.030625,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual21",
      "description": "",
      "expression": "@T12:00:01 \u003c= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.028375,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual22",
      "description": "",
      "expression": "Observation.value \u003c= 200 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.037167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual23",
      "description": "",
      "expression": "@2018-03 \u003c= @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.028042,
      "expected": null,
      "actual": null
    },
    {
      "name": "testLessOrEqual24",
      "description": "",
      "expression": "@2018-03-01T10 \u003c= @2018-03-01T10:30",
      "status": "passed",
      "execution_time_ms": 0.029042,
      "expected": null,
      "actual": null
    },
    {
      "name": "testLessOrEqual25",
      "description": "",
      "expression": "@T10 \u003c= @T10:30",
      "status": "passed",
      "execution_time_ms": 0.028208,
      "expected": null,
      "actual": null
    },
    {
      "name": "testLessOrEqual26",
      "description": "",
      "expression": "@2018-03-01T10:30:00  \u003c= @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.031584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual27",
      "description": "",
      "expression": "@T10:30:00 \u003c= @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.028125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual1",
      "description": "",
      "expression": "1 \u003e= 2",
      "status": "passed",
      "execution_time_ms": 0.095791,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual2",
      "description": "",
      "expression": "1.0 \u003e= 1.2",
      "status": "passed",
      "execution_time_ms": 0.071041,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual3",
      "description": "",
      "expression": "'a' \u003e= 'b'",
      "status": "passed",
      "execution_time_ms": 0.02725,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual4",
      "description": "",
      "expression": "'A' \u003e= 'a'",
      "status": "passed",
      "execution_time_ms": 0.027209,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual5",
      "description": "",
      "expression": "@2014-12-12 \u003e= @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.027666,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual6",
      "description": "",
      "expression": "@2014-12-13T12:00:00 \u003e= @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.02925,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual7",
      "description": "",
      "expression": "@T12:00:00 \u003e= @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.033084,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual8",
      "description": "",
      "expression": "1 \u003e= 1",
      "status": "passed",
      "execution_time_ms": 0.219666,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual9",
      "description": "",
      "expression": "1.0 \u003e= 1.0",
      "status": "passed",
      "execution_time_ms": 0.309458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual10",
      "description": "",
      "expression": "'a' \u003e= 'a'",
      "status": "passed",
      "execution_time_ms": 0.042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual11",
      "description": "",
      "expression": "'A' \u003e= 'A'",
      "status": "passed",
      "execution_time_ms": 0.02975,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual12",
      "description": "",
      "expression": "@2014-12-12 \u003e= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.031709,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual13",
      "description": "",
      "expression": "@2014-12-13T12:00:00 \u003e= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.034125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual14",
      "description": "",
      "expression": "@T12:00:00 \u003e= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.029334,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual15",
      "description": "",
      "expression": "2 \u003e= 1",
      "status": "passed",
      "execution_time_ms": 0.077833,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual16",
      "description": "",
      "expression": "1.1 \u003e= 1.0",
      "status": "passed",
      "execution_time_ms": 0.076041,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual17",
      "description": "",
      "expression": "'b' \u003e= 'a'",
      "status": "passed",
      "execution_time_ms": 0.028917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual18",
      "description": "",
      "expression": "'B' \u003e= 'A'",
      "status": "passed",
      "execution_time_ms": 0.027875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual19",
      "description": "",
      "expression": "@2014-12-13 \u003e= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.030041,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual20",
      "description": "",
      "expression": "@2014-12-13T12:00:01 \u003e= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.031,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual21",
      "description": "",
      "expression": "@T12:00:01 \u003e= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.028625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual22",
      "description": "",
      "expression": "Observation.value \u003e= 100 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.042417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual23",
      "description": "",
      "expression": "@2018-03 \u003e= @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.029042,
      "expected": null,
      "actual": null
    },
    {
      "name": "testGreatorOrEqual24",
      "description": "",
      "expression": "@2018-03-01T10 \u003e= @2018-03-01T10:30",
      "status": "passed",
      "execution_time_ms": 0.028792,
      "expected": null,
      "actual": null
    },
    {
      "name": "testGreatorOrEqual25",
      "description": "",
      "expression": "@T10 \u003e= @T10:30",
      "status": "passed",
      "execution_time_ms": 0.029375,
      "expected": null,
      "actual": null
    },
    {
      "name": "testGreatorOrEqual26",
      "description": "",
      "expression": "@2018-03-01T10:30:00 \u003e= @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.03125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual27",
      "description": "",
      "expression": "@T10:30:00 \u003e= @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.028042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan1",
      "description": "",
      "expression": "1 \u003e 2",
      "status": "passed",
      "execution_time_ms": 0.101959,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan2",
      "description": "",
      "expression": "1.0 \u003e 1.2",
      "status": "passed",
      "execution_time_ms": 0.07225,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan3",
      "description": "",
      "expression": "'a' \u003e 'b'",
      "status": "passed",
      "execution_time_ms": 0.027625,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan4",
      "description": "",
      "expression": "'A' \u003e 'a'",
      "status": "passed",
      "execution_time_ms": 0.027708,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan5",
      "description": "",
      "expression": "@2014-12-12 \u003e @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.027917,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan6",
      "description": "",
      "expression": "@2014-12-13T12:00:00 \u003e @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.03075,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan7",
      "description": "",
      "expression": "@T12:00:00 \u003e @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.028125,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan8",
      "description": "",
      "expression": "1 \u003e 1",
      "status": "passed",
      "execution_time_ms": 0.071625,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan9",
      "description": "",
      "expression": "1.0 \u003e 1.0",
      "status": "passed",
      "execution_time_ms": 0.074083,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan10",
      "description": "",
      "expression": "'a' \u003e 'a'",
      "status": "passed",
      "execution_time_ms": 0.103333,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan11",
      "description": "",
      "expression": "'A' \u003e 'A'",
      "status": "passed",
      "execution_time_ms": 0.05525,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan12",
      "description": "",
      "expression": "@2014-12-12 \u003e @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.088583,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan13",
      "description": "",
      "expression": "@2014-12-13T12:00:00 \u003e @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.061833,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan14",
      "description": "",
      "expression": "@T12:00:00 \u003e @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.087791,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan15",
      "description": "",
      "expression": "2 \u003e 1",
      "status": "passed",
      "execution_time_ms": 0.152916,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan16",
      "description": "",
      "expression": "1.1 \u003e 1.0",
      "status": "passed",
      "execution_time_ms": 0.082292,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan17",
      "description": "",
      "expression": "'b' \u003e 'a'",
      "status": "passed",
      "execution_time_ms": 0.02925,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan18",
      "description": "",
      "expression": "'B' \u003e 'A'",
      "status": "passed",
      "execution_time_ms": 0.028584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan19",
      "description": "",
      "expression": "@2014-12-13 \u003e @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.035,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan20",
      "description": "",
      "expression": "@2014-12-13T12:00:01 \u003e @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.032,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan21",
      "description": "",
      "expression": "@T12:00:01 \u003e @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.032916,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan22",
      "description": "",
      "expression": "Observation.value \u003e 100 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.042125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan23",
      "description": "",
      "expression": "@2018-03 \u003e @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.029666,
      "expected": null,
      "actual": null
    },
    {
      "name": "testGreaterThan24",
      "description": "",
      "expression": "@2018-03-01T10 \u003e @2018-03-01T10:30",
      "status": "passed",
      "execution_time_ms": 0.028917,
      "expected": null,
      "actual": null
    },
    {
      "name": "testGreaterThan25",
      "description": "",
      "expression": "@T10 \u003e @T10:30",
      "status": "passed",
      "execution_time_ms": 0.027584,
      "expected": null,
      "actual": null
    },
    {
      "name": "testGreaterThan26",
      "description": "",
      "expression": "@2018-03-01T10:30:00 \u003e @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.04175,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan27",
      "description": "",
      "expression": "@T10:30:00 \u003e @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.038125,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testUnion1",
      "description": "",
      "expression": "(1 | 2 | 3).count() = 3",
      "status": "passed",
      "execution_time_ms": 0.1425,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testUnion2",
      "description": "",
      "expression": "(1 | 2 | 2).count() = 2",
      "status": "passed",
      "execution_time_ms": 0.133042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testUnion3",
      "description": "",
      "expression": "(1|1).count() = 1",
      "status": "passed",
      "execution_time_ms": 0.102042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testUnion4",
      "description": "",
      "expression": "1.union(2).union(3).count() = 3",
      "status": "passed",
      "execution_time_ms": 0.130417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testUnion5",
      "description": "",
      "expression": "1.union(2.union(3)).count() = 3",
      "status": "passed",
      "execution_time_ms": 0.122334,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testUnion6",
      "description": "",
      "expression": "(1 | 2).combine(2).count() = 3",
      "status": "passed",
      "execution_time_ms": 0.394209,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testUnion7",
      "description": "",
      "expression": "1.combine(1).count() = 2",
      "status": "passed",
      "execution_time_ms": 0.152958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testUnion8",
      "description": "",
      "expression": "1.combine(1).union(2).count() = 2",
      "status": "passed",
      "execution_time_ms": 0.13675,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntersect1",
      "description": "",
      "expression": "(1 | 2 | 3).intersect(2 | 4) = 2",
      "status": "passed",
      "execution_time_ms": 0.223,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntersect2",
      "description": "",
      "expression": "(1 | 2).intersect(4).empty()",
      "status": "passed",
      "execution_time_ms": 0.127916,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntersect3",
      "description": "",
      "expression": "(1 | 2).intersect({}).empty()",
      "status": "passed",
      "execution_time_ms": 0.105375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntersect4",
      "description": "",
      "expression": "1.combine(1).intersect(1).count() = 1",
      "status": "passed",
      "execution_time_ms": 0.143,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExclude1",
      "description": "",
      "expression": "(1 | 2 | 3).exclude(2 | 4) = 1 | 3",
      "status": "passed",
      "execution_time_ms": 0.230459,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExclude2",
      "description": "",
      "expression": "(1 | 2).exclude(4) = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.1675,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExclude3",
      "description": "",
      "expression": "(1 | 2).exclude({}) = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.383125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExclude4",
      "description": "",
      "expression": "1.combine(1).exclude(2).count() = 2",
      "status": "passed",
      "execution_time_ms": 0.143667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIn1",
      "description": "",
      "expression": "1 in (1 | 2 | 3)",
      "status": "passed",
      "execution_time_ms": 0.217,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIn2",
      "description": "",
      "expression": "1 in (2 | 3)",
      "status": "passed",
      "execution_time_ms": 0.111291,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testIn3",
      "description": "",
      "expression": "'a' in ('a' | 'c' | 'd')",
      "status": "passed",
      "execution_time_ms": 0.033334,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIn4",
      "description": "",
      "expression": "'b' in ('a' | 'c' | 'd')",
      "status": "passed",
      "execution_time_ms": 0.033,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testContainsCollection1",
      "description": "",
      "expression": "(1 | 2 | 3) contains 1",
      "status": "passed",
      "execution_time_ms": 0.141584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsCollection2",
      "description": "",
      "expression": "(2 | 3) contains 1 ",
      "status": "passed",
      "execution_time_ms": 0.097167,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testContainsCollection3",
      "description": "",
      "expression": "('a' | 'c' | 'd') contains 'a'",
      "status": "passed",
      "execution_time_ms": 0.031666,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsCollection4",
      "description": "",
      "expression": "('a' | 'c' | 'd') contains 'b'",
      "status": "passed",
      "execution_time_ms": 0.032292,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testBooleanLogicAnd1",
      "description": "",
      "expression": "(true and true) = true",
      "status": "passed",
      "execution_time_ms": 0.036291,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd2",
      "description": "",
      "expression": "(true and false) = false",
      "status": "passed",
      "execution_time_ms": 0.032458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd3",
      "description": "",
      "expression": "(true and {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.030667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd4",
      "description": "",
      "expression": "(false and true) = false",
      "status": "passed",
      "execution_time_ms": 0.033875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd5",
      "description": "",
      "expression": "(false and false) = false",
      "status": "passed",
      "execution_time_ms": 0.029,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd6",
      "description": "",
      "expression": "(false and {}) = false",
      "status": "passed",
      "execution_time_ms": 0.030625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd7",
      "description": "",
      "expression": "({} and true).empty()",
      "status": "passed",
      "execution_time_ms": 0.03275,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd8",
      "description": "",
      "expression": "({} and false) = false",
      "status": "passed",
      "execution_time_ms": 0.032583,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd9",
      "description": "",
      "expression": "({} and {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.037333,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr1",
      "description": "",
      "expression": "(true or true) = true",
      "status": "passed",
      "execution_time_ms": 0.035708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr2",
      "description": "",
      "expression": "(true or false) = true",
      "status": "passed",
      "execution_time_ms": 0.2805,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr3",
      "description": "",
      "expression": "(true or {}) = true",
      "status": "passed",
      "execution_time_ms": 0.107125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr4",
      "description": "",
      "expression": "(false or true) = true",
      "status": "passed",
      "execution_time_ms": 0.030791,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr5",
      "description": "",
      "expression": "(false or false) = false",
      "status": "passed",
      "execution_time_ms": 0.0335,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr6",
      "description": "",
      "expression": "(false or {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.032959,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr7",
      "description": "",
      "expression": "({} or true) = true",
      "status": "passed",
      "execution_time_ms": 0.036875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr8",
      "description": "",
      "expression": "({} or false).empty()",
      "status": "passed",
      "execution_time_ms": 0.033042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr9",
      "description": "",
      "expression": "({} or {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.031,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr1",
      "description": "",
      "expression": "(true xor true) = false",
      "status": "passed",
      "execution_time_ms": 0.0405,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr2",
      "description": "",
      "expression": "(true xor false) = true",
      "status": "passed",
      "execution_time_ms": 0.033834,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr3",
      "description": "",
      "expression": "(true xor {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.029958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr4",
      "description": "",
      "expression": "(false xor true) = true",
      "status": "passed",
      "execution_time_ms": 0.03,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr5",
      "description": "",
      "expression": "(false xor false) = false",
      "status": "passed",
      "execution_time_ms": 0.029375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr6",
      "description": "",
      "expression": "(false xor {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.030375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr7",
      "description": "",
      "expression": "({} xor true).empty()",
      "status": "passed",
      "execution_time_ms": 0.03325,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr8",
      "description": "",
      "expression": "({} xor false).empty()",
      "status": "passed",
      "execution_time_ms": 0.0335,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr9",
      "description": "",
      "expression": "({} xor {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.032291,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies1",
      "description": "",
      "expression": "(true implies true) = true",
      "status": "passed",
      "execution_time_ms": 0.090417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies2",
      "description": "",
      "expression": "(true implies false) = false",
      "status": "passed",
      "execution_time_ms": 0.030916,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies3",
      "description": "",
      "expression": "(true implies {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.030459,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies4",
      "description": "",
      "expression": "(false implies true) = true",
      "status": "passed",
      "execution_time_ms": 0.028291,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies5",
      "description": "",
      "expression": "(false implies false) = true",
      "status": "passed",
      "execution_time_ms": 0.033209,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies6",
      "description": "",
      "expression": "(false implies {}) = true",
      "status": "passed",
      "execution_time_ms": 0.032,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies7",
      "description": "",
      "expression": "({} implies true) = true",
      "status": "passed",
      "execution_time_ms": 0.0365,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies8",
      "description": "",
      "expression": "({} implies false).empty()",
      "status": "passed",
      "execution_time_ms": 0.029792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies9",
      "description": "",
      "expression": "({} implies {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.030208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPlus1",
      "description": "",
      "expression": "1 + 1 = 2",
      "status": "passed",
      "execution_time_ms": 0.103875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPlus2",
      "description": "",
      "expression": "1 + 0 = 1",
      "status": "passed",
      "execution_time_ms": 0.1335,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPlus3",
      "description": "",
      "expression": "1.2 + 1.8 = 3.0",
      "status": "passed",
      "execution_time_ms": 0.35175,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPlus4",
      "description": "",
      "expression": "'a'+'b' = 'ab'",
      "status": "passed",
      "execution_time_ms": 0.127209,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testConcatenate1",
      "description": "",
      "expression": "'a' \u0026 'b' = 'ab'",
      "status": "passed",
      "execution_time_ms": 0.036541,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testConcatenate2",
      "description": "",
      "expression": "'1' \u0026 {} = '1'",
      "status": "passed",
      "execution_time_ms": 0.030375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testConcatenate3",
      "description": "",
      "expression": "{} \u0026 'b' = 'b'",
      "status": "passed",
      "execution_time_ms": 0.027375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testConcatenate4",
      "description": "",
      "expression": "(1 | 2 | 3) \u0026 'b' = '1,2,3b'",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testMinus1",
      "description": "",
      "expression": "1 - 1 = 0",
      "status": "passed",
      "execution_time_ms": 0.122375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMinus2",
      "description": "",
      "expression": "1 - 0 = 1",
      "status": "passed",
      "execution_time_ms": 0.095417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMinus3",
      "description": "",
      "expression": "1.8 - 1.2 = 0.6",
      "status": "passed",
      "execution_time_ms": 0.102208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMinus4",
      "description": "",
      "expression": "'a'-'b' = 'ab'",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testMultiply1",
      "description": "",
      "expression": "1 * 1 = 1",
      "status": "passed",
      "execution_time_ms": 0.12,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMultiply2",
      "description": "",
      "expression": "1 * 0 = 0",
      "status": "passed",
      "execution_time_ms": 0.098375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMultiply3",
      "description": "",
      "expression": "1.2 * 1.8 = 2.16",
      "status": "passed",
      "execution_time_ms": 0.109375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDivide1",
      "description": "",
      "expression": "1 / 1 = 1",
      "status": "passed",
      "execution_time_ms": 0.111125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDivide2",
      "description": "",
      "expression": "4 / 2 = 2",
      "status": "passed",
      "execution_time_ms": 0.098125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDivide3",
      "description": "",
      "expression": "4.0 / 2.0 = 2.0",
      "status": "passed",
      "execution_time_ms": 0.108625,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDivide4",
      "description": "",
      "expression": "1 / 2 = 0.5",
      "status": "passed",
      "execution_time_ms": 0.433375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDivide5",
      "description": "",
      "expression": "1.2 / 1.8 = 0.66666667",
      "status": "passed",
      "execution_time_ms": 0.109875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testDivide6",
      "description": "",
      "expression": "1 / 0",
      "status": "passed",
      "execution_time_ms": 0.080667,
      "expected": null,
      "actual": null
    },
    {
      "name": "testDiv1",
      "description": "",
      "expression": "1 div 1 = 1",
      "status": "passed",
      "execution_time_ms": 0.135459,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDiv2",
      "description": "",
      "expression": "4 div 2 = 2",
      "status": "passed",
      "execution_time_ms": 0.107125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDiv3",
      "description": "",
      "expression": "5 div 2 = 2",
      "status": "passed",
      "execution_time_ms": 0.109041,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDiv4",
      "description": "",
      "expression": "2.2 div 1.8 = 1",
      "status": "passed",
      "execution_time_ms": 0.118041,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDiv5",
      "description": "",
      "expression": "5 div 0",
      "status": "passed",
      "execution_time_ms": 0.075625,
      "expected": null,
      "actual": null
    },
    {
      "name": "testMod1",
      "description": "",
      "expression": "1 mod 1 = 0",
      "status": "passed",
      "execution_time_ms": 0.129167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMod2",
      "description": "",
      "expression": "4 mod 2 = 0",
      "status": "passed",
      "execution_time_ms": 0.107708,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMod3",
      "description": "",
      "expression": "5 mod 2 = 1",
      "status": "passed",
      "execution_time_ms": 0.106375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMod4",
      "description": "",
      "expression": "2.2 mod 1.8 = 0.4",
      "status": "passed",
      "execution_time_ms": 0.116042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMod5",
      "description": "",
      "expression": "5 mod 0",
      "status": "passed",
      "execution_time_ms": 0.185541,
      "expected": null,
      "actual": null
    },
    {
      "name": "testRound1",
      "description": "",
      "expression": "1.round() = 1",
      "status": "passed",
      "execution_time_ms": 0.183417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testRound2",
      "description": "",
      "expression": "3.14159.round(3) = 3.142",
      "status": "passed",
      "execution_time_ms": 0.198167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSqrt1",
      "description": "",
      "expression": "81.sqrt() = 9.0",
      "status": "passed",
      "execution_time_ms": 0.081583,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSqrt2",
      "description": "",
      "expression": "(-1).sqrt()",
      "status": "passed",
      "execution_time_ms": 0.064208,
      "expected": null,
      "actual": null
    },
    {
      "name": "testAbs1",
      "description": "",
      "expression": "(-5).abs() = 5",
      "status": "passed",
      "execution_time_ms": 0.072667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAbs2",
      "description": "",
      "expression": "(-5.5).abs() = 5.5",
      "status": "passed",
      "execution_time_ms": 0.094375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAbs3",
      "description": "",
      "expression": "(-5.5 'mg').abs() = 5.5 'mg'",
      "status": "passed",
      "execution_time_ms": 0.056,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCeiling1",
      "description": "",
      "expression": "1.ceiling() = 1",
      "status": "passed",
      "execution_time_ms": 0.077916,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCeiling2",
      "description": "",
      "expression": "(-1.1).ceiling() = -1",
      "status": "passed",
      "execution_time_ms": 0.088,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCeiling3",
      "description": "",
      "expression": "1.1.ceiling() = 2",
      "status": "passed",
      "execution_time_ms": 0.072542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExp1",
      "description": "",
      "expression": "0.exp() = 1",
      "status": "passed",
      "execution_time_ms": 0.072208,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExp2",
      "description": "",
      "expression": "(-0.0).exp() = 1",
      "status": "passed",
      "execution_time_ms": 0.068166,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFloor1",
      "description": "",
      "expression": "1.floor() = 1",
      "status": "passed",
      "execution_time_ms": 0.065167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFloor2",
      "description": "",
      "expression": "2.1.floor() = 2",
      "status": "passed",
      "execution_time_ms": 0.074583,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFloor3",
      "description": "",
      "expression": "(-2.1).floor() = -3",
      "status": "passed",
      "execution_time_ms": 0.07875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLn1",
      "description": "",
      "expression": "1.ln() = 0.0",
      "status": "passed",
      "execution_time_ms": 0.070584,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLn2",
      "description": "",
      "expression": "1.0.ln() = 0.0",
      "status": "passed",
      "execution_time_ms": 0.074417,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLog1",
      "description": "",
      "expression": "16.log(2) = 4.0",
      "status": "passed",
      "execution_time_ms": 0.372959,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLog2",
      "description": "",
      "expression": "100.0.log(10.0) = 2.0",
      "status": "passed",
      "execution_time_ms": 0.182834,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPower1",
      "description": "",
      "expression": "2.power(3) = 8",
      "status": "passed",
      "execution_time_ms": 0.106416,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPower2",
      "description": "",
      "expression": "2.5.power(2) = 6.25",
      "status": "passed",
      "execution_time_ms": 0.099042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPower3",
      "description": "",
      "expression": "(-1).power(0.5)",
      "status": "passed",
      "execution_time_ms": 0.102667,
      "expected": null,
      "actual": null
    },
    {
      "name": "testTruncate1",
      "description": "",
      "expression": "101.truncate() = 101",
      "status": "passed",
      "execution_time_ms": 0.073709,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTruncate2",
      "description": "",
      "expression": "1.00000001.truncate() = 1",
      "status": "passed",
      "execution_time_ms": 0.073167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTruncate3",
      "description": "",
      "expression": "(-1.56).truncate() = -1",
      "status": "passed",
      "execution_time_ms": 0.085958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPrecedence1",
      "description": "test unary precedence",
      "expression": "-1.convertsToInteger()",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: semantic"
    },
    {
      "name": "testPrecedence2",
      "description": "",
      "expression": "1+2*3+4 = 11",
      "status": "passed",
      "execution_time_ms": 0.173416,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPrecedence3",
      "description": "",
      "expression": "1 \u003e 2 is Boolean",
      "status": "error",
      "execution_time_ms": 0.098917,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: can not compare Integer to fhirpath.Boolean, left: 1 right: false"
    },
    {
      "name": "testPrecedence4",
      "description": "",
      "expression": "1 | 1 is Integer",
      "status": "failed",
      "execution_time_ms": 0.085833,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        "1",
        true
      ]
    },
    {
      "name": "testVariables1",
      "description": "",
      "expression": "%sct = 'http://snomed.info/sct'",
      "status": "passed",
      "execution_time_ms": 0.042125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testVariables2",
      "description": "",
      "expression": "%loinc = 'http://loinc.org'",
      "status": "passed",
      "execution_time_ms": 0.027792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testVariables3",
      "description": "",
      "expression": "%ucum = 'http://unitsofmeasure.org'",
      "status": "passed",
      "execution_time_ms": 0.031125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testVariables4",
      "description": "",
      "expression": "%`vs-administrative-gender` = 'http://hl7.org/fhir/ValueSet/administrative-gender'",
      "status": "error",
      "execution_time_ms": 0.038916,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: environment variable \"`vs-administrative-gender`\" undefined"
    },
    {
      "name": "testExtension1",
      "description": "",
      "expression": "Patient.birthDate.extension('http://hl7.org/fhir/StructureDefinition/patient-birthTime').exists()",
      "status": "passed",
      "execution_time_ms": 0.050792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testExtension2",
      "description": "",
      "expression": "Patient.birthDate.extension(%`ext-patient-birthTime`).exists()",
      "status": "error",
      "execution_time_ms": 0.222458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: environment variable \"`ext-patient-birthTime`\" undefined"
    },
    {
      "name": "testExtension3",
      "description": "",
      "expression": "Patient.birthDate.extension('http://hl7.org/fhir/StructureDefinition/patient-birthTime1').empty()",
      "status": "passed",
      "execution_time_ms": 0.187834,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType1",
      "description": "",
      "expression": "1.type().namespace = 'System'",
      "status": "passed",
      "execution_time_ms": 0.065125,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType2",
      "description": "",
      "expression": "1.type().name = 'Integer'",
      "status": "passed",
      "execution_time_ms": 0.055792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType3",
      "description": "",
      "expression": "true.type().namespace = 'System'",
      "status": "passed",
      "execution_time_ms": 0.033709,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType4",
      "description": "",
      "expression": "true.type().name = 'Boolean'",
      "status": "passed",
      "execution_time_ms": 0.033958,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType5",
      "description": "",
      "expression": "true.is(Boolean)",
      "status": "passed",
      "execution_time_ms": 0.03675,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType6",
      "description": "",
      "expression": "true.is(System.Boolean)",
      "status": "passed",
      "execution_time_ms": 0.034875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType7",
      "description": "",
      "expression": "true is Boolean",
      "status": "passed",
      "execution_time_ms": 0.034458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType8",
      "description": "",
      "expression": "true is System.Boolean",
      "status": "passed",
      "execution_time_ms": 0.108875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType9",
      "description": "",
      "expression": "Patient.active.type().namespace = 'FHIR'",
      "status": "passed",
      "execution_time_ms": 0.039167,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType10",
      "description": "",
      "expression": "Patient.active.type().name = 'boolean'",
      "status": "passed",
      "execution_time_ms": 0.035875,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType11",
      "description": "",
      "expression": "Patient.active.is(boolean)",
      "status": "passed",
      "execution_time_ms": 0.031292,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType12",
      "description": "",
      "expression": "Patient.active.is(Boolean).not()",
      "status": "passed",
      "execution_time_ms": 0.033458,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType13",
      "description": "",
      "expression": "Patient.active.is(FHIR.boolean)",
      "status": "passed",
      "execution_time_ms": 0.039375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType14",
      "description": "",
      "expression": "Patient.active.is(System.Boolean).not()",
      "status": "passed",
      "execution_time_ms": 0.038209,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType15",
      "description": "",
      "expression": "Patient.type().namespace = 'FHIR'",
      "status": "passed",
      "execution_time_ms": 0.0345,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType16",
      "description": "",
      "expression": "Patient.type().name = 'Patient'",
      "status": "passed",
      "execution_time_ms": 0.034459,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType17",
      "description": "",
      "expression": "Patient.is(Patient)",
      "status": "passed",
      "execution_time_ms": 0.032667,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType18",
      "description": "",
      "expression": "Patient.is(FHIR.Patient)",
      "status": "passed",
      "execution_time_ms": 0.030792,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType19",
      "description": "",
      "expression": "Patient.is(FHIR.`Patient`)",
      "status": "passed",
      "execution_time_ms": 0.029375,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType20",
      "description": "",
      "expression": "Patient.ofType(Patient).type().name",
      "status": "passed",
      "execution_time_ms": 0.036625,
      "expected": [
        {
          "type": "string",
          "value": "Patient"
        }
      ],
      "actual": [
        "Patient"
      ]
    },
    {
      "name": "testType21",
      "description": "",
      "expression": "Patient.ofType(FHIR.Patient).type().name",
      "status": "passed",
      "execution_time_ms": 0.03275,
      "expected": [
        {
          "type": "string",
          "value": "Patient"
        }
      ],
      "actual": [
        "Patient"
      ]
    },
    {
      "name": "testType22",
      "description": "",
      "expression": "Patient.is(System.Patient).not()",
      "status": "error",
      "execution_time_ms": 0.037166,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: can not resolve type `System.Patient`"
    },
    {
      "name": "testType23",
      "description": "",
      "expression": "Patient.ofType(FHIR.`Patient`).type().name",
      "status": "passed",
      "execution_time_ms": 0.036542,
      "expected": [
        {
          "type": "string",
          "value": "Patient"
        }
      ],
      "actual": [
        "Patient"
      ]
    },
    {
      "name": "testConformsTo1",
      "description": "",
      "expression": "conformsTo('http://hl7.org/fhir/StructureDefinition/Patient')",
      "status": "error",
      "execution_time_ms": 0.032042,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [],
      "error": "Evaluation error: function \"conformsTo\" not found"
    },
    {
      "name": "testConformsTo2",
      "description": "",
      "expression": "conformsTo('http://hl7.org/fhir/StructureDefinition/Person')",
      "status": "error",
      "execution_time_ms": 0.029417,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [],
      "error": "Evaluation error: function \"conformsTo\" not found"
    },
    {
      "name": "testConformsTo3",
      "description": "",
      "expression": "conformsTo('http://trash')",
      "status": "skipped",
      "execution_time_ms": 0,
      "expected": null,
      "actual": [],
      "error": "Invalid expression: true"
    },
    {
      "name": "",
      "description": "",
      "expression": "(true and 'foo').empty()",
      "status": "passed",
      "execution_time_ms": 0.031542,
      "expected": [
        {
          "type": "boolean",
          "value": true
        }
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "",
      "description": "",
      "expression": "(true | 'foo').allTrue()",
      "status": "error",
      "execution_time_ms": 0.035041,
      "expected": [
        {
          "type": "boolean",
          "value": false
        }
      ],
      "actual": [],
      "error": "Evaluation error: primitive fhirpath.String 'foo' can not be implicitly converted to fhirpath.Boolean"
    }
  ],
  "summary": {
    "total": 711,
    "passed": 655,
    "failed": 18,
    "errors": 38
  }
}