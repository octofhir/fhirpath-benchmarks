{
  "language": "clojure",
  "timestamp": "2025-07-22T11:07:08.052881Z",
  "tests": [
    {
      "name": "testExtractBirthDate",
      "expression": "birthDate",
      "result": null,
      "expected": [
        {
          "type": "date",
          "value": "1974-12-25"
        }
      ],
      "success": true,
      "executionTimeMs": 30.96775,
      "error": null
    },
    {
      "name": "testPatientHasBirthDate",
      "expression": "birthDate",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.369208,
      "error": null
    },
    {
      "name": "testPatientTelecomTypes",
      "expression": "telecom.use",
      "result": null,
      "expected": [
        {
          "type": "code",
          "value": "home"
        },
        {
          "type": "code",
          "value": "work"
        },
        {
          "type": "code",
          "value": "mobile"
        },
        {
          "type": "code",
          "value": "old"
        }
      ],
      "success": true,
      "executionTimeMs": 3.938834,
      "error": null
    },
    {
      "name": "testSimple",
      "expression": "name.given",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        },
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        }
      ],
      "success": true,
      "executionTimeMs": 2.5975,
      "error": null
    },
    {
      "name": "testSimpleNone",
      "expression": "name.suffix",
      "result": null,
      "expected": [],
      "success": true,
      "executionTimeMs": 2.8265,
      "error": null
    },
    {
      "name": "testEscapedIdentifier",
      "expression": "name.`given`",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        },
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        }
      ],
      "success": true,
      "executionTimeMs": 2.630875,
      "error": null
    },
    {
      "name": "testSimpleBackTick1",
      "expression": "`Patient`.name.`given`",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        },
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        }
      ],
      "success": true,
      "executionTimeMs": 1.949208,
      "error": null
    },
    {
      "name": "testSimpleFail",
      "expression": "name.given1",
      "result": null,
      "expected": [],
      "success": true,
      "executionTimeMs": 2.44375,
      "error": null
    },
    {
      "name": "testSimpleWithContext",
      "expression": "Patient.name.given",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        },
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        }
      ],
      "success": true,
      "executionTimeMs": 1.846667,
      "error": null
    },
    {
      "name": "testSimpleWithWrongContext",
      "expression": "Encounter.name.given",
      "result": null,
      "expected": [],
      "success": true,
      "executionTimeMs": 3.093,
      "error": null
    },
    {
      "name": "testPolymorphismA",
      "expression": "Observation.value.unit",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "lbs"
        }
      ],
      "success": true,
      "executionTimeMs": 2.616666,
      "error": null
    },
    {
      "name": "testPolymorphismB",
      "expression": "Observation.valueQuantity.unit",
      "result": null,
      "expected": [],
      "success": true,
      "executionTimeMs": 2.212125,
      "error": null
    },
    {
      "name": "testPolymorphismIsA1",
      "expression": "Observation.value.is(Quantity)",
      "result": [
        "is",
        [
          null,
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.474541,
      "error": null
    },
    {
      "name": "testPolymorphismIsA2",
      "expression": "Observation.value is Quantity",
      "result": [
        null,
        [
          [
            "Quantity"
          ]
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.532334,
      "error": null
    },
    {
      "name": "testPolymorphismIsA3",
      "expression": "Observation.issued is instant",
      "result": [
        null,
        [
          [
            "instant"
          ]
        ]
      ],
      "expected": [],
      "success": true,
      "executionTimeMs": 2.881834,
      "error": null
    },
    {
      "name": "testPolymorphismIsB",
      "expression": "Observation.value.is(Period).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.246333,
      "error": null
    },
    {
      "name": "testPolymorphismAsA",
      "expression": "Observation.value.as(Quantity).unit",
      "result": [],
      "expected": [
        {
          "type": "string",
          "value": "lbs"
        }
      ],
      "success": true,
      "executionTimeMs": 3.257417,
      "error": null
    },
    {
      "name": "testPolymorphismAsAFunction",
      "expression": "(Observation.value as Quantity).unit",
      "result": [],
      "expected": [
        {
          "type": "string",
          "value": "lbs"
        }
      ],
      "success": true,
      "executionTimeMs": 2.799,
      "error": null
    },
    {
      "name": "testPolymorphismAsB",
      "expression": "(Observation.value as Period).unit",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 2.682167,
      "error": null
    },
    {
      "name": "testPolymorphismAsBFunction",
      "expression": "Observation.value.as(Period).start",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 3.266583,
      "error": null
    },
    {
      "name": "testDollarThis1",
      "expression": "Patient.name.given.where(substring($this.length()-3) = 'out')",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 6.7655,
      "error": null
    },
    {
      "name": "testDollarThis2",
      "expression": "Patient.name.given.where(substring($this.length()-3) = 'ter')",
      "result": [],
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "Peter"
        }
      ],
      "success": true,
      "executionTimeMs": 3.324334,
      "error": null
    },
    {
      "name": "testDollarOrderAllowed",
      "expression": "Patient.name.skip(1).given",
      "result": [],
      "expected": [
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        }
      ],
      "success": true,
      "executionTimeMs": 3.57775,
      "error": null
    },
    {
      "name": "testDollarOrderAllowedA",
      "expression": "Patient.name.skip(3).given",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 3.316167,
      "error": null
    },
    {
      "name": "testDollarOrderNotAllowed",
      "expression": "Patient.children().skip(1)",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 2.332541,
      "error": null
    },
    {
      "name": "testLiteralTrue",
      "expression": "Patient.name.exists() = true",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.776834,
      "error": null
    },
    {
      "name": "testLiteralFalse",
      "expression": "Patient.name.empty() = false",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.117125,
      "error": null
    },
    {
      "name": "testLiteralString",
      "expression": "Patient.name.given.first() = 'Peter'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.937209,
      "error": null
    },
    {
      "name": "testLiteralInteger1",
      "expression": "1.convertsToInteger()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 2.041416,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralInteger0",
      "expression": "0.convertsToInteger()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.11575,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralIntegerNegative1",
      "expression": "(-1).convertsToInteger()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 3.315083,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralIntegerNegative1Invalid",
      "expression": "-1.convertsToInteger()",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 1.561167,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralIntegerMax",
      "expression": "2147483647.convertsToInteger()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.463833,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralString",
      "expression": "'test'.convertsToString()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.677583,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralStringEscapes",
      "expression": "'\\\\\\\/\\f\\r\\n\\t\\\"\\`\\'\\u002a'.convertsToString()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.514792,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralBooleanTrue",
      "expression": "true.convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.858667,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralBooleanFalse",
      "expression": "false.convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.568334,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralDecimal10",
      "expression": "1.0.convertsToDecimal()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.571708,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralDecimal01",
      "expression": "0.1.convertsToDecimal()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.821917,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralDecimal00",
      "expression": "0.0.convertsToDecimal()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.193959,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralDecimalNegative01",
      "expression": "(-0.1).convertsToDecimal()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.477333,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralDecimalNegative01Invalid",
      "expression": "-0.1.convertsToDecimal()",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 1.131417,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralDecimalMax",
      "expression": "1234567890987654321.0.convertsToDecimal()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.966083,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralDecimalStep",
      "expression": "0.00000001.convertsToDecimal()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.395416,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralDateYear",
      "expression": "@2015.is(Date)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.795125,
      "error": null
    },
    {
      "name": "testLiteralDateMonth",
      "expression": "@2015-02.is(Date)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.265792,
      "error": null
    },
    {
      "name": "testLiteralDateDay",
      "expression": "@2015-02-04.is(Date)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.986083,
      "error": null
    },
    {
      "name": "testLiteralDateTimeYear",
      "expression": "@2015T.is(DateTime)",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.216583,
      "error": null
    },
    {
      "name": "testLiteralDateTimeMonth",
      "expression": "@2015-02T.is(DateTime)",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.087209,
      "error": null
    },
    {
      "name": "testLiteralDateTimeDay",
      "expression": "@2015-02-04T.is(DateTime)",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.013375,
      "error": null
    },
    {
      "name": "testLiteralDateTimeHour",
      "expression": "@2015-02-04T14.is(DateTime)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.944709,
      "error": null
    },
    {
      "name": "testLiteralDateTimeMinute",
      "expression": "@2015-02-04T14:34.is(DateTime)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.960125,
      "error": null
    },
    {
      "name": "testLiteralDateTimeSecond",
      "expression": "@2015-02-04T14:34:28.is(DateTime)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.450375,
      "error": null
    },
    {
      "name": "testLiteralDateTimeMillisecond",
      "expression": "@2015-02-04T14:34:28.123.is(DateTime)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.3735,
      "error": null
    },
    {
      "name": "testLiteralDateTimeUTC",
      "expression": "@2015-02-04T14:34:28Z.is(DateTime)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.043959,
      "error": null
    },
    {
      "name": "testLiteralDateTimeTimezoneOffset",
      "expression": "@2015-02-04T14:34:28+10:00.is(DateTime)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.30325,
      "error": null
    },
    {
      "name": "testLiteralTimeHour",
      "expression": "@T14.is(Time)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.873375,
      "error": null
    },
    {
      "name": "testLiteralTimeMinute",
      "expression": "@T14:34.is(Time)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.566417,
      "error": null
    },
    {
      "name": "testLiteralTimeSecond",
      "expression": "@T14:34:28.is(Time)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.164958,
      "error": null
    },
    {
      "name": "testLiteralTimeMillisecond",
      "expression": "@T14:34:28.123.is(Time)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.558209,
      "error": null
    },
    {
      "name": "testLiteralTimeUTC",
      "expression": "@T14:34:28Z.is(Time)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [],
      "success": true,
      "executionTimeMs": 2.258292,
      "error": null
    },
    {
      "name": "testLiteralTimeTimezoneOffset",
      "expression": "@T14:34:28+10:00.is(Time)",
      "result": [
        "is",
        [
          [],
          null
        ]
      ],
      "expected": [],
      "success": true,
      "executionTimeMs": 13.168167,
      "error": null
    },
    {
      "name": "testLiteralQuantityDecimal",
      "expression": "10.1 'mg'.convertsToQuantity()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.955333,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralQuantityInteger",
      "expression": "10 'mg'.convertsToQuantity()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.419541,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralQuantityDay",
      "expression": "4 days.convertsToQuantity()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.670583,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLiteralIntegerNotEqual",
      "expression": "-3 != 3",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 9.302166,
      "error": null
    },
    {
      "name": "testLiteralIntegerEqual",
      "expression": "Patient.name.given.count() = 5",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.152791,
      "error": null
    },
    {
      "name": "testPolarityPrecedence",
      "expression": "-Patient.name.given.count() = -5",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.214792,
      "error": null
    },
    {
      "name": "testLiteralIntegerGreaterThan",
      "expression": "Patient.name.given.count() > -3",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 4.474792,
      "error": null
    },
    {
      "name": "testLiteralIntegerCountNotEqual",
      "expression": "Patient.name.given.count() != 0",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.381167,
      "error": null
    },
    {
      "name": "testLiteralIntegerLessThanTrue",
      "expression": "1 < 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.085459,
      "error": null
    },
    {
      "name": "testLiteralIntegerLessThanFalse",
      "expression": "1 < -2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.833542,
      "error": null
    },
    {
      "name": "testLiteralIntegerLessThanPolarityTrue",
      "expression": "+1 < +2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.891167,
      "error": null
    },
    {
      "name": "testLiteralIntegerLessThanPolarityFalse",
      "expression": "-1 < 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.474125,
      "error": null
    },
    {
      "name": "testLiteralDecimalGreaterThanNonZeroTrue",
      "expression": "Observation.value.value > 180.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.342417,
      "error": null
    },
    {
      "name": "testLiteralDecimalGreaterThanZeroTrue",
      "expression": "Observation.value.value > 0.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.462333,
      "error": null
    },
    {
      "name": "testLiteralDecimalGreaterThanIntegerTrue",
      "expression": "Observation.value.value > 0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.876917,
      "error": null
    },
    {
      "name": "testLiteralDecimalLessThanInteger",
      "expression": "Observation.value.value < 190",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.567541,
      "error": null
    },
    {
      "name": "testLiteralDecimalLessThanInvalid",
      "expression": "Observation.value.value < 'test'",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 2.421208,
      "error": null
    },
    {
      "name": "testDateEqual",
      "expression": "Patient.birthDate = @1974-12-25",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.676125,
      "error": null
    },
    {
      "name": "testDateNotEqual",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.921792,
      "error": null
    },
    {
      "name": "testDateNotEqualTimezoneOffsetBefore",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00-10:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.331583,
      "error": null
    },
    {
      "name": "testDateNotEqualTimezoneOffsetAfter",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00+10:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.783208,
      "error": null
    },
    {
      "name": "testDateNotEqualUTC",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00Z",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.327416,
      "error": null
    },
    {
      "name": "testDateNotEqualTimeSecond",
      "expression": "Patient.birthDate != @T12:14:15",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.59525,
      "error": null
    },
    {
      "name": "testDateNotEqualTimeMinute",
      "expression": "Patient.birthDate != @T12:14",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.388334,
      "error": null
    },
    {
      "name": "testDateNotEqualToday",
      "expression": "Patient.birthDate < today()",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.698417,
      "error": null
    },
    {
      "name": "testDateTimeGreaterThanDate",
      "expression": "now() > Patient.birthDate",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.777583,
      "error": null
    },
    {
      "name": "testLiteralDateTimeTZGreater",
      "expression": "@2017-11-05T01:30:00.0-04:00 > @2017-11-05T01:15:00.0-05:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.13925,
      "error": null
    },
    {
      "name": "testLiteralDateTimeTZLess",
      "expression": "@2017-11-05T01:30:00.0-04:00 < @2017-11-05T01:15:00.0-05:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.545167,
      "error": null
    },
    {
      "name": "testLiteralDateTimeTZEqualFalse",
      "expression": "@2017-11-05T01:30:00.0-04:00 = @2017-11-05T01:15:00.0-05:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 2.6865,
      "error": null
    },
    {
      "name": "testLiteralDateTimeTZEqualTrue",
      "expression": "@2017-11-05T01:30:00.0-04:00 = @2017-11-05T00:30:00.0-05:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.883041,
      "error": null
    },
    {
      "name": "testLiteralUnicode",
      "expression": "Patient.name.given.first() = 'P\\u0065ter'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.583208,
      "error": null
    },
    {
      "name": "testCollectionNotEmpty",
      "expression": "Patient.name.given.empty().not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.043875,
      "error": null
    },
    {
      "name": "testCollectionNotEqualEmpty",
      "expression": "Patient.name.given != {}",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 3.48475,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-not-eq"
    },
    {
      "name": "testExpressions",
      "expression": "Patient.name.select(given | family).distinct()",
      "result": [],
      "expected": [
        {
          "type": "string",
          "value": "Peter"
        },
        {
          "type": "string",
          "value": "James"
        },
        {
          "type": "string",
          "value": "Chalmers"
        },
        {
          "type": "string",
          "value": "Jim"
        },
        {
          "type": "string",
          "value": "Windsor"
        }
      ],
      "success": true,
      "executionTimeMs": 4.495667,
      "error": null
    },
    {
      "name": "testExpressionsEqual",
      "expression": "Patient.name.given.count() = 1 + 4",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.631042,
      "error": null
    },
    {
      "name": "testNotEmpty",
      "expression": "Patient.name.empty().not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.373792,
      "error": null
    },
    {
      "name": "testEmpty",
      "expression": "Patient.link.empty()",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.981,
      "error": null
    },
    {
      "name": "testLiteralNotTrue",
      "expression": "true.not() = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.519958,
      "error": null
    },
    {
      "name": "testLiteralNotFalse",
      "expression": "false.not() = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.521084,
      "error": null
    },
    {
      "name": "testIntegerBooleanNotTrue",
      "expression": "(0).not() = true",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.467666,
      "error": null
    },
    {
      "name": "testIntegerBooleanNotFalse",
      "expression": "(1).not() = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.122583,
      "error": null
    },
    {
      "name": "testNotInvalid",
      "expression": "(1|2).not() = false",
      "result": [
        true
      ],
      "expected": [],
      "success": true,
      "executionTimeMs": 2.715333,
      "error": null
    },
    {
      "name": "testStringYearConvertsToDate",
      "expression": "'2015'.convertsToDate()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.084209,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringMonthConvertsToDate",
      "expression": "'2015-02'.convertsToDate()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.24475,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringDayConvertsToDate",
      "expression": "'2015-02-04'.convertsToDate()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.962458,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringYearConvertsToDateTime",
      "expression": "'2015'.convertsToDateTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.497166,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringMonthConvertsToDateTime",
      "expression": "'2015-02'.convertsToDateTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.523,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringDayConvertsToDateTime",
      "expression": "'2015-02-04'.convertsToDateTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.216542,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringHourConvertsToDateTime",
      "expression": "'2015-02-04T14'.convertsToDateTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.870625,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringMinuteConvertsToDateTime",
      "expression": "'2015-02-04T14:34'.convertsToDateTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.428458,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringSecondConvertsToDateTime",
      "expression": "'2015-02-04T14:34:28'.convertsToDateTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.346375,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringMillisecondConvertsToDateTime",
      "expression": "'2015-02-04T14:34:28.123'.convertsToDateTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.55625,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringUTCConvertsToDateTime",
      "expression": "'2015-02-04T14:34:28Z'.convertsToDateTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.106541,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringTZConvertsToDateTime",
      "expression": "'2015-02-04T14:34:28+10:00'.convertsToDateTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.674958,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringHourConvertsToTime",
      "expression": "'14'.convertsToTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.774458,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringMinuteConvertsToTime",
      "expression": "'14:34'.convertsToTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.246459,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringSecondConvertsToTime",
      "expression": "'14:34:28'.convertsToTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.49175,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringMillisecondConvertsToTime",
      "expression": "'14:34:28.123'.convertsToTime()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.10475,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testIntegerLiteralConvertsToInteger",
      "expression": "1.convertsToInteger()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 3.042709,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testIntegerLiteralIsInteger",
      "expression": "1.is(Integer)",
      "result": [
        "is",
        [
          1,
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.303417,
      "error": null
    },
    {
      "name": "testIntegerLiteralIsSystemInteger",
      "expression": "1.is(System.Integer)",
      "result": [
        "is",
        [
          1,
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.916834,
      "error": null
    },
    {
      "name": "testStringLiteralConvertsToInteger",
      "expression": "'1'.convertsToInteger()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.169416,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringLiteralConvertsToIntegerFalse",
      "expression": "'a'.convertsToInteger().not()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.355833,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringDecimalConvertsToIntegerFalse",
      "expression": "'1.0'.convertsToInteger().not()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.528291,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringLiteralIsNotInteger",
      "expression": "'1'.is(Integer).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.947833,
      "error": null
    },
    {
      "name": "testBooleanLiteralConvertsToInteger",
      "expression": "true.convertsToInteger()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 2.086375,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testBooleanLiteralIsNotInteger",
      "expression": "true.is(Integer).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.022333,
      "error": null
    },
    {
      "name": "testDateIsNotInteger",
      "expression": "@2013-04-05.is(Integer).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.766709,
      "error": null
    },
    {
      "name": "testIntegerLiteralToInteger",
      "expression": "1.toInteger() = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.199291,
      "error": null
    },
    {
      "name": "testStringIntegerLiteralToInteger",
      "expression": "'1'.toInteger() = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.671125,
      "error": null
    },
    {
      "name": "testDecimalLiteralToInteger",
      "expression": "'1.1'.toInteger() = {}",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 2.054334,
      "error": "For input string: \"1.1\""
    },
    {
      "name": "testDecimalLiteralToIntegerIsEmpty",
      "expression": "'1.1'.toInteger().empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.219,
      "error": "For input string: \"1.1\""
    },
    {
      "name": "testBooleanLiteralToInteger",
      "expression": "true.toInteger() = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.90375,
      "error": null
    },
    {
      "name": "testIntegerLiteralConvertsToDecimal",
      "expression": "1.convertsToDecimal()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.155834,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testIntegerLiteralIsNotDecimal",
      "expression": "1.is(Decimal).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.406375,
      "error": null
    },
    {
      "name": "testDecimalLiteralConvertsToDecimal",
      "expression": "1.0.convertsToDecimal()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.696209,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testDecimalLiteralIsDecimal",
      "expression": "1.0.is(Decimal)",
      "result": [
        "is",
        [
          1.0,
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.6915,
      "error": null
    },
    {
      "name": "testStringIntegerLiteralConvertsToDecimal",
      "expression": "'1'.convertsToDecimal()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.934375,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringIntegerLiteralIsNotDecimal",
      "expression": "'1'.is(Decimal).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.706625,
      "error": null
    },
    {
      "name": "testStringLiteralConvertsToDecimalFalse",
      "expression": "'1.a'.convertsToDecimal().not()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.120292,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringDecimalLiteralConvertsToDecimal",
      "expression": "'1.0'.convertsToDecimal()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.568584,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringDecimalLiteralIsNotDecimal",
      "expression": "'1.0'.is(Decimal).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.301708,
      "error": null
    },
    {
      "name": "testBooleanLiteralConvertsToDecimal",
      "expression": "true.convertsToDecimal()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 9.5265,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testBooleanLiteralIsNotDecimal",
      "expression": "true.is(Decimal).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.424459,
      "error": null
    },
    {
      "name": "testIntegerLiteralToDecimal",
      "expression": "1.toDecimal() = 1.0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 14.971291,
      "error": null
    },
    {
      "name": "testIntegerLiteralToDeciamlEquivalent",
      "expression": "1.toDecimal() ~ 1.0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.445125,
      "error": null
    },
    {
      "name": "testDecimalLiteralToDecimal",
      "expression": "1.0.toDecimal() = 1.0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.792125,
      "error": null
    },
    {
      "name": "testDecimalLiteralToDecimalEqual",
      "expression": "'1.1'.toDecimal() = 1.1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 4.181542,
      "error": null
    },
    {
      "name": "testBooleanLiteralToDecimal",
      "expression": "true.toDecimal() = 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.609667,
      "error": null
    },
    {
      "name": "testIntegerLiteralConvertsToQuantity",
      "expression": "1.convertsToQuantity()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.261042,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testIntegerLiteralIsNotQuantity",
      "expression": "1.is(Quantity).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.863958,
      "error": null
    },
    {
      "name": "testDecimalLiteralConvertsToQuantity",
      "expression": "1.0.convertsToQuantity()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.042708,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testDecimalLiteralIsNotQuantity",
      "expression": "1.0.is(System.Quantity).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.571958,
      "error": null
    },
    {
      "name": "testStringIntegerLiteralConvertsToQuantity",
      "expression": "'1'.convertsToQuantity()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.085,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringIntegerLiteralIsNotQuantity",
      "expression": "'1'.is(System.Quantity).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.89275,
      "error": null
    },
    {
      "name": "testStringQuantityLiteralConvertsToQuantity",
      "expression": "'1 day'.convertsToQuantity()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.896375,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringQuantityWeekConvertsToQuantity",
      "expression": "'1 \\'wk\\''.convertsToQuantity()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.826667,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringQuantityWeekConvertsToQuantityFalse",
      "expression": "'1 wk'.convertsToQuantity().not()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.484584,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringDecimalLiteralConvertsToQuantityFalse",
      "expression": "'1.a'.convertsToQuantity().not()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.490333,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringDecimalLiteralConvertsToQuantity",
      "expression": "'1.0'.convertsToQuantity()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.698667,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringDecimalLiteralIsNotSystemQuantity",
      "expression": "'1.0'.is(System.Quantity).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.632875,
      "error": null
    },
    {
      "name": "testBooleanLiteralConvertsToQuantity",
      "expression": "true.convertsToQuantity()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.324833,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testBooleanLiteralIsNotSystemQuantity",
      "expression": "true.is(System.Quantity).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.496209,
      "error": null
    },
    {
      "name": "testIntegerLiteralToQuantity",
      "expression": "1.toQuantity() = 1 '1'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.967166,
      "error": null
    },
    {
      "name": "testDecimalLiteralToQuantity",
      "expression": "1.0.toQuantity() = 1.0 '1'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.163667,
      "error": null
    },
    {
      "name": "testStringIntegerLiteralToQuantity",
      "expression": "'1'.toQuantity()",
      "result": [
        null
      ],
      "expected": [
        {
          "type": "Quantity",
          "value": "1 '1'"
        }
      ],
      "success": true,
      "executionTimeMs": 1.43675,
      "error": null
    },
    {
      "name": "testStringQuantityLiteralToQuantity",
      "expression": "'1 day'.toQuantity() = 1 day",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.904625,
      "error": null
    },
    {
      "name": "testStringQuantityDayLiteralToQuantity",
      "expression": "'1 day'.toQuantity() = 1 '{day}'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.29625,
      "error": null
    },
    {
      "name": "testStringQuantityWeekLiteralToQuantity",
      "expression": "'1 \\'wk\\''.toQuantity() = 1 'wk'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.448959,
      "error": null
    },
    {
      "name": "testStringDecimalLiteralToQuantity",
      "expression": "'1.0'.toQuantity() ~ 1 '1'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.435833,
      "error": null
    },
    {
      "name": "testIntegerLiteralConvertsToBoolean",
      "expression": "1.convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.538166,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testIntegerLiteralConvertsToBooleanFalse",
      "expression": "2.convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": false,
      "executionTimeMs": 1.237875,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testNegativeIntegerLiteralConvertsToBooleanFalse",
      "expression": "(-1).convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": false,
      "executionTimeMs": 0.99475,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testIntegerLiteralFalseConvertsToBoolean",
      "expression": "0.convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.145875,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testDecimalLiteralConvertsToBoolean",
      "expression": "1.0.convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.37175,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringTrueLiteralConvertsToBoolean",
      "expression": "'true'.convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.520708,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringFalseLiteralConvertsToBoolean",
      "expression": "'false'.convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.344084,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringFalseLiteralAlsoConvertsToBoolean",
      "expression": "'False'.convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.982375,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testTrueLiteralConvertsToBoolean",
      "expression": "true.convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.958792,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testFalseLiteralConvertsToBoolean",
      "expression": "false.convertsToBoolean()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.454458,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testIntegerLiteralToBoolean",
      "expression": "1.toBoolean()",
      "result": [
        "toboolean",
        1
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.231583,
      "error": null
    },
    {
      "name": "testIntegerLiteralToBooleanEmpty",
      "expression": "2.toBoolean()",
      "result": [
        "toboolean",
        2
      ],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.79825,
      "error": null
    },
    {
      "name": "testIntegerLiteralToBooleanFalse",
      "expression": "0.toBoolean()",
      "result": [
        "toboolean",
        0
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.908791,
      "error": null
    },
    {
      "name": "testStringTrueToBoolean",
      "expression": "'true'.toBoolean()",
      "result": [
        "toboolean",
        "true"
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.192959,
      "error": null
    },
    {
      "name": "testStringFalseToBoolean",
      "expression": "'false'.toBoolean()",
      "result": [
        "toboolean",
        "false"
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 2.07175,
      "error": null
    },
    {
      "name": "testIntegerLiteralConvertsToString",
      "expression": "1.convertsToString()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.084708,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testIntegerLiteralIsNotString",
      "expression": "1.is(String).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.46625,
      "error": null
    },
    {
      "name": "testNegativeIntegerLiteralConvertsToString",
      "expression": "(-1).convertsToString()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.027458,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testDecimalLiteralConvertsToString",
      "expression": "1.0.convertsToString()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.007834,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testStringLiteralConvertsToString",
      "expression": "'true'.convertsToString()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.4775,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testBooleanLiteralConvertsToString",
      "expression": "true.convertsToString()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.350958,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testQuantityLiteralConvertsToString",
      "expression": "1 'wk'.convertsToString()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.872541,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testIntegerLiteralToString",
      "expression": "1.toString()",
      "result": "1",
      "expected": [
        {
          "type": "string",
          "value": "1"
        }
      ],
      "success": true,
      "executionTimeMs": 1.34,
      "error": null
    },
    {
      "name": "testNegativeIntegerLiteralToString",
      "expression": "(-1).toString()",
      "result": "1",
      "expected": [
        {
          "type": "string",
          "value": "-1"
        }
      ],
      "success": true,
      "executionTimeMs": 1.816875,
      "error": null
    },
    {
      "name": "testDecimalLiteralToString",
      "expression": "1.0.toString()",
      "result": "1.0",
      "expected": [
        {
          "type": "string",
          "value": "1.0"
        }
      ],
      "success": true,
      "executionTimeMs": 2.522625,
      "error": null
    },
    {
      "name": "testStringLiteralToString",
      "expression": "'true'.toString()",
      "result": "true",
      "expected": [
        {
          "type": "string",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.362792,
      "error": null
    },
    {
      "name": "testBooleanLiteralToString",
      "expression": "true.toString()",
      "result": "true",
      "expected": [
        {
          "type": "string",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.63475,
      "error": null
    },
    {
      "name": "testQuantityLiteralWkToString",
      "expression": "1 'wk'.toString()",
      "result": "[[]]",
      "expected": [
        {
          "type": "string",
          "value": "1 'wk'"
        }
      ],
      "success": true,
      "executionTimeMs": 1.70925,
      "error": null
    },
    {
      "name": "testQuantityLiteralWeekToString",
      "expression": "1 week.toString()",
      "result": "[[[]]]",
      "expected": [
        {
          "type": "string",
          "value": "1 'week'"
        }
      ],
      "success": true,
      "executionTimeMs": 0.935458,
      "error": null
    },
    {
      "name": null,
      "expression": "Patient.name.exists()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.650667,
      "error": null
    },
    {
      "name": null,
      "expression": "Patient.name.exists(use = 'nickname')",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 3.166458,
      "error": null
    },
    {
      "name": null,
      "expression": "Patient.name.exists(use = 'official')",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.99225,
      "error": null
    },
    {
      "name": null,
      "expression": "Patient.maritalStatus.coding.exists(code = 'P' and system = 'http:\/\/terminology.hl7.org\/CodeSystem\/v3-MaritalStatus')\n\t\t\tor Patient.maritalStatus.coding.exists(code = 'A' and system = 'http:\/\/terminology.hl7.org\/CodeSystem\/v3-MaritalStatus')",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 3.840667,
      "error": null
    },
    {
      "name": "testAllTrue1",
      "expression": "Patient.name.select(given.exists()).allTrue()",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 12.760333,
      "error": null
    },
    {
      "name": "testAllTrue2",
      "expression": "Patient.name.select(period.exists()).allTrue()",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 3.592875,
      "error": null
    },
    {
      "name": "testAllTrue3",
      "expression": "Patient.name.all(given.exists())",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.84075,
      "error": null
    },
    {
      "name": "testAllTrue4",
      "expression": "Patient.name.all(period.exists())",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 2.172917,
      "error": null
    },
    {
      "name": "testSubSetOf1",
      "expression": "Patient.name.first().subsetOf($this.name)",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.291958,
      "error": null
    },
    {
      "name": "testSubSetOf2",
      "expression": "Patient.name.subsetOf($this.name.first()).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.402,
      "error": null
    },
    {
      "name": "testSuperSetOf1",
      "expression": "Patient.name.first().supersetOf($this.name).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.329125,
      "error": null
    },
    {
      "name": "testSuperSetOf2",
      "expression": "Patient.name.supersetOf($this.name.first())",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.056209,
      "error": null
    },
    {
      "name": "testQuantity1",
      "expression": "4.0000 'g' = 4000.0 'mg'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.517041,
      "error": null
    },
    {
      "name": "testQuantity2",
      "expression": "4 'g' ~ 4000 'mg'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.374917,
      "error": null
    },
    {
      "name": "testQuantity3",
      "expression": "4 'g' != 4040 'mg'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.426708,
      "error": null
    },
    {
      "name": "testQuantity4",
      "expression": "4 'g' ~ 4040 'mg'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.859917,
      "error": null
    },
    {
      "name": "testQuantity5",
      "expression": "7 days = 1 week",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.279,
      "error": null
    },
    {
      "name": "testQuantity6",
      "expression": "7 days = 1 'wk'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.665083,
      "error": null
    },
    {
      "name": "testQuantity7",
      "expression": "6 days < 1 week",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.613625,
      "error": "[[[]]] clojure.core$_LT_@729c8063 [[[]]] wrong type"
    },
    {
      "name": "testQuantity8",
      "expression": "8 days > 1 week",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.487583,
      "error": "[[[]]] clojure.core$_GT_@776015fc [[[]]] wrong type"
    },
    {
      "name": "testQuantity9",
      "expression": "2.0 'cm' * 2.0 'm' = 0.040 'm2'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.957916,
      "error": "[[]]  clojure.core$_STAR_@6909f6be [[]] type missmatch"
    },
    {
      "name": "testQuantity10",
      "expression": "4.0 'g' \/ 2.0 'm' = 2 'g\/m'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.4755,
      "error": "[[]]  clojure.core$_SLASH_@7a2fce12 [[]] type missmatch"
    },
    {
      "name": "testQuantity11",
      "expression": "1.0 'm' \/ 1.0 'm' = 1 '1'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.66625,
      "error": "[[]]  clojure.core$_SLASH_@7a2fce12 [[]] type missmatch"
    },
    {
      "name": "testCollectionBoolean1",
      "expression": "iif(1 | 2 | 3, true, false)",
      "result": true,
      "expected": [],
      "success": true,
      "executionTimeMs": 2.262084,
      "error": null
    },
    {
      "name": "testCollectionBoolean2",
      "expression": "iif({}, true, false)",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.3875,
      "error": null
    },
    {
      "name": "testCollectionBoolean3",
      "expression": "iif(true, true, false)",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.039416,
      "error": null
    },
    {
      "name": "testCollectionBoolean4",
      "expression": "iif({} | true, true, false)",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 2.212084,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-union"
    },
    {
      "name": "testCollectionBoolean5",
      "expression": "iif(true, true, 1\/0)",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.999834,
      "error": null
    },
    {
      "name": "testCollectionBoolean6",
      "expression": "iif(false, 1\/0, true)",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.289333,
      "error": null
    },
    {
      "name": "testDistinct1",
      "expression": "(1 | 2 | 3).isDistinct()",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.922041,
      "error": null
    },
    {
      "name": "testDistinct2",
      "expression": "Questionnaire.descendants().linkId.isDistinct()",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.866833,
      "error": null
    },
    {
      "name": "testDistinct3",
      "expression": "Questionnaire.descendants().linkId.select(substring(0,1)).isDistinct().not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.049792,
      "error": null
    },
    {
      "name": "testDistinct4",
      "expression": "(1 | 2 | 3).distinct()",
      "result": [
        1,
        2,
        3
      ],
      "expected": [
        {
          "type": "integer",
          "value": "1"
        },
        {
          "type": "integer",
          "value": "2"
        },
        {
          "type": "integer",
          "value": "3"
        }
      ],
      "success": true,
      "executionTimeMs": 1.582166,
      "error": null
    },
    {
      "name": "testDistinct5",
      "expression": "Questionnaire.descendants().linkId.distinct().count()",
      "result": 0,
      "expected": [
        {
          "type": "integer",
          "value": "10"
        }
      ],
      "success": true,
      "executionTimeMs": 2.183542,
      "error": null
    },
    {
      "name": "testDistinct6",
      "expression": "Questionnaire.descendants().linkId.select(substring(0,1)).distinct().count()",
      "result": 0,
      "expected": [
        {
          "type": "integer",
          "value": "2"
        }
      ],
      "success": true,
      "executionTimeMs": 2.770459,
      "error": null
    },
    {
      "name": "testCount1",
      "expression": "Patient.name.count()",
      "result": 0,
      "expected": [
        {
          "type": "integer",
          "value": "3"
        }
      ],
      "success": true,
      "executionTimeMs": 1.554,
      "error": null
    },
    {
      "name": "testCount2",
      "expression": "Patient.name.count() = 3",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.906291,
      "error": null
    },
    {
      "name": "testCount3",
      "expression": "Patient.name.first().count()",
      "result": 0,
      "expected": [
        {
          "type": "integer",
          "value": "1"
        }
      ],
      "success": true,
      "executionTimeMs": 1.767708,
      "error": null
    },
    {
      "name": "testCount4",
      "expression": "Patient.name.first().count() = 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.045917,
      "error": null
    },
    {
      "name": "testWhere1",
      "expression": "Patient.name.count() = 3",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.567333,
      "error": null
    },
    {
      "name": "testWhere2",
      "expression": "Patient.name.where(given = 'Jim').count() = 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.971792,
      "error": null
    },
    {
      "name": "testWhere3",
      "expression": "Patient.name.where(given = 'X').count() = 0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.840333,
      "error": null
    },
    {
      "name": "testWhere4",
      "expression": "Patient.name.where($this.given = 'Jim').count() = 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 4.027917,
      "error": null
    },
    {
      "name": "testSelect1",
      "expression": "Patient.name.select(given).count() = 5",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.115542,
      "error": null
    },
    {
      "name": "testSelect2",
      "expression": "Patient.name.select(given | family).count() = 7 ",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.961,
      "error": null
    },
    {
      "name": "testRepeat1",
      "expression": "ValueSet.expansion.repeat(contains).count() = 10",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.579667,
      "error": null
    },
    {
      "name": "testRepeat2",
      "expression": "Questionnaire.repeat(item).code.count() = 11",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 5.205917,
      "error": null
    },
    {
      "name": "testRepeat3",
      "expression": "Questionnaire.descendants().code.count() = 23",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.780208,
      "error": null
    },
    {
      "name": "testRepeat4",
      "expression": "Questionnaire.children().code.count() = 2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.678833,
      "error": null
    },
    {
      "name": "testAggregate1",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate($this+$total, 0) = 45",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 2.333,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testAggregate2",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate($this+$total, 2) = 47",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 2.614291,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testAggregate3",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate(iif($total.empty(), $this, iif($this < $total, $this, $total))) = 1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 2.809875,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testAggregate4",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate(iif($total.empty(), $this, iif($this > $total, $this, $total))) = 9",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 2.750208,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testIndexer1",
      "expression": "Patient.name[0].given = 'Peter' | 'James'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.699333,
      "error": null
    },
    {
      "name": "testIndexer2",
      "expression": "Patient.name[1].given = 'Jim'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.42575,
      "error": null
    },
    {
      "name": "testSingle1",
      "expression": "Patient.name.first().single().exists()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.550542,
      "error": null
    },
    {
      "name": "testSingle2",
      "expression": "Patient.name.single().exists()",
      "result": false,
      "expected": [],
      "success": true,
      "executionTimeMs": 1.2485,
      "error": null
    },
    {
      "name": "testFirstLast1",
      "expression": "Patient.name.first().given = 'Peter' | 'James'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.481458,
      "error": null
    },
    {
      "name": "testFirstLast2",
      "expression": "Patient.name.last().given = 'Peter' | 'James'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.86825,
      "error": null
    },
    {
      "name": "testTail1",
      "expression": "(0 | 1 | 2).tail() = 1 | 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.885167,
      "error": null
    },
    {
      "name": "testTail2",
      "expression": "Patient.name.tail().given = 'Jim' | 'Peter' | 'James'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.611125,
      "error": null
    },
    {
      "name": "testSkip1",
      "expression": "(0 | 1 | 2).skip(1) = 1 | 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.19125,
      "error": null
    },
    {
      "name": "testSkip2",
      "expression": "(0 | 1 | 2).skip(2) = 2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.780708,
      "error": null
    },
    {
      "name": "testSkip3",
      "expression": "Patient.name.skip(1).given.trace('test') = 'Jim' | 'Peter' | 'James'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 4.554708,
      "error": null
    },
    {
      "name": "testSkip4",
      "expression": "Patient.name.skip(3).given.exists() = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.868166,
      "error": null
    },
    {
      "name": "testTake1",
      "expression": "(0 | 1 | 2).take(1) = 0",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.417083,
      "error": null
    },
    {
      "name": "testTake2",
      "expression": "(0 | 1 | 2).take(2) = 0 | 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.659792,
      "error": null
    },
    {
      "name": "testTake3",
      "expression": "Patient.name.take(1).given = 'Peter' | 'James'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.546166,
      "error": null
    },
    {
      "name": "testTake4",
      "expression": "Patient.name.take(2).given = 'Peter' | 'James' | 'Jim'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.872625,
      "error": null
    },
    {
      "name": "testTake5",
      "expression": "Patient.name.take(3).given.count() = 5",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.870625,
      "error": null
    },
    {
      "name": "testTake6",
      "expression": "Patient.name.take(4).given.count() = 5",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.373583,
      "error": null
    },
    {
      "name": "testTake7",
      "expression": "Patient.name.take(0).given.exists() = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.089917,
      "error": null
    },
    {
      "name": "testIif1",
      "expression": "iif(Patient.name.exists(), 'named', 'unnamed') = 'named'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.138708,
      "error": null
    },
    {
      "name": "testIif2",
      "expression": "iif(Patient.name.empty(), 'unnamed', 'named') = 'named'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.11325,
      "error": null
    },
    {
      "name": "testIif3",
      "expression": "iif(true, true, (1 | 2).toString())",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.946666,
      "error": null
    },
    {
      "name": "testIif4",
      "expression": "iif(false, (1 | 2).toString(), true)",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.013042,
      "error": null
    },
    {
      "name": "testToInteger1",
      "expression": "'1'.toInteger() = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.219666,
      "error": null
    },
    {
      "name": "testToInteger2",
      "expression": "'-1'.toInteger() = -1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.392291,
      "error": null
    },
    {
      "name": "testToInteger3",
      "expression": "'0'.toInteger() = 0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.039625,
      "error": null
    },
    {
      "name": "testToInteger4",
      "expression": "'0.0'.toInteger().empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.64375,
      "error": "For input string: \"0.0\""
    },
    {
      "name": "testToInteger5",
      "expression": "'st'.toInteger().empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.153542,
      "error": "For input string: \"st\""
    },
    {
      "name": "testToDecimal1",
      "expression": "'1'.toDecimal() = 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.781625,
      "error": null
    },
    {
      "name": "testToDecimal2",
      "expression": "'-1'.toInteger() = -1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.539208,
      "error": null
    },
    {
      "name": "testToDecimal3",
      "expression": "'0'.toDecimal() = 0",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.217,
      "error": null
    },
    {
      "name": "testToDecimal4",
      "expression": "'0.0'.toDecimal() = 0.0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.846042,
      "error": null
    },
    {
      "name": "testToDecimal5",
      "expression": "'st'.toDecimal().empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.48125,
      "error": "For input string: \"st\""
    },
    {
      "name": "testToString1",
      "expression": "1.toString() = '1'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.477208,
      "error": null
    },
    {
      "name": "testToString2",
      "expression": "'-1'.toInteger() = -1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.244708,
      "error": null
    },
    {
      "name": "testToString3",
      "expression": "0.toString() = '0'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.618375,
      "error": null
    },
    {
      "name": "testToString4",
      "expression": "0.0.toString() = '0.0'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 4.225917,
      "error": null
    },
    {
      "name": "testToString5",
      "expression": "@2014-12-14.toString() = '2014-12-14'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.834833,
      "error": null
    },
    {
      "name": "testCase1",
      "expression": "'t'.upper() = 'T'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.930209,
      "error": null
    },
    {
      "name": "testCase2",
      "expression": "'t'.lower() = 't'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.128042,
      "error": null
    },
    {
      "name": "testCase3",
      "expression": "'T'.upper() = 'T'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.657833,
      "error": null
    },
    {
      "name": "testCase4",
      "expression": "'T'.lower() = 't'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.991542,
      "error": null
    },
    {
      "name": "testToChars1",
      "expression": "'t2'.toChars() = 't' | '2'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.851375,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testSubstring1",
      "expression": "'12345'.substring(2) = '345'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.228167,
      "error": null
    },
    {
      "name": "testSubstring2",
      "expression": "'12345'.substring(2,1) = '3'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.717458,
      "error": null
    },
    {
      "name": "testSubstring3",
      "expression": "'12345'.substring(2,5) = '345'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.468125,
      "error": null
    },
    {
      "name": "testSubstring4",
      "expression": "'12345'.substring(25).empty()",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.755792,
      "error": null
    },
    {
      "name": "testSubstring5",
      "expression": "'12345'.substring(-1).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.427958,
      "error": "class clojure.lang.PersistentVector cannot be cast to class java.lang.Number (clojure.lang.PersistentVector is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')"
    },
    {
      "name": "testStartsWith1",
      "expression": "'12345'.startsWith('2') = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.036167,
      "error": null
    },
    {
      "name": "testStartsWith2",
      "expression": "'12345'.startsWith('1') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.418083,
      "error": null
    },
    {
      "name": "testStartsWith3",
      "expression": "'12345'.startsWith('12') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.699166,
      "error": null
    },
    {
      "name": "testStartsWith4",
      "expression": "'12345'.startsWith('13') = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.762416,
      "error": null
    },
    {
      "name": "testStartsWith5",
      "expression": "'12345'.startsWith('12345') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.908,
      "error": null
    },
    {
      "name": "testStartsWith6",
      "expression": "'12345'.startsWith('123456') = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.305625,
      "error": null
    },
    {
      "name": "testStartsWith7",
      "expression": "'12345'.startsWith('') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.827167,
      "error": null
    },
    {
      "name": "testEndsWith1",
      "expression": "'12345'.endsWith('2') = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.64525,
      "error": null
    },
    {
      "name": "testEndsWith2",
      "expression": "'12345'.endsWith('5') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.812208,
      "error": null
    },
    {
      "name": "testEndsWith3",
      "expression": "'12345'.endsWith('45') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.51175,
      "error": null
    },
    {
      "name": "testEndsWith4",
      "expression": "'12345'.endsWith('35') = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.528666,
      "error": null
    },
    {
      "name": "testEndsWith5",
      "expression": "'12345'.endsWith('12345') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.52,
      "error": null
    },
    {
      "name": "testEndsWith6",
      "expression": "'12345'.endsWith('012345') = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.454625,
      "error": null
    },
    {
      "name": "testEndsWith7",
      "expression": "'12345'.endsWith('') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.043375,
      "error": null
    },
    {
      "name": "testContainsString1",
      "expression": "'12345'.contains('6') = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.278917,
      "error": null
    },
    {
      "name": "testContainsString2",
      "expression": "'12345'.contains('5') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.921667,
      "error": null
    },
    {
      "name": "testContainsString3",
      "expression": "'12345'.contains('45') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.0395,
      "error": null
    },
    {
      "name": "testContainsString4",
      "expression": "'12345'.contains('35') = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.063708,
      "error": null
    },
    {
      "name": "testContainsString5",
      "expression": "'12345'.contains('12345') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.302,
      "error": null
    },
    {
      "name": "testContainsString6",
      "expression": "'12345'.contains('012345') = false",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.499667,
      "error": null
    },
    {
      "name": "testContainsString7",
      "expression": "'12345'.contains('') = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.839791,
      "error": null
    },
    {
      "name": "testLength1",
      "expression": "'123456'.length() = 6",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.8065,
      "error": null
    },
    {
      "name": "testLength2",
      "expression": "'12345'.length() = 5",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.100166,
      "error": null
    },
    {
      "name": "testLength3",
      "expression": "'123'.length() = 3",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.614417,
      "error": null
    },
    {
      "name": "testLength4",
      "expression": "'1'.length() = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.746083,
      "error": null
    },
    {
      "name": "testLength5",
      "expression": "''.length() = 0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.045708,
      "error": null
    },
    {
      "name": null,
      "expression": "'test'.encode('base64')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "dGVzdA=="
        }
      ],
      "success": false,
      "executionTimeMs": 1.399833,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'test'.encode('hex')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "74657374"
        }
      ],
      "success": false,
      "executionTimeMs": 0.871666,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'subjects?_d'.encode('base64')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "c3ViamVjdHM\/X2Q="
        }
      ],
      "success": false,
      "executionTimeMs": 0.529084,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'subjects?_d'.encode('urlbase64')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "c3ViamVjdHM_X2Q="
        }
      ],
      "success": false,
      "executionTimeMs": 0.614834,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'dGVzdA=='.decode('base64')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "test"
        }
      ],
      "success": false,
      "executionTimeMs": 0.663375,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'74657374'.decode('hex')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "test"
        }
      ],
      "success": false,
      "executionTimeMs": 0.576375,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'c3ViamVjdHM\/X2Q='.decode('base64')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "subjects?_d"
        }
      ],
      "success": false,
      "executionTimeMs": 1.033084,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'c3ViamVjdHM_X2Q='.decode('urlbase64')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "subjects?_d"
        }
      ],
      "success": false,
      "executionTimeMs": 0.851916,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'\"1<2\"'.escape('html')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "&quot;1&lt;2&quot;"
        }
      ],
      "success": false,
      "executionTimeMs": 0.964042,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'\"1<2\"'.escape('json')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "\\\"1<2\\\""
        }
      ],
      "success": false,
      "executionTimeMs": 1.084042,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'&quot;1&lt;2&quot;'.unescape('html')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "\"1<2\""
        }
      ],
      "success": false,
      "executionTimeMs": 1.052917,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'\\\"1<2\\\"'.unescape('json')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "\"1<2\""
        }
      ],
      "success": false,
      "executionTimeMs": 0.611292,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'123456'.trim().length() = 6",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.520083,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'123 456'.trim().length() = 7",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.940291,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "' 123456 '.trim().length() = 6",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.598292,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'  '.trim().length() = 0",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.750792,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "'Peter,James,Jim,Peter,James'.split(',').count() = 5",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.73675,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "name.given.join(',')",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "Peter,James,Jim,Peter,James"
        }
      ],
      "success": false,
      "executionTimeMs": 0.621208,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testTrace1",
      "expression": "name.given.trace('test').count() = 5",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.730458,
      "error": null
    },
    {
      "name": "testTrace2",
      "expression": "name.trace('test', given).count() = 3",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.971042,
      "error": null
    },
    {
      "name": "testToday1",
      "expression": "Patient.birthDate < today()",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.296916,
      "error": null
    },
    {
      "name": "testToday2",
      "expression": "today().toString().length() = 10",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.955667,
      "error": null
    },
    {
      "name": "testNow1",
      "expression": "Patient.birthDate < now()",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.157292,
      "error": null
    },
    {
      "name": "testNow2",
      "expression": "now().toString().length() > 10",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.078,
      "error": null
    },
    {
      "name": "testEquality1",
      "expression": "1 = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.0265,
      "error": null
    },
    {
      "name": "testEquality2",
      "expression": "{} = {}",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 1.425584,
      "error": "Wrong number of args (0) passed to: fhirpath.core\/fp-eq"
    },
    {
      "name": "testEquality3",
      "expression": "true = {}",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 1.97525,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-eq"
    },
    {
      "name": "testEquality4",
      "expression": "(1) = (1)",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.346416,
      "error": null
    },
    {
      "name": "testEquality5",
      "expression": "(1 | 2) = (1 | 2)",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.512667,
      "error": null
    },
    {
      "name": "testEquality6",
      "expression": "(1 | 2 | 3) = (1 | 2 | 3)",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.719625,
      "error": null
    },
    {
      "name": "testEquality7",
      "expression": "(1 | 1) = (1 | 2 | {})",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 2.099125,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-union"
    },
    {
      "name": "testEquality8",
      "expression": "1 = 2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.9055,
      "error": null
    },
    {
      "name": "testEquality9",
      "expression": "'a' = 'a'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.604625,
      "error": null
    },
    {
      "name": "testEquality10",
      "expression": "'a' = 'A'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.645584,
      "error": null
    },
    {
      "name": "testEquality11",
      "expression": "'a' = 'b'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.344792,
      "error": null
    },
    {
      "name": "testEquality12",
      "expression": "1.1 = 1.1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.696125,
      "error": null
    },
    {
      "name": "testEquality13",
      "expression": "1.1 = 1.2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 2.123125,
      "error": null
    },
    {
      "name": "testEquality14",
      "expression": "1.10 = 1.1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.87375,
      "error": null
    },
    {
      "name": "testEquality15",
      "expression": "0 = 0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.605,
      "error": null
    },
    {
      "name": "testEquality16",
      "expression": "0.0 = 0",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.560042,
      "error": null
    },
    {
      "name": "testEquality17",
      "expression": "@2012-04-15 = @2012-04-15",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.721,
      "error": null
    },
    {
      "name": "testEquality18",
      "expression": "@2012-04-15 = @2012-04-16",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.29275,
      "error": null
    },
    {
      "name": "testEquality19",
      "expression": "@2012-04-15 = @2012-04-15T10:00:00",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.467875,
      "error": null
    },
    {
      "name": "testEquality20",
      "expression": "@2012-04-15T15:00:00 = @2012-04-15T10:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.449875,
      "error": null
    },
    {
      "name": "testEquality21",
      "expression": "@2012-04-15T15:30:31 = @2012-04-15T15:30:31.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.635375,
      "error": null
    },
    {
      "name": "testEquality22",
      "expression": "@2012-04-15T15:30:31 = @2012-04-15T15:30:31.1",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.679208,
      "error": null
    },
    {
      "name": "testEquality23",
      "expression": "@2012-04-15T15:00:00Z = @2012-04-15T10:00:00",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 2.067667,
      "error": null
    },
    {
      "name": "testEquality24",
      "expression": "@2012-04-15T15:00:00+02:00 = @2012-04-15T16:00:00+03:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.38875,
      "error": null
    },
    {
      "name": "testEquality25",
      "expression": "name = name",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.295375,
      "error": null
    },
    {
      "name": "testEquality26",
      "expression": "name.take(2) = name.take(2).first() | name.take(2).last()",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.023042,
      "error": null
    },
    {
      "name": "testEquality27",
      "expression": "name.take(2) = name.take(2).last() | name.take(2).first()",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 2.636584,
      "error": null
    },
    {
      "name": "testEquality28",
      "expression": "Observation.value = 185 '[lb_av]'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.6285,
      "error": null
    },
    {
      "name": "testNEquality1",
      "expression": "1 != 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.394125,
      "error": null
    },
    {
      "name": "testNEquality2",
      "expression": "{} != {}",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 2.432833,
      "error": "Wrong number of args (0) passed to: fhirpath.core\/fp-not-eq"
    },
    {
      "name": "testNEquality3",
      "expression": "1 != 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.803042,
      "error": null
    },
    {
      "name": "testNEquality4",
      "expression": "'a' != 'a'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 2.316792,
      "error": null
    },
    {
      "name": "testNEquality5",
      "expression": "'a' != 'b'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.725916,
      "error": null
    },
    {
      "name": "testNEquality6",
      "expression": "1.1 != 1.1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.640625,
      "error": null
    },
    {
      "name": "testNEquality7",
      "expression": "1.1 != 1.2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.90975,
      "error": null
    },
    {
      "name": "testNEquality8",
      "expression": "1.10 != 1.1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 2.69675,
      "error": null
    },
    {
      "name": "testNEquality9",
      "expression": "0 != 0",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.873375,
      "error": null
    },
    {
      "name": "testNEquality10",
      "expression": "0.0 != 0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.98675,
      "error": null
    },
    {
      "name": "testNEquality11",
      "expression": "@2012-04-15 != @2012-04-15",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.034208,
      "error": null
    },
    {
      "name": "testNEquality12",
      "expression": "@2012-04-15 != @2012-04-16",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.648584,
      "error": null
    },
    {
      "name": "testNEquality13",
      "expression": "@2012-04-15 != @2012-04-15T10:00:00",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.07525,
      "error": null
    },
    {
      "name": "testNEquality14",
      "expression": "@2012-04-15T15:00:00 != @2012-04-15T10:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.000417,
      "error": null
    },
    {
      "name": "testNEquality15",
      "expression": "@2012-04-15T15:30:31 != @2012-04-15T15:30:31.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.988041,
      "error": null
    },
    {
      "name": "testNEquality16",
      "expression": "@2012-04-15T15:30:31 != @2012-04-15T15:30:31.1",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.468083,
      "error": null
    },
    {
      "name": "testNEquality17",
      "expression": "@2012-04-15T15:00:00Z != @2012-04-15T10:00:00",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.621167,
      "error": null
    },
    {
      "name": "testNEquality18",
      "expression": "@2012-04-15T15:00:00+02:00 != @2012-04-15T16:00:00+03:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.073625,
      "error": null
    },
    {
      "name": "testNEquality19",
      "expression": "name != name",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.050042,
      "error": null
    },
    {
      "name": "testNEquality20",
      "expression": "name.take(2) != name.take(2).first() | name.take(2).last()",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 2.570083,
      "error": null
    },
    {
      "name": "testNEquality21",
      "expression": "name.take(2) != name.take(2).last() | name.take(2).first()",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.783833,
      "error": null
    },
    {
      "name": "testNEquality22",
      "expression": "1.2 \/ 1.8 != 0.6666667",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.354625,
      "error": null
    },
    {
      "name": "testNEquality23",
      "expression": "1.2 \/ 1.8 != 0.67",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.708417,
      "error": null
    },
    {
      "name": "testNEquality24",
      "expression": "Observation.value != 185 'kg'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.483875,
      "error": null
    },
    {
      "name": "testEquivalent1",
      "expression": "1 ~ 1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 2.892583,
      "error": "f != java.lang.Long"
    },
    {
      "name": "testEquivalent2",
      "expression": "{} ~ {}",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.529583,
      "error": "Wrong number of args (0) passed to: fhirpath.core\/fp-eq?"
    },
    {
      "name": "testEquivalent3",
      "expression": "1 ~ {}",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": false,
      "executionTimeMs": 1.023209,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-eq?"
    },
    {
      "name": "testEquivalent4",
      "expression": "1 ~ 2",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": false,
      "executionTimeMs": 1.755792,
      "error": "f != java.lang.Long"
    },
    {
      "name": "testEquivalent5",
      "expression": "'a' ~ 'a'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.436042,
      "error": null
    },
    {
      "name": "testEquivalent6",
      "expression": "'a' ~ 'A'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.222708,
      "error": null
    },
    {
      "name": "testEquivalent7",
      "expression": "'a' ~ 'b'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.679792,
      "error": null
    },
    {
      "name": "testEquivalent8",
      "expression": "1.1 ~ 1.1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.178708,
      "error": null
    },
    {
      "name": "testEquivalent9",
      "expression": "1.1 ~ 1.2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.351084,
      "error": null
    },
    {
      "name": "testEquivalent10",
      "expression": "1.10 ~ 1.1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.408625,
      "error": null
    },
    {
      "name": "testEquivalent11",
      "expression": "1.2 \/ 1.8 ~ 0.67",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.42675,
      "error": null
    },
    {
      "name": "testEquivalent12",
      "expression": "0 ~ 0",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 2.062916,
      "error": "f != java.lang.Long"
    },
    {
      "name": "testEquivalent13",
      "expression": "0.0 ~ 0",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.086209,
      "error": "f != java.lang.Long"
    },
    {
      "name": "testEquivalent14",
      "expression": "@2012-04-15 ~ @2012-04-15",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.53025,
      "error": null
    },
    {
      "name": "testEquivalent15",
      "expression": "@2012-04-15 ~ @2012-04-16",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.618125,
      "error": null
    },
    {
      "name": "testEquivalent16",
      "expression": "@2012-04-15 ~ @2012-04-15T10:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.064667,
      "error": null
    },
    {
      "name": "testEquivalent17",
      "expression": "@2012-04-15T15:30:31 ~ @2012-04-15T15:30:31.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.551,
      "error": null
    },
    {
      "name": "testEquivalent18",
      "expression": "@2012-04-15T15:30:31 ~ @2012-04-15T15:30:31.1",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.485416,
      "error": null
    },
    {
      "name": "testEquivalent19",
      "expression": "name ~ name",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.032041,
      "error": null
    },
    {
      "name": "testEquivalent20",
      "expression": "name.take(2).given ~ name.take(2).first().given | name.take(2).last().given",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.853791,
      "error": null
    },
    {
      "name": "testEquivalent21",
      "expression": "name.take(2).given ~ name.take(2).last().given | name.take(2).first().given",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.153625,
      "error": null
    },
    {
      "name": "testEquivalent22",
      "expression": "Observation.value ~ 185 '[lb_av]'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.479833,
      "error": null
    },
    {
      "name": "testNotEquivalent1",
      "expression": "1 !~ 1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": false,
      "executionTimeMs": 1.477459,
      "error": "f != java.lang.Long"
    },
    {
      "name": "testNotEquivalent2",
      "expression": "{} !~ {}",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": false,
      "executionTimeMs": 1.457125,
      "error": "Wrong number of args (0) passed to: fhirpath.core\/fp-not-eq?"
    },
    {
      "name": "testNotEquivalent3",
      "expression": "{} !~ 1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.342542,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-not-eq?"
    },
    {
      "name": "testNotEquivalent4",
      "expression": "1 !~ 2",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.992458,
      "error": "f != java.lang.Long"
    },
    {
      "name": "testNotEquivalent5",
      "expression": "'a' !~ 'a'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.949917,
      "error": null
    },
    {
      "name": "testNotEquivalent6",
      "expression": "'a' !~ 'A'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.937291,
      "error": null
    },
    {
      "name": "testNotEquivalent7",
      "expression": "'a' !~ 'b'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.145125,
      "error": null
    },
    {
      "name": "testNotEquivalent8",
      "expression": "1.1 !~ 1.1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.529541,
      "error": null
    },
    {
      "name": "testNotEquivalent9",
      "expression": "1.1 !~ 1.2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.535166,
      "error": null
    },
    {
      "name": "testNotEquivalent10",
      "expression": "1.10 !~ 1.1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 2.354916,
      "error": null
    },
    {
      "name": "testNotEquivalent11",
      "expression": "0 !~ 0",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": false,
      "executionTimeMs": 1.687333,
      "error": "f != java.lang.Long"
    },
    {
      "name": "testNotEquivalent12",
      "expression": "0.0 !~ 0",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": false,
      "executionTimeMs": 1.510875,
      "error": "f != java.lang.Long"
    },
    {
      "name": "testNotEquivalent13",
      "expression": "1.2 \/ 1.8 !~ 0.6",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.353791,
      "error": null
    },
    {
      "name": "testNotEquivalent14",
      "expression": "@2012-04-15 !~ @2012-04-15",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.025292,
      "error": null
    },
    {
      "name": "testNotEquivalent15",
      "expression": "@2012-04-15 !~ @2012-04-16",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.581084,
      "error": null
    },
    {
      "name": "testNotEquivalent16",
      "expression": "@2012-04-15 !~ @2012-04-15T10:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.07025,
      "error": null
    },
    {
      "name": "testNotEquivalent17",
      "expression": "@2012-04-15T15:30:31 !~ @2012-04-15T15:30:31.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.235708,
      "error": null
    },
    {
      "name": "testNotEquivalent18",
      "expression": "@2012-04-15T15:30:31 !~ @2012-04-15T15:30:31.1",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.760167,
      "error": null
    },
    {
      "name": "testNotEquivalent19",
      "expression": "name !~ name",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.825833,
      "error": null
    },
    {
      "name": "testNotEquivalent20",
      "expression": "name.take(2).given !~ name.take(2).first().given | name.take(2).last().given",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.9235,
      "error": null
    },
    {
      "name": "testNotEquivalent21",
      "expression": "name.take(2).given !~ name.take(2).last().given | name.take(2).first().given",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 2.320125,
      "error": null
    },
    {
      "name": "testNotEquivalent22",
      "expression": "Observation.value !~ 185 'kg'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.074792,
      "error": null
    },
    {
      "name": "testLessThan1",
      "expression": "1 < 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.996084,
      "error": null
    },
    {
      "name": "testLessThan2",
      "expression": "1.0 < 1.2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.668042,
      "error": null
    },
    {
      "name": "testLessThan3",
      "expression": "'a' < 'b'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.730208,
      "error": null
    },
    {
      "name": "testLessThan4",
      "expression": "'A' < 'a'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.562458,
      "error": null
    },
    {
      "name": "testLessThan5",
      "expression": "@2014-12-12 < @2014-12-13",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.795125,
      "error": null
    },
    {
      "name": "testLessThan6",
      "expression": "@2014-12-13T12:00:00 < @2014-12-13T12:00:01",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.695833,
      "error": null
    },
    {
      "name": "testLessThan7",
      "expression": "@T12:00:00 < @T14:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.058292,
      "error": null
    },
    {
      "name": "testLessThan8",
      "expression": "1 < 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.987375,
      "error": null
    },
    {
      "name": "testLessThan9",
      "expression": "1.0 < 1.0",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.179125,
      "error": null
    },
    {
      "name": "testLessThan10",
      "expression": "'a' < 'a'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.889,
      "error": null
    },
    {
      "name": "testLessThan11",
      "expression": "'A' < 'A'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.454083,
      "error": null
    },
    {
      "name": "testLessThan12",
      "expression": "@2014-12-12 < @2014-12-12",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.814291,
      "error": null
    },
    {
      "name": "testLessThan13",
      "expression": "@2014-12-13T12:00:00 < @2014-12-13T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.979708,
      "error": null
    },
    {
      "name": "testLessThan14",
      "expression": "@T12:00:00 < @T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.188,
      "error": null
    },
    {
      "name": "testLessThan15",
      "expression": "2 < 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.452958,
      "error": null
    },
    {
      "name": "testLessThan16",
      "expression": "1.1 < 1.0",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.088125,
      "error": null
    },
    {
      "name": "testLessThan17",
      "expression": "'b' < 'a'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.583792,
      "error": null
    },
    {
      "name": "testLessThan18",
      "expression": "'B' < 'A'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.567625,
      "error": null
    },
    {
      "name": "testLessThan19",
      "expression": "@2014-12-13 < @2014-12-12",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.996666,
      "error": null
    },
    {
      "name": "testLessThan20",
      "expression": "@2014-12-13T12:00:01 < @2014-12-13T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.804833,
      "error": null
    },
    {
      "name": "testLessThan21",
      "expression": "@T12:00:01 < @T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.613166,
      "error": null
    },
    {
      "name": "testLessThan22",
      "expression": "Observation.value < 200 '[lb_av]'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.038041,
      "error": null
    },
    {
      "name": "testLessThan23",
      "expression": "@2018-03 < @2018-03-01",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.373291,
      "error": null
    },
    {
      "name": "testLessThan24",
      "expression": "@2018-03-01T10 < @2018-03-01T10:30",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 0.960792,
      "error": null
    },
    {
      "name": "testLessThan25",
      "expression": "@T10 < @T10:30",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.463084,
      "error": null
    },
    {
      "name": "testLessThan26",
      "expression": "@2018-03-01T10:30:00 < @2018-03-01T10:30:00.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.289208,
      "error": null
    },
    {
      "name": "testLessThan27",
      "expression": "@T10:30:00 < @T10:30:00.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.89775,
      "error": null
    },
    {
      "name": "testLessOrEqual1",
      "expression": "1 <= 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.215875,
      "error": null
    },
    {
      "name": "testLessOrEqual2",
      "expression": "1.0 <= 1.2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.839708,
      "error": null
    },
    {
      "name": "testLessOrEqual3",
      "expression": "'a' <= 'b'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 4.120417,
      "error": null
    },
    {
      "name": "testLessOrEqual4",
      "expression": "'A' <= 'a'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.2545,
      "error": null
    },
    {
      "name": "testLessOrEqual5",
      "expression": "@2014-12-12 <= @2014-12-13",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.858125,
      "error": null
    },
    {
      "name": "testLessOrEqual6",
      "expression": "@2014-12-13T12:00:00 <= @2014-12-13T12:00:01",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.383,
      "error": null
    },
    {
      "name": "testLessOrEqual7",
      "expression": "@T12:00:00 <= @T14:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.23275,
      "error": null
    },
    {
      "name": "testLessOrEqual8",
      "expression": "1 <= 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.955458,
      "error": null
    },
    {
      "name": "testLessOrEqual9",
      "expression": "1.0 <= 1.0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.332292,
      "error": null
    },
    {
      "name": "testLessOrEqual10",
      "expression": "'a' <= 'a'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.481916,
      "error": null
    },
    {
      "name": "testLessOrEqual11",
      "expression": "'A' <= 'A'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.657958,
      "error": null
    },
    {
      "name": "testLessOrEqual12",
      "expression": "@2014-12-12 <= @2014-12-12",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.4195,
      "error": null
    },
    {
      "name": "testLessOrEqual13",
      "expression": "@2014-12-13T12:00:00 <= @2014-12-13T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.632334,
      "error": null
    },
    {
      "name": "testLessOrEqual14",
      "expression": "@T12:00:00 <= @T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.7115,
      "error": null
    },
    {
      "name": "testLessOrEqual15",
      "expression": "2 <= 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.541334,
      "error": null
    },
    {
      "name": "testLessOrEqual16",
      "expression": "1.1 <= 1.0",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.092,
      "error": null
    },
    {
      "name": "testLessOrEqual17",
      "expression": "'b' <= 'a'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.017166,
      "error": null
    },
    {
      "name": "testLessOrEqual18",
      "expression": "'B' <= 'A'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.821167,
      "error": null
    },
    {
      "name": "testLessOrEqual19",
      "expression": "@2014-12-13 <= @2014-12-12",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.249958,
      "error": null
    },
    {
      "name": "testLessOrEqual20",
      "expression": "@2014-12-13T12:00:01 <= @2014-12-13T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.1025,
      "error": null
    },
    {
      "name": "testLessOrEqual21",
      "expression": "@T12:00:01 <= @T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.156417,
      "error": null
    },
    {
      "name": "testLessOrEqual22",
      "expression": "Observation.value <= 200 '[lb_av]'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.771291,
      "error": null
    },
    {
      "name": "testLessOrEqual23",
      "expression": "@2018-03 <= @2018-03-01",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.1075,
      "error": null
    },
    {
      "name": "testLessOrEqual24",
      "expression": "@2018-03-01T10 <= @2018-03-01T10:30",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 0.526083,
      "error": null
    },
    {
      "name": "testLessOrEqual25",
      "expression": "@T10 <= @T10:30",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 0.447958,
      "error": null
    },
    {
      "name": "testLessOrEqual26",
      "expression": "@2018-03-01T10:30:00  <= @2018-03-01T10:30:00.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.371292,
      "error": null
    },
    {
      "name": "testLessOrEqual27",
      "expression": "@T10:30:00 <= @T10:30:00.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.363792,
      "error": null
    },
    {
      "name": "testGreatorOrEqual1",
      "expression": "1 >= 2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.5105,
      "error": null
    },
    {
      "name": "testGreatorOrEqual2",
      "expression": "1.0 >= 1.2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.382875,
      "error": null
    },
    {
      "name": "testGreatorOrEqual3",
      "expression": "'a' >= 'b'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.660833,
      "error": null
    },
    {
      "name": "testGreatorOrEqual4",
      "expression": "'A' >= 'a'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.118166,
      "error": null
    },
    {
      "name": "testGreatorOrEqual5",
      "expression": "@2014-12-12 >= @2014-12-13",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.924959,
      "error": null
    },
    {
      "name": "testGreatorOrEqual6",
      "expression": "@2014-12-13T12:00:00 >= @2014-12-13T12:00:01",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.0635,
      "error": null
    },
    {
      "name": "testGreatorOrEqual7",
      "expression": "@T12:00:00 >= @T14:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.233458,
      "error": null
    },
    {
      "name": "testGreatorOrEqual8",
      "expression": "1 >= 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.057625,
      "error": null
    },
    {
      "name": "testGreatorOrEqual9",
      "expression": "1.0 >= 1.0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.611708,
      "error": null
    },
    {
      "name": "testGreatorOrEqual10",
      "expression": "'a' >= 'a'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.567916,
      "error": null
    },
    {
      "name": "testGreatorOrEqual11",
      "expression": "'A' >= 'A'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.402167,
      "error": null
    },
    {
      "name": "testGreatorOrEqual12",
      "expression": "@2014-12-12 >= @2014-12-12",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.732833,
      "error": null
    },
    {
      "name": "testGreatorOrEqual13",
      "expression": "@2014-12-13T12:00:00 >= @2014-12-13T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.137417,
      "error": null
    },
    {
      "name": "testGreatorOrEqual14",
      "expression": "@T12:00:00 >= @T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.81375,
      "error": null
    },
    {
      "name": "testGreatorOrEqual15",
      "expression": "2 >= 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.395416,
      "error": null
    },
    {
      "name": "testGreatorOrEqual16",
      "expression": "1.1 >= 1.0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.815542,
      "error": null
    },
    {
      "name": "testGreatorOrEqual17",
      "expression": "'b' >= 'a'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.677416,
      "error": null
    },
    {
      "name": "testGreatorOrEqual18",
      "expression": "'B' >= 'A'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.580209,
      "error": null
    },
    {
      "name": "testGreatorOrEqual19",
      "expression": "@2014-12-13 >= @2014-12-12",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.67925,
      "error": null
    },
    {
      "name": "testGreatorOrEqual20",
      "expression": "@2014-12-13T12:00:01 >= @2014-12-13T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.528625,
      "error": null
    },
    {
      "name": "testGreatorOrEqual21",
      "expression": "@T12:00:01 >= @T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.48775,
      "error": null
    },
    {
      "name": "testGreatorOrEqual22",
      "expression": "Observation.value >= 100 '[lb_av]'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.643917,
      "error": null
    },
    {
      "name": "testGreatorOrEqual23",
      "expression": "@2018-03 >= @2018-03-01",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 0.6175,
      "error": null
    },
    {
      "name": "testGreatorOrEqual24",
      "expression": "@2018-03-01T10 >= @2018-03-01T10:30",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.291417,
      "error": null
    },
    {
      "name": "testGreatorOrEqual25",
      "expression": "@T10 >= @T10:30",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.349083,
      "error": null
    },
    {
      "name": "testGreatorOrEqual26",
      "expression": "@2018-03-01T10:30:00 >= @2018-03-01T10:30:00.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.726875,
      "error": null
    },
    {
      "name": "testGreatorOrEqual27",
      "expression": "@T10:30:00 >= @T10:30:00.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.845459,
      "error": null
    },
    {
      "name": "testGreaterThan1",
      "expression": "1 > 2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.1565,
      "error": null
    },
    {
      "name": "testGreaterThan2",
      "expression": "1.0 > 1.2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.945167,
      "error": null
    },
    {
      "name": "testGreaterThan3",
      "expression": "'a' > 'b'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.215875,
      "error": null
    },
    {
      "name": "testGreaterThan4",
      "expression": "'A' > 'a'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.152875,
      "error": null
    },
    {
      "name": "testGreaterThan5",
      "expression": "@2014-12-12 > @2014-12-13",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.219667,
      "error": null
    },
    {
      "name": "testGreaterThan6",
      "expression": "@2014-12-13T12:00:00 > @2014-12-13T12:00:01",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.295375,
      "error": null
    },
    {
      "name": "testGreaterThan7",
      "expression": "@T12:00:00 > @T14:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.569875,
      "error": null
    },
    {
      "name": "testGreaterThan8",
      "expression": "1 > 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.936792,
      "error": null
    },
    {
      "name": "testGreaterThan9",
      "expression": "1.0 > 1.0",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.543292,
      "error": null
    },
    {
      "name": "testGreaterThan10",
      "expression": "'a' > 'a'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.824208,
      "error": null
    },
    {
      "name": "testGreaterThan11",
      "expression": "'A' > 'A'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.687,
      "error": null
    },
    {
      "name": "testGreaterThan12",
      "expression": "@2014-12-12 > @2014-12-12",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.041125,
      "error": null
    },
    {
      "name": "testGreaterThan13",
      "expression": "@2014-12-13T12:00:00 > @2014-12-13T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.699958,
      "error": null
    },
    {
      "name": "testGreaterThan14",
      "expression": "@T12:00:00 > @T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.073791,
      "error": null
    },
    {
      "name": "testGreaterThan15",
      "expression": "2 > 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.556083,
      "error": null
    },
    {
      "name": "testGreaterThan16",
      "expression": "1.1 > 1.0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.077625,
      "error": null
    },
    {
      "name": "testGreaterThan17",
      "expression": "'b' > 'a'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.750292,
      "error": null
    },
    {
      "name": "testGreaterThan18",
      "expression": "'B' > 'A'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.396542,
      "error": null
    },
    {
      "name": "testGreaterThan19",
      "expression": "@2014-12-13 > @2014-12-12",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.093208,
      "error": null
    },
    {
      "name": "testGreaterThan20",
      "expression": "@2014-12-13T12:00:01 > @2014-12-13T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.563292,
      "error": null
    },
    {
      "name": "testGreaterThan21",
      "expression": "@T12:00:01 > @T12:00:00",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.409792,
      "error": null
    },
    {
      "name": "testGreaterThan22",
      "expression": "Observation.value > 100 '[lb_av]'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.044291,
      "error": null
    },
    {
      "name": "testGreaterThan23",
      "expression": "@2018-03 > @2018-03-01",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.296917,
      "error": null
    },
    {
      "name": "testGreaterThan24",
      "expression": "@2018-03-01T10 > @2018-03-01T10:30",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 0.804375,
      "error": null
    },
    {
      "name": "testGreaterThan25",
      "expression": "@T10 > @T10:30",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 0.662334,
      "error": null
    },
    {
      "name": "testGreaterThan26",
      "expression": "@2018-03-01T10:30:00 > @2018-03-01T10:30:00.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.82775,
      "error": null
    },
    {
      "name": "testGreaterThan27",
      "expression": "@T10:30:00 > @T10:30:00.0",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.8155,
      "error": null
    },
    {
      "name": "testUnion1",
      "expression": "(1 | 2 | 3).count() = 3",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.579042,
      "error": null
    },
    {
      "name": "testUnion2",
      "expression": "(1 | 2 | 2).count() = 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.44525,
      "error": null
    },
    {
      "name": "testUnion3",
      "expression": "(1|1).count() = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.4235,
      "error": null
    },
    {
      "name": "testUnion4",
      "expression": "1.union(2).union(3).count() = 3",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.548041,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testUnion5",
      "expression": "1.union(2.union(3)).count() = 3",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.961083,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testUnion6",
      "expression": "(1 | 2).combine(2).count() = 3",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.338125,
      "error": null
    },
    {
      "name": "testUnion7",
      "expression": "1.combine(1).count() = 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.899,
      "error": null
    },
    {
      "name": "testUnion8",
      "expression": "1.combine(1).union(2).count() = 2",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.856291,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testIntersect1",
      "expression": "(1 | 2 | 3).intersect(2 | 4) = 2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.499667,
      "error": null
    },
    {
      "name": "testIntersect2",
      "expression": "(1 | 2).intersect(4).empty()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.2965,
      "error": null
    },
    {
      "name": "testIntersect3",
      "expression": "(1 | 2).intersect({}).empty()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.853959,
      "error": null
    },
    {
      "name": "testIntersect4",
      "expression": "1.combine(1).intersect(1).count() = 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.062958,
      "error": null
    },
    {
      "name": "testExclude1",
      "expression": "(1 | 2 | 3).exclude(2 | 4) = 1 | 3",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.897625,
      "error": null
    },
    {
      "name": "testExclude2",
      "expression": "(1 | 2).exclude(4) = 1 | 2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.425916,
      "error": null
    },
    {
      "name": "testExclude3",
      "expression": "(1 | 2).exclude({}) = 1 | 2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.710167,
      "error": null
    },
    {
      "name": "testExclude4",
      "expression": "1.combine(1).exclude(2).count() = 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.199458,
      "error": null
    },
    {
      "name": "testIn1",
      "expression": "1 in (1 | 2 | 3)",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.021459,
      "error": null
    },
    {
      "name": "testIn2",
      "expression": "1 in (2 | 3)",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.262459,
      "error": null
    },
    {
      "name": "testIn3",
      "expression": "'a' in ('a' | 'c' | 'd')",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.318042,
      "error": null
    },
    {
      "name": "testIn4",
      "expression": "'b' in ('a' | 'c' | 'd')",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.97375,
      "error": null
    },
    {
      "name": "testContainsCollection1",
      "expression": "(1 | 2 | 3) contains 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.236042,
      "error": null
    },
    {
      "name": "testContainsCollection2",
      "expression": "(2 | 3) contains 1 ",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.157417,
      "error": null
    },
    {
      "name": "testContainsCollection3",
      "expression": "('a' | 'c' | 'd') contains 'a'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.665958,
      "error": null
    },
    {
      "name": "testContainsCollection4",
      "expression": "('a' | 'c' | 'd') contains 'b'",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 1.233833,
      "error": null
    },
    {
      "name": "testBooleanLogicAnd1",
      "expression": "(true and true) = true",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.223,
      "error": null
    },
    {
      "name": "testBooleanLogicAnd2",
      "expression": "(true and false) = false",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.695334,
      "error": null
    },
    {
      "name": "testBooleanLogicAnd3",
      "expression": "(true and {}).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.598667,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-and"
    },
    {
      "name": "testBooleanLogicAnd4",
      "expression": "(false and true) = false",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.816292,
      "error": null
    },
    {
      "name": "testBooleanLogicAnd5",
      "expression": "(false and false) = false",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.87075,
      "error": null
    },
    {
      "name": "testBooleanLogicAnd6",
      "expression": "(false and {}) = false",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.274875,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-and"
    },
    {
      "name": "testBooleanLogicAnd7",
      "expression": "({} and true).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.128958,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-and"
    },
    {
      "name": "testBooleanLogicAnd8",
      "expression": "({} and false) = false",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.843584,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-and"
    },
    {
      "name": "testBooleanLogicAnd9",
      "expression": "({} and {}).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.462792,
      "error": "Wrong number of args (0) passed to: fhirpath.core\/fp-and"
    },
    {
      "name": "testBooleanLogicOr1",
      "expression": "(true or true) = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.334583,
      "error": null
    },
    {
      "name": "testBooleanLogicOr2",
      "expression": "(true or false) = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.191208,
      "error": null
    },
    {
      "name": "testBooleanLogicOr3",
      "expression": "(true or {}) = true",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.34875,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-or"
    },
    {
      "name": "testBooleanLogicOr4",
      "expression": "(false or true) = true",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.080375,
      "error": null
    },
    {
      "name": "testBooleanLogicOr5",
      "expression": "(false or false) = false",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.816417,
      "error": null
    },
    {
      "name": "testBooleanLogicOr6",
      "expression": "(false or {}).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.624917,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-or"
    },
    {
      "name": "testBooleanLogicOr7",
      "expression": "({} or true) = true",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.195583,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-or"
    },
    {
      "name": "testBooleanLogicOr8",
      "expression": "({} or false).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.55325,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-or"
    },
    {
      "name": "testBooleanLogicOr9",
      "expression": "({} or {}).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.834584,
      "error": "Wrong number of args (0) passed to: fhirpath.core\/fp-or"
    },
    {
      "name": "testBooleanLogicXOr1",
      "expression": "(true xor true) = false",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.984417,
      "error": null
    },
    {
      "name": "testBooleanLogicXOr2",
      "expression": "(true xor false) = true",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.162375,
      "error": null
    },
    {
      "name": "testBooleanLogicXOr3",
      "expression": "(true xor {}).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.309666,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-xor"
    },
    {
      "name": "testBooleanLogicXOr4",
      "expression": "(false xor true) = true",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.456,
      "error": null
    },
    {
      "name": "testBooleanLogicXOr5",
      "expression": "(false xor false) = false",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.063,
      "error": null
    },
    {
      "name": "testBooleanLogicXOr6",
      "expression": "(false xor {}).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 2.367083,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-xor"
    },
    {
      "name": "testBooleanLogicXOr7",
      "expression": "({} xor true).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 2.894292,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-xor"
    },
    {
      "name": "testBooleanLogicXOr8",
      "expression": "({} xor false).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.822708,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-xor"
    },
    {
      "name": "testBooleanLogicXOr9",
      "expression": "({} xor {}).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.234084,
      "error": "Wrong number of args (0) passed to: fhirpath.core\/fp-xor"
    },
    {
      "name": "testBooleanImplies1",
      "expression": "(true implies true) = true",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.728583,
      "error": null
    },
    {
      "name": "testBooleanImplies2",
      "expression": "(true implies false) = false",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.459209,
      "error": null
    },
    {
      "name": "testBooleanImplies3",
      "expression": "(true implies {}).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.52975,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-implies"
    },
    {
      "name": "testBooleanImplies4",
      "expression": "(false implies true) = true",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.094416,
      "error": null
    },
    {
      "name": "testBooleanImplies5",
      "expression": "(false implies false) = true",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.660834,
      "error": null
    },
    {
      "name": "testBooleanImplies6",
      "expression": "(false implies {}) = true",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.543292,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-implies"
    },
    {
      "name": "testBooleanImplies7",
      "expression": "({} implies true) = true",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.938166,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-implies"
    },
    {
      "name": "testBooleanImplies8",
      "expression": "({} implies false).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.579958,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-implies"
    },
    {
      "name": "testBooleanImplies9",
      "expression": "({} implies {}).empty()",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.143208,
      "error": "Wrong number of args (0) passed to: fhirpath.core\/fp-implies"
    },
    {
      "name": "testPlus1",
      "expression": "1 + 1 = 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.937458,
      "error": null
    },
    {
      "name": "testPlus2",
      "expression": "1 + 0 = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.311875,
      "error": null
    },
    {
      "name": "testPlus3",
      "expression": "1.2 + 1.8 = 3.0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.659875,
      "error": null
    },
    {
      "name": "testPlus4",
      "expression": "'a'+'b' = 'ab'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.635584,
      "error": null
    },
    {
      "name": "testConcatenate1",
      "expression": "'a' & 'b' = 'ab'",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.670209,
      "error": null
    },
    {
      "name": "testConcatenate2",
      "expression": "'1' & {} = '1'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.179916,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-&"
    },
    {
      "name": "testConcatenate3",
      "expression": "{} & 'b' = 'b'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.360291,
      "error": "Wrong number of args (1) passed to: fhirpath.core\/fp-&"
    },
    {
      "name": "testConcatenate4",
      "expression": "(1 | 2 | 3) & 'b' = '1,2,3b'",
      "result": [],
      "expected": [],
      "success": true,
      "executionTimeMs": 1.779792,
      "error": null
    },
    {
      "name": "testMinus1",
      "expression": "1 - 1 = 0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.341916,
      "error": null
    },
    {
      "name": "testMinus2",
      "expression": "1 - 0 = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.83825,
      "error": null
    },
    {
      "name": "testMinus3",
      "expression": "1.8 - 1.2 = 0.6",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.463833,
      "error": null
    },
    {
      "name": "testMinus4",
      "expression": "'a'-'b' = 'ab'",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 0.925167,
      "error": "\"a\"  clojure.core$_@6a7a1a0d \"b\" type missmatch"
    },
    {
      "name": "testMultiply1",
      "expression": "1 * 1 = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.787625,
      "error": null
    },
    {
      "name": "testMultiply2",
      "expression": "1 * 0 = 0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.237083,
      "error": null
    },
    {
      "name": "testMultiply3",
      "expression": "1.2 * 1.8 = 2.16",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.044042,
      "error": null
    },
    {
      "name": "testDivide1",
      "expression": "1 \/ 1 = 1",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.200875,
      "error": null
    },
    {
      "name": "testDivide2",
      "expression": "4 \/ 2 = 2",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.958625,
      "error": null
    },
    {
      "name": "testDivide3",
      "expression": "4.0 \/ 2.0 = 2.0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.024125,
      "error": null
    },
    {
      "name": "testDivide4",
      "expression": "1 \/ 2 = 0.5",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.80425,
      "error": null
    },
    {
      "name": "testDivide5",
      "expression": "1.2 \/ 1.8 = 0.66666667",
      "result": [
        false
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.952375,
      "error": null
    },
    {
      "name": "testDivide6",
      "expression": "1 \/ 0",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 1.697084,
      "error": "Divide by zero"
    },
    {
      "name": "testDiv1",
      "expression": "1 div 1 = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.645458,
      "error": null
    },
    {
      "name": "testDiv2",
      "expression": "4 div 2 = 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.4875,
      "error": null
    },
    {
      "name": "testDiv3",
      "expression": "5 div 2 = 2",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 3.240083,
      "error": null
    },
    {
      "name": "testDiv4",
      "expression": "2.2 div 1.8 = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.71575,
      "error": null
    },
    {
      "name": "testDiv5",
      "expression": "5 div 0",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 0.873416,
      "error": "Divide by zero"
    },
    {
      "name": "testMod1",
      "expression": "1 mod 1 = 0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.89225,
      "error": null
    },
    {
      "name": "testMod2",
      "expression": "4 mod 2 = 0",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.647292,
      "error": null
    },
    {
      "name": "testMod3",
      "expression": "5 mod 2 = 1",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.22175,
      "error": null
    },
    {
      "name": "testMod4",
      "expression": "2.2 mod 1.8 = 0.4",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.000333,
      "error": null
    },
    {
      "name": "testMod5",
      "expression": "5 mod 0",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 1.051666,
      "error": "Divide by zero"
    },
    {
      "name": "testRound1",
      "expression": "1.round() = 1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.017208,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testRound2",
      "expression": "3.14159.round(3) = 3.142",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.2155,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testSqrt1",
      "expression": "81.sqrt() = 9.0",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.953125,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testSqrt2",
      "expression": "(-1).sqrt()",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 0.586125,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testAbs1",
      "expression": "(-5).abs() = 5",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.600583,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testAbs2",
      "expression": "(-5.5).abs() = 5.5",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.6615,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testAbs3",
      "expression": "(-5.5 'mg').abs() = 5.5 'mg'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.804417,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testCeiling1",
      "expression": "1.ceiling() = 1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.788,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testCeiling2",
      "expression": "(-1.1).ceiling() = -1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.538917,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testCeiling3",
      "expression": "1.1.ceiling() = 2",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.381541,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testExp1",
      "expression": "0.exp() = 1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.325458,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testExp2",
      "expression": "(-0.0).exp() = 1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.572334,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testFloor1",
      "expression": "1.floor() = 1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.7465,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testFloor2",
      "expression": "2.1.floor() = 2",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.213708,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testFloor3",
      "expression": "(-2.1).floor() = -3",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.7005,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLn1",
      "expression": "1.ln() = 0.0",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.589167,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLn2",
      "expression": "1.0.ln() = 0.0",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.898834,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLog1",
      "expression": "16.log(2) = 4.0",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.856667,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testLog2",
      "expression": "100.0.log(10.0) = 2.0",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.923292,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testPower1",
      "expression": "2.power(3) = 8",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.952084,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testPower2",
      "expression": "2.5.power(2) = 6.25",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.954042,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testPower3",
      "expression": "(-1).power(0.5)",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 0.510917,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testTruncate1",
      "expression": "101.truncate() = 101",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.006959,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testTruncate2",
      "expression": "1.00000001.truncate() = 1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.923333,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testTruncate3",
      "expression": "(-1.56).truncate() = -1",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.03025,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testPrecedence1",
      "expression": "-1.convertsToInteger()",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 0.492541,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testPrecedence2",
      "expression": "1+2*3+4 = 11",
      "result": [
        true
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.177875,
      "error": null
    },
    {
      "name": "testPrecedence3",
      "expression": "1 > 2 is Boolean",
      "result": [
        [
          false
        ],
        [
          [
            "Boolean"
          ]
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.672916,
      "error": null
    },
    {
      "name": "testPrecedence4",
      "expression": "1 | 1 is Integer",
      "result": [
        [
          1
        ],
        [
          [
            "Integer"
          ]
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 4.300375,
      "error": null
    },
    {
      "name": "testVariables1",
      "expression": "%sct = 'http:\/\/snomed.info\/sct'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.800458,
      "error": null
    },
    {
      "name": "testVariables2",
      "expression": "%loinc = 'http:\/\/loinc.org'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.709625,
      "error": null
    },
    {
      "name": "testVariables3",
      "expression": "%ucum = 'http:\/\/unitsofmeasure.org'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.28175,
      "error": null
    },
    {
      "name": "testVariables4",
      "expression": "%`vs-administrative-gender` = 'http:\/\/hl7.org\/fhir\/ValueSet\/administrative-gender'",
      "result": [],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.996834,
      "error": null
    },
    {
      "name": "testExtension1",
      "expression": "Patient.birthDate.extension('http:\/\/hl7.org\/fhir\/StructureDefinition\/patient-birthTime').exists()",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.333375,
      "error": null
    },
    {
      "name": "testExtension2",
      "expression": "Patient.birthDate.extension(%`ext-patient-birthTime`).exists()",
      "result": true,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.372333,
      "error": null
    },
    {
      "name": "testExtension3",
      "expression": "Patient.birthDate.extension('http:\/\/hl7.org\/fhir\/StructureDefinition\/patient-birthTime1').empty()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.723875,
      "error": null
    },
    {
      "name": "testType1",
      "expression": "1.type().namespace = 'System'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.123584,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testType2",
      "expression": "1.type().name = 'Integer'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.870625,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testType3",
      "expression": "true.type().namespace = 'System'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.602125,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testType4",
      "expression": "true.type().name = 'Boolean'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.614375,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testType5",
      "expression": "true.is(Boolean)",
      "result": [
        "is",
        [
          true,
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.474208,
      "error": null
    },
    {
      "name": "testType6",
      "expression": "true.is(System.Boolean)",
      "result": [
        "is",
        [
          true,
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.496041,
      "error": null
    },
    {
      "name": "testType7",
      "expression": "true is Boolean",
      "result": [
        true,
        [
          [
            "Boolean"
          ]
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.077041,
      "error": null
    },
    {
      "name": "testType8",
      "expression": "true is System.Boolean",
      "result": [
        true,
        [
          [
            "System",
            "Boolean"
          ]
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.309458,
      "error": null
    },
    {
      "name": "testType9",
      "expression": "Patient.active.type().namespace = 'FHIR'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.225084,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testType10",
      "expression": "Patient.active.type().name = 'boolean'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.69925,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testType11",
      "expression": "Patient.active.is(boolean)",
      "result": [
        "is",
        [
          null,
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.970291,
      "error": null
    },
    {
      "name": "testType12",
      "expression": "Patient.active.is(Boolean).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.2025,
      "error": null
    },
    {
      "name": "testType13",
      "expression": "Patient.active.is(FHIR.boolean)",
      "result": [
        "is",
        [
          null,
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 2.142084,
      "error": null
    },
    {
      "name": "testType14",
      "expression": "Patient.active.is(System.Boolean).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.632416,
      "error": null
    },
    {
      "name": "testType15",
      "expression": "Patient.type().namespace = 'FHIR'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.792666,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testType16",
      "expression": "Patient.type().name = 'Patient'",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 0.547666,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testType17",
      "expression": "Patient.is(Patient)",
      "result": [
        "is",
        [
          null,
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.136625,
      "error": null
    },
    {
      "name": "testType18",
      "expression": "Patient.is(FHIR.Patient)",
      "result": [
        "is",
        [
          null,
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.366334,
      "error": null
    },
    {
      "name": "testType19",
      "expression": "Patient.is(FHIR.`Patient`)",
      "result": [
        "is",
        [
          null,
          null
        ]
      ],
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.21825,
      "error": null
    },
    {
      "name": "testType20",
      "expression": "Patient.ofType(Patient).type().name",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "Patient"
        }
      ],
      "success": false,
      "executionTimeMs": 1.177167,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testType21",
      "expression": "Patient.ofType(FHIR.Patient).type().name",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "Patient"
        }
      ],
      "success": false,
      "executionTimeMs": 0.854792,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testType22",
      "expression": "Patient.is(System.Patient).not()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 0.932458,
      "error": null
    },
    {
      "name": "testType23",
      "expression": "Patient.ofType(FHIR.`Patient`).type().name",
      "result": null,
      "expected": [
        {
          "type": "string",
          "value": "Patient"
        }
      ],
      "success": false,
      "executionTimeMs": 2.779583,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testConformsTo1",
      "expression": "conformsTo('http:\/\/hl7.org\/fhir\/StructureDefinition\/Patient')",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": false,
      "executionTimeMs": 1.230541,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testConformsTo2",
      "expression": "conformsTo('http:\/\/hl7.org\/fhir\/StructureDefinition\/Person')",
      "result": null,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": false,
      "executionTimeMs": 0.552541,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": "testConformsTo3",
      "expression": "conformsTo('http:\/\/trash')",
      "result": null,
      "expected": [],
      "success": false,
      "executionTimeMs": 0.415625,
      "error": "Syntax error compiling at (0:0)."
    },
    {
      "name": null,
      "expression": "(true and 'foo').empty()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "true"
        }
      ],
      "success": true,
      "executionTimeMs": 1.149708,
      "error": null
    },
    {
      "name": null,
      "expression": "(true | 'foo').allTrue()",
      "result": false,
      "expected": [
        {
          "type": "boolean",
          "value": "false"
        }
      ],
      "success": true,
      "executionTimeMs": 0.879708,
      "error": null
    }
  ],
  "summary": {
    "total": 711,
    "passed": 519,
    "failed": 192,
    "errors": 0
  }
}