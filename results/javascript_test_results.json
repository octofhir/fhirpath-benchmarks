{
  "language": "javascript",
  "timestamp": 1753602096.19,
  "tests": [
    {
      "name": "testAbs1",
      "description": "testAbs1",
      "expression": "(-5).abs() = 5",
      "status": "passed",
      "execution_time_ms": 10.248,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAbs2",
      "description": "testAbs2",
      "expression": "(-5.5).abs() = 5.5",
      "status": "passed",
      "execution_time_ms": 1.108833,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAbs3",
      "description": "testAbs3",
      "expression": "(-5.5 'mg').abs() = 5.5 'mg'",
      "status": "passed",
      "execution_time_ms": 1.015333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAbsEmpty",
      "description": "testAbsEmpty",
      "expression": "{}.abs().empty()",
      "status": "passed",
      "execution_time_ms": 0.373875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAggregate1",
      "description": "testAggregate1",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate($this+$total, 0) = 45",
      "status": "passed",
      "execution_time_ms": 6.066708,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAggregate2",
      "description": "testAggregate2",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate($this+$total, 2) = 47",
      "status": "passed",
      "execution_time_ms": 2.533834,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAggregate3",
      "description": "testAggregate3",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate(iif($total.empty(), $this, iif($this < $total, $this, $total))) = 1",
      "status": "passed",
      "execution_time_ms": 3.381625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAggregate4",
      "description": "testAggregate4",
      "expression": "(1|2|3|4|5|6|7|8|9).aggregate(iif($total.empty(), $this, iif($this > $total, $this, $total))) = 9",
      "status": "passed",
      "execution_time_ms": 2.210333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAllTrue1",
      "description": "testAllTrue1",
      "expression": "Patient.name.select(given.exists()).allTrue()",
      "status": "passed",
      "execution_time_ms": 1.065583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAllTrue2",
      "description": "testAllTrue2",
      "expression": "Patient.name.select(period.exists()).allTrue()",
      "status": "passed",
      "execution_time_ms": 0.411209,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testAllTrue3",
      "description": "testAllTrue3",
      "expression": "Patient.name.all(given.exists())",
      "status": "passed",
      "execution_time_ms": 0.411917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testAllTrue4",
      "description": "testAllTrue4",
      "expression": "Patient.name.all(period.exists())",
      "status": "passed",
      "execution_time_ms": 0.267042,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testSimple",
      "description": "testSimple",
      "expression": "name.given",
      "status": "passed",
      "execution_time_ms": 0.200625,
      "expected": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleNone",
      "description": "testSimpleNone",
      "expression": "name.suffix",
      "status": "passed",
      "execution_time_ms": 0.178125,
      "expected": [],
      "actual": []
    },
    {
      "name": "testEscapedIdentifier",
      "description": "testEscapedIdentifier",
      "expression": "name.`given`",
      "status": "passed",
      "execution_time_ms": 0.351625,
      "expected": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleBackTick1",
      "description": "testSimpleBackTick1",
      "expression": "`Patient`.name.`given`",
      "status": "passed",
      "execution_time_ms": 0.214291,
      "expected": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleFail",
      "description": "testSimpleFail",
      "expression": "name.given1",
      "status": "passed",
      "execution_time_ms": 0.165792,
      "expected": [],
      "actual": []
    },
    {
      "name": "testSimpleWithContext",
      "description": "testSimpleWithContext",
      "expression": "Patient.name.given",
      "status": "passed",
      "execution_time_ms": 1.067792,
      "expected": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ],
      "actual": [
        "Peter",
        "James",
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testSimpleWithWrongContext",
      "description": "testSimpleWithWrongContext",
      "expression": "Encounter.name.given",
      "status": "passed",
      "execution_time_ms": 0.356,
      "expected": [],
      "actual": []
    },
    {
      "name": "testBooleanImplies1",
      "description": "testBooleanImplies1",
      "expression": "(true implies true) = true",
      "status": "passed",
      "execution_time_ms": 0.829875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies2",
      "description": "testBooleanImplies2",
      "expression": "(true implies false) = false",
      "status": "passed",
      "execution_time_ms": 0.4325,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies3",
      "description": "testBooleanImplies3",
      "expression": "(true implies {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.331,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies4",
      "description": "testBooleanImplies4",
      "expression": "(false implies true) = true",
      "status": "passed",
      "execution_time_ms": 0.235584,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies5",
      "description": "testBooleanImplies5",
      "expression": "(false implies false) = true",
      "status": "passed",
      "execution_time_ms": 0.21225,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies6",
      "description": "testBooleanImplies6",
      "expression": "(false implies {}) = true",
      "status": "passed",
      "execution_time_ms": 0.225666,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies7",
      "description": "testBooleanImplies7",
      "expression": "({} implies true) = true",
      "status": "passed",
      "execution_time_ms": 0.193584,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies8",
      "description": "testBooleanImplies8",
      "expression": "({} implies false).empty()",
      "status": "passed",
      "execution_time_ms": 0.225291,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanImplies9",
      "description": "testBooleanImplies9",
      "expression": "({} implies {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.198875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd1",
      "description": "testBooleanLogicAnd1",
      "expression": "(true and true) = true",
      "status": "passed",
      "execution_time_ms": 0.569791,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd2",
      "description": "testBooleanLogicAnd2",
      "expression": "(true and false) = false",
      "status": "passed",
      "execution_time_ms": 0.196125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd3",
      "description": "testBooleanLogicAnd3",
      "expression": "(true and {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.201459,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd4",
      "description": "testBooleanLogicAnd4",
      "expression": "(false and true) = false",
      "status": "passed",
      "execution_time_ms": 0.178167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd5",
      "description": "testBooleanLogicAnd5",
      "expression": "(false and false) = false",
      "status": "passed",
      "execution_time_ms": 0.174458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd6",
      "description": "testBooleanLogicAnd6",
      "expression": "(false and {}) = false",
      "status": "passed",
      "execution_time_ms": 0.277083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd7",
      "description": "testBooleanLogicAnd7",
      "expression": "({} and true).empty()",
      "status": "passed",
      "execution_time_ms": 0.202666,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd8",
      "description": "testBooleanLogicAnd8",
      "expression": "({} and false) = false",
      "status": "passed",
      "execution_time_ms": 0.192459,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicAnd9",
      "description": "testBooleanLogicAnd9",
      "expression": "({} and {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.183666,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr1",
      "description": "testBooleanLogicOr1",
      "expression": "(true or true) = true",
      "status": "passed",
      "execution_time_ms": 0.436291,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr2",
      "description": "testBooleanLogicOr2",
      "expression": "(true or false) = true",
      "status": "passed",
      "execution_time_ms": 0.180792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr3",
      "description": "testBooleanLogicOr3",
      "expression": "(true or {}) = true",
      "status": "passed",
      "execution_time_ms": 0.177625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr4",
      "description": "testBooleanLogicOr4",
      "expression": "(false or true) = true",
      "status": "passed",
      "execution_time_ms": 0.1685,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr5",
      "description": "testBooleanLogicOr5",
      "expression": "(false or false) = false",
      "status": "passed",
      "execution_time_ms": 0.1795,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr6",
      "description": "testBooleanLogicOr6",
      "expression": "(false or {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.20025,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr7",
      "description": "testBooleanLogicOr7",
      "expression": "({} or true) = true",
      "status": "passed",
      "execution_time_ms": 0.1725,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr8",
      "description": "testBooleanLogicOr8",
      "expression": "({} or false).empty()",
      "status": "passed",
      "execution_time_ms": 0.181167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicOr9",
      "description": "testBooleanLogicOr9",
      "expression": "({} or {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.186667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr1",
      "description": "testBooleanLogicXOr1",
      "expression": "(true xor true) = false",
      "status": "passed",
      "execution_time_ms": 0.298958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr2",
      "description": "testBooleanLogicXOr2",
      "expression": "(true xor false) = true",
      "status": "passed",
      "execution_time_ms": 0.207667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr3",
      "description": "testBooleanLogicXOr3",
      "expression": "(true xor {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.193834,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr4",
      "description": "testBooleanLogicXOr4",
      "expression": "(false xor true) = true",
      "status": "passed",
      "execution_time_ms": 1.040792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr5",
      "description": "testBooleanLogicXOr5",
      "expression": "(false xor false) = false",
      "status": "passed",
      "execution_time_ms": 0.318167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr6",
      "description": "testBooleanLogicXOr6",
      "expression": "(false xor {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.256833,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr7",
      "description": "testBooleanLogicXOr7",
      "expression": "({} xor true).empty()",
      "status": "passed",
      "execution_time_ms": 0.301375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr8",
      "description": "testBooleanLogicXOr8",
      "expression": "({} xor false).empty()",
      "status": "passed",
      "execution_time_ms": 0.241792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLogicXOr9",
      "description": "testBooleanLogicXOr9",
      "expression": "({} xor {}).empty()",
      "status": "passed",
      "execution_time_ms": 0.1925,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCase1",
      "description": "testCase1",
      "expression": "'t'.upper() = 'T'",
      "status": "passed",
      "execution_time_ms": 0.735208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCase2",
      "description": "testCase2",
      "expression": "'t'.lower() = 't'",
      "status": "passed",
      "execution_time_ms": 0.276917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCase3",
      "description": "testCase3",
      "expression": "'T'.upper() = 'T'",
      "status": "passed",
      "execution_time_ms": 0.282416,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCase4",
      "description": "testCase4",
      "expression": "'T'.lower() = 't'",
      "status": "passed",
      "execution_time_ms": 0.193167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCeiling1",
      "description": "testCeiling1",
      "expression": "1.ceiling() = 1",
      "status": "passed",
      "execution_time_ms": 0.758541,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCeiling2",
      "description": "testCeiling2",
      "expression": "(-1.1).ceiling() = -1",
      "status": "passed",
      "execution_time_ms": 0.448,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCeiling3",
      "description": "testCeiling3",
      "expression": "1.1.ceiling() = 2",
      "status": "passed",
      "execution_time_ms": 0.315416,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCeilingEmpty",
      "description": "testCeilingEmpty",
      "expression": "{}.ceiling().empty()",
      "status": "passed",
      "execution_time_ms": 0.188,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCollectionBoolean1",
      "description": "testCollectionBoolean1",
      "expression": "iif(1 | 2 | 3, true, false)",
      "status": "passed",
      "execution_time_ms": 0.809542,
      "expected": [],
      "actual": [
        false
      ]
    },
    {
      "name": "testCollectionBoolean2",
      "description": "testCollectionBoolean2",
      "expression": "iif({}, true, false)",
      "status": "passed",
      "execution_time_ms": 0.183959,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testCollectionBoolean3",
      "description": "testCollectionBoolean3",
      "expression": "iif(true, true, false)",
      "status": "passed",
      "execution_time_ms": 0.17025,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCollectionBoolean4",
      "description": "testCollectionBoolean4",
      "expression": "iif({} | true, true, false)",
      "status": "passed",
      "execution_time_ms": 0.196792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCollectionBoolean5",
      "description": "testCollectionBoolean5",
      "expression": "iif(true, true, 1/0)",
      "status": "passed",
      "execution_time_ms": 0.866625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCollectionBoolean6",
      "description": "testCollectionBoolean6",
      "expression": "iif(false, 1/0, true)",
      "status": "passed",
      "execution_time_ms": 2.651542,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCombine1",
      "description": "testCombine1",
      "expression": "concept.code.combine($this.descendants().concept.code).isDistinct()",
      "status": "passed",
      "execution_time_ms": 1.028083,
      "expected": [
        false
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCombine2",
      "description": "testCombine2",
      "expression": "name.given.combine(name.family).exclude('Jim')",
      "status": "passed",
      "execution_time_ms": 0.597042,
      "expected": [
        "Peter",
        "James",
        "Peter",
        "James"
      ],
      "actual": [
        "Peter",
        "James",
        "Peter",
        "James",
        "Chalmers",
        "Windsor"
      ]
    },
    {
      "name": "testCombine3",
      "description": "testCombine3",
      "expression": "name.given.combine($this.name.family).exclude('Jim')",
      "status": "passed",
      "execution_time_ms": 0.379166,
      "expected": [
        "Peter",
        "James",
        "Peter",
        "James",
        "Chalmers",
        "Windsor"
      ],
      "actual": [
        "Peter",
        "James",
        "Peter",
        "James",
        "Chalmers",
        "Windsor"
      ]
    },
    {
      "name": "testComment1",
      "description": "testComment1",
      "expression": "2 + 2 // This is a single-line comment + 4",
      "status": "passed",
      "execution_time_ms": 2.380916,
      "expected": [
        4
      ],
      "actual": [
        4
      ]
    },
    {
      "name": "testComment2",
      "description": "testComment2",
      "expression": "// This is a multi line comment using // that\n  // should not fail during parsing\n  2+2",
      "status": "passed",
      "execution_time_ms": 0.493,
      "expected": [
        4
      ],
      "actual": [
        4
      ]
    },
    {
      "name": "testComment3",
      "description": "testComment3",
      "expression": "2 + 2 \n      /*\nThis is a multi-line comment\nAny text enclosed within is ignored\n+2\n*/",
      "status": "passed",
      "execution_time_ms": 0.625,
      "expected": [
        4
      ],
      "actual": [
        4
      ]
    },
    {
      "name": "testComment4",
      "description": "testComment4",
      "expression": "2 + 2 \n      /*\nThis is a multi-line comment\nAny text enclosed within is ignored\n*/\n+2",
      "status": "passed",
      "execution_time_ms": 0.527375,
      "expected": [
        6
      ],
      "actual": [
        6
      ]
    },
    {
      "name": "testComment5",
      "description": "testComment5",
      "expression": "/*\nThis is a multi-line comment\nAny text enclosed within is ignored\n*/\n2+2",
      "status": "passed",
      "execution_time_ms": 0.336167,
      "expected": [
        4
      ],
      "actual": [
        4
      ]
    },
    {
      "name": "testComment6",
      "description": "testComment6",
      "expression": "2 // comment\n/ 2",
      "status": "passed",
      "execution_time_ms": 0.399166,
      "expected": [
        1
      ],
      "actual": [
        1
      ]
    },
    {
      "name": "testComment7",
      "description": "testComment7",
      "expression": "2 + 2 /",
      "status": "error",
      "execution_time_ms": 1.081458,
      "expected": [],
      "actual": null,
      "error": "line: 1; column: 7; message: mismatched input '<EOF>' expecting {'+', '-', 'is', 'as', 'in', 'contains', '(', '{', 'true', 'false', '%', '$this', '$index', '$total', DATETIME, TIME, IDENTIFIER, DELIMITEDIDENTIFIER, STRING, NUMBER}"
    },
    {
      "name": "testComment8",
      "description": "testComment8",
      "expression": "2 + 2 /* not finished",
      "status": "error",
      "execution_time_ms": 0.835833,
      "expected": [],
      "actual": null,
      "error": "line: 1; column: 7; message: extraneous input '*' expecting {'+', '-', 'is', 'as', 'in', 'contains', '(', '{', 'true', 'false', '%', '$this', '$index', '$total', DATETIME, TIME, IDENTIFIER, DELIMITEDIDENTIFIER, STRING, NUMBER}\nline: 1; column: 13; message: extraneous input 'finished' expecting <EOF>"
    },
    {
      "name": "testComment9",
      "description": "testComment9",
      "expression": "2 + /* inline $@%^+ * */ 2 = 4",
      "status": "passed",
      "execution_time_ms": 0.664625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "Comparable1",
      "description": "Comparable1",
      "expression": "1 'cm'.comparable(1 '[in_i]')",
      "status": "error",
      "execution_time_ms": 0.323209,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: comparable"
    },
    {
      "name": "Comparable2",
      "description": "Comparable2",
      "expression": "1 'cm'.comparable(1 '[s]')",
      "status": "error",
      "execution_time_ms": 0.208542,
      "expected": [
        false
      ],
      "actual": null,
      "error": "Not implemented: comparable"
    },
    {
      "name": "Comparable3",
      "description": "Comparable3",
      "expression": "1 'cm'.comparable(1 's')",
      "status": "error",
      "execution_time_ms": 0.174584,
      "expected": [
        false
      ],
      "actual": null,
      "error": "Not implemented: comparable"
    },
    {
      "name": "testConcatenate1",
      "description": "testConcatenate1",
      "expression": "'a' & 'b' = 'ab'",
      "status": "passed",
      "execution_time_ms": 0.245625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testConcatenate2",
      "description": "testConcatenate2",
      "expression": "'1' & {} = '1'",
      "status": "passed",
      "execution_time_ms": 0.176042,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testConcatenate3",
      "description": "testConcatenate3",
      "expression": "{} & 'b' = 'b'",
      "status": "passed",
      "execution_time_ms": 0.150292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testConcatenate4",
      "description": "testConcatenate4",
      "expression": "(1 | 2 | 3) & 'b' = '1,2,3b'",
      "status": "error",
      "execution_time_ms": 0.568375,
      "expected": [],
      "actual": null,
      "error": "Unexpected collection[1,2,3]; expected singleton of type String"
    },
    {
      "name": "testConformsTo1",
      "description": "testConformsTo1",
      "expression": "conformsTo('http://hl7.org/fhir/StructureDefinition/Patient')",
      "status": "error",
      "execution_time_ms": 0.2965,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: conformsTo"
    },
    {
      "name": "testConformsTo2",
      "description": "testConformsTo2",
      "expression": "conformsTo('http://hl7.org/fhir/StructureDefinition/Person')",
      "status": "error",
      "execution_time_ms": 0.165333,
      "expected": [
        false
      ],
      "actual": null,
      "error": "Not implemented: conformsTo"
    },
    {
      "name": "testConformsTo3",
      "description": "testConformsTo3",
      "expression": "conformsTo('http://trash')",
      "status": "error",
      "execution_time_ms": 0.143834,
      "expected": [],
      "actual": null,
      "error": "Not implemented: conformsTo"
    },
    {
      "name": "testContainsCollection1",
      "description": "testContainsCollection1",
      "expression": "(1 | 2 | 3) contains 1",
      "status": "passed",
      "execution_time_ms": 0.847083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsCollection2",
      "description": "testContainsCollection2",
      "expression": "(2 | 3) contains 1",
      "status": "passed",
      "execution_time_ms": 0.42875,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testContainsCollection3",
      "description": "testContainsCollection3",
      "expression": "('a' | 'c' | 'd') contains 'a'",
      "status": "passed",
      "execution_time_ms": 0.203875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsCollection4",
      "description": "testContainsCollection4",
      "expression": "('a' | 'c' | 'd') contains 'b'",
      "status": "passed",
      "execution_time_ms": 0.187166,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testContainsCollectionEmpty1",
      "description": "testContainsCollectionEmpty1",
      "expression": "{} contains 1",
      "status": "passed",
      "execution_time_ms": 0.196458,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testContainsCollectionEmpty2",
      "description": "testContainsCollectionEmpty2",
      "expression": "{} contains 'value'",
      "status": "passed",
      "execution_time_ms": 0.147,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testContainsCollectionEmpty3",
      "description": "testContainsCollectionEmpty3",
      "expression": "{} contains true",
      "status": "passed",
      "execution_time_ms": 0.1865,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testContainsCollectionEmpty4",
      "description": "testContainsCollectionEmpty4",
      "expression": "{} contains {}",
      "status": "passed",
      "execution_time_ms": 0.138084,
      "expected": [],
      "actual": []
    },
    {
      "name": "testContainsCollectionEmptyDateTime",
      "description": "testContainsCollectionEmptyDateTime",
      "expression": "{} contains @2023-01-01",
      "status": "passed",
      "execution_time_ms": 0.490167,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testContainsString1",
      "description": "testContainsString1",
      "expression": "'12345'.contains('6') = false",
      "status": "passed",
      "execution_time_ms": 0.36475,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString2",
      "description": "testContainsString2",
      "expression": "'12345'.contains('5') = true",
      "status": "passed",
      "execution_time_ms": 0.242375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString3",
      "description": "testContainsString3",
      "expression": "'12345'.contains('45') = true",
      "status": "passed",
      "execution_time_ms": 0.263708,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString4",
      "description": "testContainsString4",
      "expression": "'12345'.contains('35') = false",
      "status": "passed",
      "execution_time_ms": 0.191541,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString5",
      "description": "testContainsString5",
      "expression": "'12345'.contains('12345') = true",
      "status": "passed",
      "execution_time_ms": 0.183417,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString6",
      "description": "testContainsString6",
      "expression": "'12345'.contains('012345') = false",
      "status": "passed",
      "execution_time_ms": 0.222291,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString7",
      "description": "testContainsString7",
      "expression": "'12345'.contains('') = true",
      "status": "passed",
      "execution_time_ms": 0.186834,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString8",
      "description": "testContainsString8",
      "expression": "{}.contains('a').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.208791,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString9",
      "description": "testContainsString9",
      "expression": "{}.contains('').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.206792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsString10",
      "description": "testContainsString10",
      "expression": "'123456789'.contains(length().toString())",
      "status": "passed",
      "execution_time_ms": 0.270958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testContainsNonString1",
      "description": "testContainsNonString1",
      "expression": "Appointment.identifier.contains('rand')",
      "status": "error",
      "execution_time_ms": 0.252167,
      "expected": [],
      "actual": null,
      "error": "Expected string, but got: [\"{\\\"system\\\":\\\"http://example.org/sampleappointment-identifier\\\",\\\"value\\\":\\\"123\\\"}\"]"
    },
    {
      "name": "testCount1",
      "description": "testCount1",
      "expression": "Patient.name.count()",
      "status": "passed",
      "execution_time_ms": 0.176167,
      "expected": [
        3
      ],
      "actual": [
        3
      ]
    },
    {
      "name": "testCount2",
      "description": "testCount2",
      "expression": "Patient.name.count() = 3",
      "status": "passed",
      "execution_time_ms": 0.286958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCount3",
      "description": "testCount3",
      "expression": "Patient.name.first().count()",
      "status": "passed",
      "execution_time_ms": 0.186291,
      "expected": [
        1
      ],
      "actual": [
        1
      ]
    },
    {
      "name": "testCount4",
      "description": "testCount4",
      "expression": "Patient.name.first().count() = 1",
      "status": "passed",
      "execution_time_ms": 0.29,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "defineVariable1",
      "description": "simplest variable",
      "expression": "defineVariable('v1', 'value1').select(%v1)",
      "status": "passed",
      "execution_time_ms": 0.563167,
      "expected": [
        "value1"
      ],
      "actual": [
        "value1"
      ]
    },
    {
      "name": "defineVariable2",
      "description": "simple use of a variable",
      "expression": "defineVariable('n1', name.first()).select(%n1.given)",
      "status": "passed",
      "execution_time_ms": 0.250083,
      "expected": [
        "Peter",
        "James"
      ],
      "actual": [
        "Peter",
        "James"
      ]
    },
    {
      "name": "defineVariable3",
      "description": "simple use of a variable 2 selects",
      "expression": "defineVariable('n1', name.first()).select(%n1.given).first()",
      "status": "passed",
      "execution_time_ms": 0.243417,
      "expected": [
        "Peter"
      ],
      "actual": [
        "Peter"
      ]
    },
    {
      "name": "defineVariable4",
      "description": "use of a variable in separate contexts",
      "expression": "defineVariable('n1', name.first()).select(%n1.given) | defineVariable('n1', name.skip(1).first()).select(%n1.given)",
      "status": "passed",
      "execution_time_ms": 0.604458,
      "expected": [
        "Peter",
        "James",
        "Jim"
      ],
      "actual": [
        "Peter",
        "James",
        "Jim"
      ]
    },
    {
      "name": "defineVariable5",
      "description": "use of a variable in separate contexts defined in 2 but used in 1",
      "expression": "defineVariable('n1', name.first()).where(active.not()) | defineVariable('n1', name.skip(1).first()).select(%n1.given)",
      "status": "passed",
      "execution_time_ms": 0.6235,
      "expected": [
        "Jim"
      ],
      "actual": [
        "Jim"
      ]
    },
    {
      "name": "defineVariable6",
      "description": "use of different variables in different contexts",
      "expression": "defineVariable('n1', name.first()).select(id & '-' & %n1.given.join('|')) | defineVariable('n2', name.skip(1).first()).select(%n2.given)",
      "status": "passed",
      "execution_time_ms": 0.69275,
      "expected": [
        "example-Peter|James",
        "Jim"
      ],
      "actual": [
        "example-Peter|James",
        "Jim"
      ]
    },
    {
      "name": "defineVariable7",
      "description": "2 vars, one unused",
      "expression": "defineVariable('n1', name.first()).active | defineVariable('n2', name.skip(1).first()).select(%n2.given)",
      "status": "passed",
      "execution_time_ms": 0.539917,
      "expected": [
        true,
        "Jim"
      ],
      "actual": [
        true,
        "Jim"
      ]
    },
    {
      "name": "defineVariable8",
      "description": "CompositeVariableUse",
      "expression": "defineVariable('v1', 'value1').select(%v1).trace('data').defineVariable('v2', 'value2').select($this & ':' & %v1 & '-' & %v2) | defineVariable('v3', 'value3').select(%v3)",
      "status": "passed",
      "execution_time_ms": 0.613083,
      "expected": [
        "value1:value1-value2",
        "value3"
      ],
      "actual": [
        "value1:value1-value2",
        "value3"
      ]
    },
    {
      "name": "defineVariable9",
      "description": "use of a variable outside context throws error",
      "expression": "defineVariable('n1', name.first()).active | defineVariable('n2', name.skip(1).first()).select(%n1.given)",
      "status": "error",
      "execution_time_ms": 0.477166,
      "expected": [],
      "actual": null,
      "error": "Attempting to access an undefined environment variable: n1"
    },
    {
      "name": "defineVariable10",
      "description": "use undefined variable throws error",
      "expression": "select(%fam.given)",
      "status": "error",
      "execution_time_ms": 0.1745,
      "expected": [],
      "actual": null,
      "error": "Attempting to access an undefined environment variable: fam"
    },
    {
      "name": "dvRedefiningVariableThrowsError",
      "description": "dvRedefiningVariableThrowsError",
      "expression": "defineVariable('v1').defineVariable('v1').select(%v1)",
      "status": "error",
      "execution_time_ms": 0.206208,
      "expected": [],
      "actual": null,
      "error": "Variable %v1 already defined"
    },
    {
      "name": "defineVariable12",
      "description": "defineVariable() could not be the first child",
      "expression": "Patient.name.defineVariable('n1', first()).active | Patient.name.defineVariable('n2', skip(1).first()).select(%n1.given)",
      "status": "error",
      "execution_time_ms": 0.465833,
      "expected": [],
      "actual": null,
      "error": "Attempting to access an undefined environment variable: n1"
    },
    {
      "name": "defineVariable13",
      "description": "sequence of variable definitions tweak",
      "expression": "Patient.name.defineVariable('n2', skip(1).first()).defineVariable('res', %n2.given+%n2.given).select(%res)",
      "status": "passed",
      "execution_time_ms": 0.531792,
      "expected": [
        "JimJim",
        "JimJim",
        "JimJim"
      ],
      "actual": [
        "JimJim",
        "JimJim",
        "JimJim"
      ]
    },
    {
      "name": "defineVariable14",
      "description": "sequence of variable definitions original",
      "expression": "Patient.name.defineVariable('n1', first()).select(%n1).exists() | Patient.name.defineVariable('n2', skip(1).first()).defineVariable('res', %n2.given+%n2.given).select(%res)",
      "status": "passed",
      "execution_time_ms": 0.566375,
      "expected": [
        true,
        "JimJim"
      ],
      "actual": [
        true,
        "JimJim"
      ]
    },
    {
      "name": "defineVariable15",
      "description": "multi-tree vars valid",
      "expression": "defineVariable('root', 'r1-').select(defineVariable('v1', 'v1').defineVariable('v2', 'v2').select(%v1 | %v2)).select(%root & $this)",
      "status": "passed",
      "execution_time_ms": 1.869459,
      "expected": [
        "r1-v1",
        "r1-v2"
      ],
      "actual": [
        "r1-v1",
        "r1-v2"
      ]
    },
    {
      "name": "defineVariable16",
      "description": "multi-tree vars exception",
      "expression": "defineVariable('root', 'r1-').select(defineVariable('v1', 'v1').defineVariable('v2', 'v2').select(%v1 | %v2)).select(%root & $this & %v1)",
      "status": "error",
      "execution_time_ms": 0.470292,
      "expected": [],
      "actual": null,
      "error": "Attempting to access an undefined environment variable: v1"
    },
    {
      "name": "dvCantOverwriteSystemVar",
      "description": "dvCantOverwriteSystemVar",
      "expression": "defineVariable('context', 'oops')",
      "status": "error",
      "execution_time_ms": 0.207625,
      "expected": [],
      "actual": null,
      "error": "Environment Variable %context already defined"
    },
    {
      "name": "defineVariable19",
      "description": "defineVariable in function parameters (1)",
      "expression": "defineVariable(defineVariable('param','ppp').select(%param), defineVariable('param','value').select(%param)).select(%ppp)",
      "status": "passed",
      "execution_time_ms": 0.338708,
      "expected": [
        "value"
      ],
      "actual": [
        "value"
      ]
    },
    {
      "name": "dvParametersDontColide",
      "description": "defineVariable in function parameters (2)",
      "expression": "'aaa'.replace(defineVariable('param', 'aaa').select(%param), defineVariable('param','bbb').select(%param))",
      "status": "passed",
      "execution_time_ms": 0.413458,
      "expected": [
        "bbb"
      ],
      "actual": [
        "bbb"
      ]
    },
    {
      "name": "dvUsageOutsideScopeThrows",
      "description": "use of a variable outside context throws error",
      "expression": "defineVariable('n1', 'v1').active | defineVariable('n2', 'v2').select(%n1)",
      "status": "error",
      "execution_time_ms": 0.262291,
      "expected": [],
      "actual": null,
      "error": "Attempting to access an undefined environment variable: n1"
    },
    {
      "name": "testDistinct1",
      "description": "testDistinct1",
      "expression": "(1 | 2 | 3).isDistinct()",
      "status": "passed",
      "execution_time_ms": 0.56925,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDistinct2",
      "description": "testDistinct2",
      "expression": "Questionnaire.descendants().linkId.isDistinct()",
      "status": "passed",
      "execution_time_ms": 0.335334,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDistinct3",
      "description": "testDistinct3",
      "expression": "Questionnaire.descendants().linkId.select(substring(0,1)).isDistinct().not()",
      "status": "error",
      "execution_time_ms": 0.614166,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Expected string, but got: [\"1\"]"
    },
    {
      "name": "testDistinct4",
      "description": "testDistinct4",
      "expression": "(1 | 2 | 3).distinct()",
      "status": "passed",
      "execution_time_ms": 0.517417,
      "expected": [
        1,
        2,
        3
      ],
      "actual": [
        1,
        2,
        3
      ]
    },
    {
      "name": "testDistinct5",
      "description": "testDistinct5",
      "expression": "Questionnaire.descendants().linkId.distinct().count()",
      "status": "passed",
      "execution_time_ms": 0.263834,
      "expected": [
        10
      ],
      "actual": [
        10
      ]
    },
    {
      "name": "testDistinct6",
      "description": "testDistinct6",
      "expression": "Questionnaire.descendants().linkId.select(substring(0,1)).distinct().count()",
      "status": "error",
      "execution_time_ms": 0.513458,
      "expected": [
        2
      ],
      "actual": null,
      "error": "Expected string, but got: [\"1\"]"
    },
    {
      "name": "testDiv1",
      "description": "testDiv1",
      "expression": "1 div 1 = 1",
      "status": "passed",
      "execution_time_ms": 0.730209,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDiv2",
      "description": "testDiv2",
      "expression": "4 div 2 = 2",
      "status": "passed",
      "execution_time_ms": 0.399666,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDiv3",
      "description": "testDiv3",
      "expression": "5 div 2 = 2",
      "status": "passed",
      "execution_time_ms": 0.385625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDiv4",
      "description": "testDiv4",
      "expression": "2.2 div 1.8 = 1",
      "status": "passed",
      "execution_time_ms": 0.4035,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDiv5",
      "description": "testDiv5",
      "expression": "5 div 0",
      "status": "passed",
      "execution_time_ms": 0.27825,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDivEmpty1",
      "description": "testDivEmpty1",
      "expression": "1 div {}",
      "status": "passed",
      "execution_time_ms": 0.220375,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDivEmpty2",
      "description": "testDivEmpty2",
      "expression": "{} div 1",
      "status": "passed",
      "execution_time_ms": 0.181,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDivEmpty3",
      "description": "testDivEmpty3",
      "expression": "{} div {}",
      "status": "passed",
      "execution_time_ms": 0.126459,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDivide1",
      "description": "testDivide1",
      "expression": "1 / 1 = 1",
      "status": "passed",
      "execution_time_ms": 0.395125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDivide2",
      "description": "testDivide2",
      "expression": "4 / 2 = 2",
      "status": "passed",
      "execution_time_ms": 0.37375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDivide3",
      "description": "testDivide3",
      "expression": "4.0 / 2.0 = 2.0",
      "status": "passed",
      "execution_time_ms": 0.413958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDivide4",
      "description": "testDivide4",
      "expression": "1 / 2 = 0.5",
      "status": "passed",
      "execution_time_ms": 0.393875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDivide5",
      "description": "testDivide5",
      "expression": "(1.2 / 1.8).round(2) = 0.67",
      "status": "passed",
      "execution_time_ms": 0.611083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDivide6",
      "description": "testDivide6",
      "expression": "1 / 0",
      "status": "passed",
      "execution_time_ms": 0.3025,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDivideEmpty1",
      "description": "testDivideEmpty1",
      "expression": "1 / {}",
      "status": "passed",
      "execution_time_ms": 0.226667,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDivideEmpty2",
      "description": "testDivideEmpty2",
      "expression": "{} / 1",
      "status": "passed",
      "execution_time_ms": 0.190459,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDivideEmpty3",
      "description": "testDivideEmpty3",
      "expression": "{} / {}",
      "status": "passed",
      "execution_time_ms": 2.208333,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDollarThis1",
      "description": "testDollarThis1",
      "expression": "Patient.name.given.where(substring($this.length()-3) = 'out')",
      "status": "passed",
      "execution_time_ms": 0.587166,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDollarThis2",
      "description": "testDollarThis2",
      "expression": "Patient.name.given.where(substring($this.length()-3) = 'ter')",
      "status": "passed",
      "execution_time_ms": 0.363291,
      "expected": [
        "Peter",
        "Peter"
      ],
      "actual": [
        "Peter",
        "Peter"
      ]
    },
    {
      "name": "testDollarOrderAllowed",
      "description": "testDollarOrderAllowed",
      "expression": "Patient.name.skip(1).given",
      "status": "passed",
      "execution_time_ms": 0.242208,
      "expected": [
        "Jim",
        "Peter",
        "James"
      ],
      "actual": [
        "Jim",
        "Peter",
        "James"
      ]
    },
    {
      "name": "testDollarOrderAllowedA",
      "description": "testDollarOrderAllowedA",
      "expression": "Patient.name.skip(3).given",
      "status": "passed",
      "execution_time_ms": 0.235042,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDollarOrderNotAllowed",
      "description": "testDollarOrderNotAllowed",
      "expression": "Patient.children().skip(1)",
      "status": "passed",
      "execution_time_ms": 0.279167,
      "expected": [],
      "actual": [
        "example",
        {
          "status": "generated",
          "div": {
            "table": {
              "tbody": {
                "tr": [
                  {
                    "td": [
                      "Name",
                      {
                        "b": "Chalmers"
                      }
                    ]
                  },
                  {
                    "td": [
                      "Address",
                      "534 Erewhon, Pleasantville, Vic, 3999"
                    ]
                  },
                  {
                    "td": [
                      "Contacts",
                      "Home: unknown. Work: (03) 5555 6473"
                    ]
                  },
                  {
                    "td": [
                      "Id",
                      "MRN: 12345 (Acme Healthcare)"
                    ]
                  }
                ]
              }
            }
          }
        },
        {
          "use": "usual",
          "type": {
            "coding": {
              "system": "http://terminology.hl7.org/CodeSystem/v2-0203",
              "code": "MR"
            }
          },
          "system": "urn:oid:1.2.36.146.595.217.0.1",
          "value": 12345,
          "period": {
            "start": "2001-05-06"
          },
          "assigner": {
            "display": "Acme Healthcare"
          }
        },
        true,
        {
          "use": "official",
          "family": "Chalmers",
          "given": [
            "Peter",
            "James"
          ]
        },
        {
          "use": "usual",
          "given": "Jim"
        },
        {
          "use": "maiden",
          "family": "Windsor",
          "given": [
            "Peter",
            "James"
          ],
          "period": {
            "end": 2002
          }
        },
        {
          "use": "home"
        },
        {
          "system": "phone",
          "value": "(03) 5555 6473",
          "use": "work",
          "rank": 1
        },
        {
          "system": "phone",
          "value": "(03) 3410 5613",
          "use": "mobile",
          "rank": 2
        },
        {
          "system": "phone",
          "value": "(03) 5555 8834",
          "use": "old",
          "period": {
            "end": 2014
          }
        },
        "male",
        "1974-12-25",
        false,
        {
          "use": "home",
          "type": "both",
          "text": "534 Erewhon St PeasantVille, Rainbow, Vic  3999",
          "line": "534 Erewhon St",
          "city": "PleasantVille",
          "district": "Rainbow",
          "state": "Vic",
          "postalCode": 3999,
          "period": {
            "start": "1974-12-25"
          }
        },
        {
          "relationship": {
            "coding": {
              "system": "http://terminology.hl7.org/CodeSystem/v2-0131",
              "code": "N"
            }
          },
          "name": {
            "family": "du Marché",
            "given": "Bénédicte"
          },
          "telecom": {
            "system": "phone",
            "value": "+33 (237) 998327"
          },
          "address": {
            "use": "home",
            "type": "both",
            "line": "534 Erewhon St",
            "city": "PleasantVille",
            "district": "Rainbow",
            "state": "Vic",
            "postalCode": 3999,
            "period": {
              "start": "1974-12-25"
            }
          },
          "gender": "female",
          "period": {
            "start": 2012
          }
        },
        {
          "reference": "Organization/1"
        }
      ]
    },
    {
      "name": "testEncodeBase64A",
      "description": "testEncodeBase64A",
      "expression": "'test'.encode('base64')",
      "status": "passed",
      "execution_time_ms": 0.172375,
      "expected": [
        "dGVzdA=="
      ],
      "actual": [
        "dGVzdA=="
      ]
    },
    {
      "name": "testEncodeHex",
      "description": "testEncodeHex",
      "expression": "'test'.encode('hex')",
      "status": "passed",
      "execution_time_ms": 0.149709,
      "expected": [
        "74657374"
      ],
      "actual": [
        "74657374"
      ]
    },
    {
      "name": "testEncodeBase64B",
      "description": "testEncodeBase64B",
      "expression": "'subjects?_d'.encode('base64')",
      "status": "passed",
      "execution_time_ms": 0.156958,
      "expected": [
        "c3ViamVjdHM/X2Q="
      ],
      "actual": [
        "c3ViamVjdHM/X2Q="
      ]
    },
    {
      "name": "testEncodeUrlBase64",
      "description": "testEncodeUrlBase64",
      "expression": "'subjects?_d'.encode('urlbase64')",
      "status": "passed",
      "execution_time_ms": 0.15725,
      "expected": [
        "c3ViamVjdHM_X2Q="
      ],
      "actual": [
        "c3ViamVjdHM_X2Q="
      ]
    },
    {
      "name": "testDecodeBase64A",
      "description": "testDecodeBase64A",
      "expression": "'dGVzdA=='.decode('base64')",
      "status": "passed",
      "execution_time_ms": 0.205834,
      "expected": [
        "test"
      ],
      "actual": [
        "test"
      ]
    },
    {
      "name": "testDecodeHex",
      "description": "testDecodeHex",
      "expression": "'74657374'.decode('hex')",
      "status": "passed",
      "execution_time_ms": 0.172125,
      "expected": [
        "test"
      ],
      "actual": [
        "test"
      ]
    },
    {
      "name": "testDecodeBase64B",
      "description": "testDecodeBase64B",
      "expression": "'c3ViamVjdHM/X2Q='.decode('base64')",
      "status": "passed",
      "execution_time_ms": 0.177666,
      "expected": [
        "subjects?_d"
      ],
      "actual": [
        "subjects?_d"
      ]
    },
    {
      "name": "testDecodeUrlBase64",
      "description": "testDecodeUrlBase64",
      "expression": "'c3ViamVjdHM_X2Q='.decode('urlbase64')",
      "status": "passed",
      "execution_time_ms": 0.136,
      "expected": [
        "subjects?_d"
      ],
      "actual": [
        "subjects?_d"
      ]
    },
    {
      "name": "testEndsWith1",
      "description": "testEndsWith1",
      "expression": "'12345'.endsWith('2') = false",
      "status": "passed",
      "execution_time_ms": 0.187042,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith2",
      "description": "testEndsWith2",
      "expression": "'12345'.endsWith('5') = true",
      "status": "passed",
      "execution_time_ms": 0.156208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith3",
      "description": "testEndsWith3",
      "expression": "'12345'.endsWith('45') = true",
      "status": "passed",
      "execution_time_ms": 0.173042,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith4",
      "description": "testEndsWith4",
      "expression": "'12345'.endsWith('35') = false",
      "status": "passed",
      "execution_time_ms": 0.149541,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith5",
      "description": "testEndsWith5",
      "expression": "'12345'.endsWith('12345') = true",
      "status": "passed",
      "execution_time_ms": 0.150875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith6",
      "description": "testEndsWith6",
      "expression": "'12345'.endsWith('012345') = false",
      "status": "passed",
      "execution_time_ms": 0.149917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith7",
      "description": "testEndsWith7",
      "expression": "'12345'.endsWith('') = true",
      "status": "passed",
      "execution_time_ms": 0.164667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith8",
      "description": "testEndsWith8",
      "expression": "{}.endsWith('1').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.166084,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith9",
      "description": "testEndsWith9",
      "expression": "{}.endsWith('').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.166084,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWith10",
      "description": "testEndsWith10",
      "expression": "'123456789'.endsWith(length().toString())",
      "status": "passed",
      "execution_time_ms": 0.15825,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEndsWithNonString1",
      "description": "testEndsWithNonString1",
      "expression": "Appointment.identifier.endsWith('rand')",
      "status": "error",
      "execution_time_ms": 0.170375,
      "expected": [],
      "actual": null,
      "error": "Expected string, but got: [\"{\\\"system\\\":\\\"http://example.org/sampleappointment-identifier\\\",\\\"value\\\":\\\"123\\\"}\"]"
    },
    {
      "name": "testEquality1",
      "description": "testEquality1",
      "expression": "1 = 1",
      "status": "passed",
      "execution_time_ms": 0.304875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality2",
      "description": "testEquality2",
      "expression": "{} = {}",
      "status": "passed",
      "execution_time_ms": 0.130958,
      "expected": [],
      "actual": []
    },
    {
      "name": "testEquality3",
      "description": "testEquality3",
      "expression": "true = {}",
      "status": "passed",
      "execution_time_ms": 0.118666,
      "expected": [],
      "actual": []
    },
    {
      "name": "testEquality4",
      "description": "testEquality4",
      "expression": "(1) = (1)",
      "status": "passed",
      "execution_time_ms": 0.290083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality5",
      "description": "testEquality5",
      "expression": "(1 | 2) = (1 | 2)",
      "status": "passed",
      "execution_time_ms": 0.489625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality6",
      "description": "testEquality6",
      "expression": "(1 | 2 | 3) = (1 | 2 | 3)",
      "status": "passed",
      "execution_time_ms": 0.637958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality7",
      "description": "testEquality7",
      "expression": "(1 | 1) = (1 | 2 | {})",
      "status": "passed",
      "execution_time_ms": 0.508291,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality8",
      "description": "testEquality8",
      "expression": "1 = 2",
      "status": "passed",
      "execution_time_ms": 0.2485,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality9",
      "description": "testEquality9",
      "expression": "'a' = 'a'",
      "status": "passed",
      "execution_time_ms": 0.121,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality10",
      "description": "testEquality10",
      "expression": "'a' = 'A'",
      "status": "passed",
      "execution_time_ms": 0.116792,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality11",
      "description": "testEquality11",
      "expression": "'a' = 'b'",
      "status": "passed",
      "execution_time_ms": 0.114583,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality12",
      "description": "testEquality12",
      "expression": "1.1 = 1.1",
      "status": "passed",
      "execution_time_ms": 0.242666,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality13",
      "description": "testEquality13",
      "expression": "1.1 = 1.2",
      "status": "passed",
      "execution_time_ms": 0.246,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality14",
      "description": "testEquality14",
      "expression": "1.10 = 1.1",
      "status": "passed",
      "execution_time_ms": 0.260291,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality15",
      "description": "testEquality15",
      "expression": "0 = 0",
      "status": "passed",
      "execution_time_ms": 0.245,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality16",
      "description": "testEquality16",
      "expression": "0.0 = 0",
      "status": "passed",
      "execution_time_ms": 0.336125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality17",
      "description": "testEquality17",
      "expression": "@2012-04-15 = @2012-04-15",
      "status": "passed",
      "execution_time_ms": 1.101167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality18",
      "description": "testEquality18",
      "expression": "@2012-04-15 = @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.229459,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality19",
      "description": "testEquality19",
      "expression": "@2012-04-15 = @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.436625,
      "expected": [],
      "actual": []
    },
    {
      "name": "testEquality20",
      "description": "testEquality20",
      "expression": "@2012-04-15T15:00:00 = @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.177542,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality21",
      "description": "testEquality21",
      "expression": "@2012-04-15T15:30:31 = @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.258333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality22",
      "description": "testEquality22",
      "expression": "@2012-04-15T15:30:31 = @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.14075,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality23",
      "description": "testEquality23",
      "expression": "@2012-04-15T15:00:00Z = @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.275667,
      "expected": [],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality24",
      "description": "testEquality24",
      "expression": "@2012-04-15T15:00:00+02:00 = @2012-04-15T16:00:00+03:00",
      "status": "passed",
      "execution_time_ms": 0.217375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality25",
      "description": "testEquality25",
      "expression": "name = name",
      "status": "passed",
      "execution_time_ms": 0.167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality26",
      "description": "testEquality26",
      "expression": "name.take(2) = name.take(2).first() | name.take(2).last()",
      "status": "passed",
      "execution_time_ms": 0.91525,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquality27",
      "description": "testEquality27",
      "expression": "name.take(2) = name.take(2).last() | name.take(2).first()",
      "status": "passed",
      "execution_time_ms": 2.401541,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquality28",
      "description": "testEquality28",
      "expression": "Observation.value = 185 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.411333,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testEquivalent1",
      "description": "testEquivalent1",
      "expression": "1 ~ 1",
      "status": "passed",
      "execution_time_ms": 0.903875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent2",
      "description": "testEquivalent2",
      "expression": "{} ~ {}",
      "status": "passed",
      "execution_time_ms": 0.1295,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent3",
      "description": "testEquivalent3",
      "expression": "1 ~ {}",
      "status": "passed",
      "execution_time_ms": 0.282917,
      "expected": [
        false
      ],
      "actual": []
    },
    {
      "name": "testEquivalent4",
      "description": "testEquivalent4",
      "expression": "1 ~ 2",
      "status": "passed",
      "execution_time_ms": 0.360458,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent5",
      "description": "testEquivalent5",
      "expression": "'a' ~ 'a'",
      "status": "passed",
      "execution_time_ms": 0.124125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent6",
      "description": "testEquivalent6",
      "expression": "'a' ~ 'A'",
      "status": "passed",
      "execution_time_ms": 0.181,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent7",
      "description": "testEquivalent7",
      "expression": "'a' ~ 'b'",
      "status": "passed",
      "execution_time_ms": 0.116375,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent8",
      "description": "testEquivalent8",
      "expression": "1.1 ~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.382333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent9",
      "description": "testEquivalent9",
      "expression": "1.1 ~ 1.2",
      "status": "passed",
      "execution_time_ms": 0.3975,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent10",
      "description": "testEquivalent10",
      "expression": "1.10 ~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.500583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent11",
      "description": "testEquivalent11",
      "expression": "1.2 / 1.8 ~ 0.67",
      "status": "passed",
      "execution_time_ms": 0.42775,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent12",
      "description": "testEquivalent12",
      "expression": "0 ~ 0",
      "status": "passed",
      "execution_time_ms": 0.2815,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent13",
      "description": "testEquivalent13",
      "expression": "0.0 ~ 0",
      "status": "passed",
      "execution_time_ms": 0.276708,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent14",
      "description": "testEquivalent14",
      "expression": "@2012-04-15 ~ @2012-04-15",
      "status": "passed",
      "execution_time_ms": 0.171875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent15",
      "description": "testEquivalent15",
      "expression": "@2012-04-15 ~ @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.1605,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent16",
      "description": "testEquivalent16",
      "expression": "@2012-04-15 ~ @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.114333,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent17",
      "description": "testEquivalent17",
      "expression": "@2012-04-15T15:30:31 ~ @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.1205,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent18",
      "description": "testEquivalent18",
      "expression": "@2012-04-15T15:30:31 ~ @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.132417,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent19",
      "description": "testEquivalent19",
      "expression": "name ~ name",
      "status": "passed",
      "execution_time_ms": 0.152584,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent20",
      "description": "testEquivalent20",
      "expression": "name.take(2).given ~ name.take(2).first().given | name.take(2).last().given",
      "status": "passed",
      "execution_time_ms": 0.584833,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent21",
      "description": "testEquivalent21",
      "expression": "name.take(2).given ~ name.take(2).last().given | name.take(2).first().given",
      "status": "passed",
      "execution_time_ms": 0.531667,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEquivalent22",
      "description": "testEquivalent22",
      "expression": "Observation.value ~ 185 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.167208,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testEquivalent23",
      "description": "testEquivalent23",
      "expression": "(1 | 2 | 3) ~ (1 | 2 | 3)",
      "status": "passed",
      "execution_time_ms": 0.829042,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEquivalent24",
      "description": "testEquivalent24",
      "expression": "(1 | 2 | 3) ~ (3 | 2 | 1)",
      "status": "passed",
      "execution_time_ms": 0.730625,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testEscapeHtml",
      "description": "testEscapeHtml",
      "expression": "'\"1<2\"'.escape('html')",
      "status": "error",
      "execution_time_ms": 0.224542,
      "expected": [
        "&quot;1&lt;2&quot;"
      ],
      "actual": null,
      "error": "Not implemented: escape"
    },
    {
      "name": "testEscapeJson",
      "description": "testEscapeJson",
      "expression": "'\"1<2\"'.escape('json')",
      "status": "error",
      "execution_time_ms": 0.141917,
      "expected": [
        "\\\"1<2\\\""
      ],
      "actual": null,
      "error": "Not implemented: escape"
    },
    {
      "name": "testUnescapeHtml",
      "description": "testUnescapeHtml",
      "expression": "'&quot;1&lt;2&quot;'.unescape('html')",
      "status": "error",
      "execution_time_ms": 0.175584,
      "expected": [
        "\"1<2\""
      ],
      "actual": null,
      "error": "Not implemented: unescape"
    },
    {
      "name": "testUnescapeJson",
      "description": "testUnescapeJson",
      "expression": "'\\\"1<2\\\"'.unescape('json')",
      "status": "error",
      "execution_time_ms": 0.208667,
      "expected": [
        "\"1<2\""
      ],
      "actual": null,
      "error": "Not implemented: unescape"
    },
    {
      "name": "testExclude1",
      "description": "testExclude1",
      "expression": "(1 | 2 | 3).exclude(2 | 4) = 1 | 3",
      "status": "passed",
      "execution_time_ms": 0.916875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExclude2",
      "description": "testExclude2",
      "expression": "(1 | 2).exclude(4) = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.669458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExclude3",
      "description": "testExclude3",
      "expression": "(1 | 2).exclude({}) = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.611125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExclude4",
      "description": "testExclude4",
      "expression": "1.combine(1).exclude(2).count() = 2",
      "status": "passed",
      "execution_time_ms": 2.236583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExists1",
      "description": "testExists1",
      "expression": "Patient.name.exists()",
      "status": "passed",
      "execution_time_ms": 0.156625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExists2",
      "description": "testExists2",
      "expression": "Patient.name.exists(use = 'nickname')",
      "status": "passed",
      "execution_time_ms": 0.2215,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testExists3",
      "description": "testExists3",
      "expression": "Patient.name.exists(use = 'official')",
      "status": "passed",
      "execution_time_ms": 0.16775,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExists4",
      "description": "testExists4",
      "expression": "Patient.maritalStatus.coding.exists(code = 'P' and system = 'http://terminology.hl7.org/CodeSystem/v3-MaritalStatus')\n\t\t\tor Patient.maritalStatus.coding.exists(code = 'A' and system = 'http://terminology.hl7.org/CodeSystem/v3-MaritalStatus')",
      "status": "passed",
      "execution_time_ms": 0.4645,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testExists5",
      "description": "testExists5",
      "expression": "(1 | 2).exists()",
      "status": "passed",
      "execution_time_ms": 0.330459,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExp1",
      "description": "testExp1",
      "expression": "0.exp() = 1",
      "status": "passed",
      "execution_time_ms": 0.27675,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExp2",
      "description": "testExp2",
      "expression": "(-0.0).exp() = 1",
      "status": "passed",
      "execution_time_ms": 0.27525,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExp3",
      "description": "testExp3",
      "expression": "{}.exp().empty() = true",
      "status": "passed",
      "execution_time_ms": 0.1395,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testExtension1",
      "description": "testExtension1",
      "expression": "Patient.birthDate.extension('http://hl7.org/fhir/StructureDefinition/patient-birthTime').exists()",
      "status": "passed",
      "execution_time_ms": 0.23225,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testExtension2",
      "description": "testExtension2",
      "expression": "Patient.birthDate.extension(%`ext-patient-birthTime`).exists()",
      "status": "error",
      "execution_time_ms": 0.251417,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Attempting to access an undefined environment variable: ext-patient-birthTime"
    },
    {
      "name": "testExtension3",
      "description": "testExtension3",
      "expression": "Patient.birthDate.extension('http://hl7.org/fhir/StructureDefinition/patient-birthTime1').empty()",
      "status": "passed",
      "execution_time_ms": 0.1415,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFirstLast1",
      "description": "testFirstLast1",
      "expression": "Patient.name.first().given = 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.154334,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFirstLast2",
      "description": "testFirstLast2",
      "expression": "Patient.name.last().given = 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.149791,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFloor1",
      "description": "testFloor1",
      "expression": "1.floor() = 1",
      "status": "passed",
      "execution_time_ms": 0.266,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFloor2",
      "description": "testFloor2",
      "expression": "2.1.floor() = 2",
      "status": "passed",
      "execution_time_ms": 0.226125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFloor3",
      "description": "testFloor3",
      "expression": "(-2.1).floor() = -3",
      "status": "passed",
      "execution_time_ms": 0.260167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFloorEmpty",
      "description": "testFloorEmpty",
      "expression": "{}.floor().empty()",
      "status": "passed",
      "execution_time_ms": 0.114083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "from-zulip-1",
      "description": "from-zulip-1",
      "expression": "(true and 'foo').empty()",
      "status": "passed",
      "execution_time_ms": 0.166958,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "from-zulip-2",
      "description": "from-zulip-2",
      "expression": "(true | 'foo').allTrue()",
      "status": "error",
      "execution_time_ms": 0.149375,
      "expected": [
        false
      ],
      "actual": null
    },
    {
      "name": "testGreaterThan1",
      "description": "testGreaterThan1",
      "expression": "1 > 2",
      "status": "passed",
      "execution_time_ms": 0.535584,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan2",
      "description": "testGreaterThan2",
      "expression": "1.0 > 1.2",
      "status": "passed",
      "execution_time_ms": 0.288041,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan3",
      "description": "testGreaterThan3",
      "expression": "'a' > 'b'",
      "status": "passed",
      "execution_time_ms": 0.123083,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan4",
      "description": "testGreaterThan4",
      "expression": "'A' > 'a'",
      "status": "passed",
      "execution_time_ms": 0.10725,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan5",
      "description": "testGreaterThan5",
      "expression": "@2014-12-12 > @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.216917,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan6",
      "description": "testGreaterThan6",
      "expression": "@2014-12-13T12:00:00 > @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.146708,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan7",
      "description": "testGreaterThan7",
      "expression": "@T12:00:00 > @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.644583,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan8",
      "description": "testGreaterThan8",
      "expression": "1 > 1",
      "status": "passed",
      "execution_time_ms": 0.322125,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan9",
      "description": "testGreaterThan9",
      "expression": "1.0 > 1.0",
      "status": "passed",
      "execution_time_ms": 0.340083,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan10",
      "description": "testGreaterThan10",
      "expression": "'a' > 'a'",
      "status": "passed",
      "execution_time_ms": 0.123083,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan11",
      "description": "testGreaterThan11",
      "expression": "'A' > 'A'",
      "status": "passed",
      "execution_time_ms": 0.110208,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan12",
      "description": "testGreaterThan12",
      "expression": "@2014-12-12 > @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.122167,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan13",
      "description": "testGreaterThan13",
      "expression": "@2014-12-13T12:00:00 > @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.115042,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan14",
      "description": "testGreaterThan14",
      "expression": "@T12:00:00 > @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.117916,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan15",
      "description": "testGreaterThan15",
      "expression": "2 > 1",
      "status": "passed",
      "execution_time_ms": 0.254167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan16",
      "description": "testGreaterThan16",
      "expression": "1.1 > 1.0",
      "status": "passed",
      "execution_time_ms": 0.238792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan17",
      "description": "testGreaterThan17",
      "expression": "'b' > 'a'",
      "status": "passed",
      "execution_time_ms": 0.105917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan18",
      "description": "testGreaterThan18",
      "expression": "'B' > 'A'",
      "status": "passed",
      "execution_time_ms": 0.128875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan19",
      "description": "testGreaterThan19",
      "expression": "@2014-12-13 > @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.109459,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan20",
      "description": "testGreaterThan20",
      "expression": "@2014-12-13T12:00:01 > @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.112875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan21",
      "description": "testGreaterThan21",
      "expression": "@T12:00:01 > @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.130416,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreaterThan22",
      "description": "testGreaterThan22",
      "expression": "Observation.value > 100 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.229541,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testGreaterThan23",
      "description": "testGreaterThan23",
      "expression": "@2018-03 > @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.183125,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreaterThan24",
      "description": "testGreaterThan24",
      "expression": "@2018-03-01T10:30 > @2018-03-01T10:30:00",
      "status": "passed",
      "execution_time_ms": 0.113833,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreaterThan25",
      "description": "testGreaterThan25",
      "expression": "@T10:30 > @T10:30:00",
      "status": "passed",
      "execution_time_ms": 0.135291,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreaterThan26",
      "description": "testGreaterThan26",
      "expression": "@2018-03-01T10:30:00 > @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.141417,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThan27",
      "description": "testGreaterThan27",
      "expression": "@T10:30:00 > @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.230375,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreaterThanEmpty1",
      "description": "testGreaterThanEmpty1",
      "expression": "1 > {}",
      "status": "passed",
      "execution_time_ms": 0.267958,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreaterThanEmpty2",
      "description": "testGreaterThanEmpty2",
      "expression": "{} > 1",
      "status": "passed",
      "execution_time_ms": 0.161417,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreaterThanEmpty3",
      "description": "testGreaterThanEmpty3",
      "expression": "{} > {}",
      "status": "passed",
      "execution_time_ms": 0.103084,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreatorOrEqual1",
      "description": "testGreatorOrEqual1",
      "expression": "1 >= 2",
      "status": "passed",
      "execution_time_ms": 0.558625,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual2",
      "description": "testGreatorOrEqual2",
      "expression": "1.0 >= 1.2",
      "status": "passed",
      "execution_time_ms": 0.259625,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual3",
      "description": "testGreatorOrEqual3",
      "expression": "'a' >= 'b'",
      "status": "passed",
      "execution_time_ms": 0.119584,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual4",
      "description": "testGreatorOrEqual4",
      "expression": "'A' >= 'a'",
      "status": "passed",
      "execution_time_ms": 0.102417,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual5",
      "description": "testGreatorOrEqual5",
      "expression": "@2014-12-12 >= @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.12625,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual6",
      "description": "testGreatorOrEqual6",
      "expression": "@2014-12-13T12:00:00 >= @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.260208,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual7",
      "description": "testGreatorOrEqual7",
      "expression": "@T12:00:00 >= @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.136041,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testGreatorOrEqual8",
      "description": "testGreatorOrEqual8",
      "expression": "1 >= 1",
      "status": "passed",
      "execution_time_ms": 0.32875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual9",
      "description": "testGreatorOrEqual9",
      "expression": "1.0 >= 1.0",
      "status": "passed",
      "execution_time_ms": 0.23425,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual10",
      "description": "testGreatorOrEqual10",
      "expression": "'a' >= 'a'",
      "status": "passed",
      "execution_time_ms": 0.116,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual11",
      "description": "testGreatorOrEqual11",
      "expression": "'A' >= 'A'",
      "status": "passed",
      "execution_time_ms": 0.103834,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual12",
      "description": "testGreatorOrEqual12",
      "expression": "@2014-12-12 >= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.108667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual13",
      "description": "testGreatorOrEqual13",
      "expression": "@2014-12-13T12:00:00 >= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.107208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual14",
      "description": "testGreatorOrEqual14",
      "expression": "@T12:00:00 >= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.107,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual15",
      "description": "testGreatorOrEqual15",
      "expression": "2 >= 1",
      "status": "passed",
      "execution_time_ms": 0.235,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual16",
      "description": "testGreatorOrEqual16",
      "expression": "1.1 >= 1.0",
      "status": "passed",
      "execution_time_ms": 0.2235,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual17",
      "description": "testGreatorOrEqual17",
      "expression": "'b' >= 'a'",
      "status": "passed",
      "execution_time_ms": 0.105584,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual18",
      "description": "testGreatorOrEqual18",
      "expression": "'B' >= 'A'",
      "status": "passed",
      "execution_time_ms": 0.098833,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual19",
      "description": "testGreatorOrEqual19",
      "expression": "@2014-12-13 >= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.111709,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual20",
      "description": "testGreatorOrEqual20",
      "expression": "@2014-12-13T12:00:01 >= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.103958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual21",
      "description": "testGreatorOrEqual21",
      "expression": "@T12:00:01 >= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.131792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual22",
      "description": "testGreatorOrEqual22",
      "expression": "Observation.value >= 100 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.247791,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testGreatorOrEqual23",
      "description": "testGreatorOrEqual23",
      "expression": "@2018-03 >= @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.12025,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreatorOrEqual24",
      "description": "testGreatorOrEqual24",
      "expression": "@2018-03-01T10:30 >= @2018-03-01T10:30:00",
      "status": "passed",
      "execution_time_ms": 0.10925,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreatorOrEqual25",
      "description": "testGreatorOrEqual25",
      "expression": "@T10:30 >= @T10:30:00",
      "status": "passed",
      "execution_time_ms": 0.1175,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreatorOrEqual26",
      "description": "testGreatorOrEqual26",
      "expression": "@2018-03-01T10:30:00 >= @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.1235,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqual27",
      "description": "testGreatorOrEqual27",
      "expression": "@T10:30:00 >= @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.109459,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testGreatorOrEqualEmpty1",
      "description": "testGreatorOrEqualEmpty1",
      "expression": "1 >= {}",
      "status": "passed",
      "execution_time_ms": 0.21475,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreatorOrEqualEmpty2",
      "description": "testGreatorOrEqualEmpty2",
      "expression": "{} >= 1",
      "status": "passed",
      "execution_time_ms": 0.153583,
      "expected": [],
      "actual": []
    },
    {
      "name": "testGreatorOrEqualEmpty3",
      "description": "testGreatorOrEqualEmpty3",
      "expression": "{} >= {}",
      "status": "passed",
      "execution_time_ms": 0.101584,
      "expected": [],
      "actual": []
    },
    {
      "name": "HighBoundaryDecimalDefault",
      "description": "HighBoundaryDecimalDefault",
      "expression": "1.587.highBoundary()",
      "status": "error",
      "execution_time_ms": 0.285833,
      "expected": [
        1.5875
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal1",
      "description": "HighBoundaryDecimal1",
      "expression": "1.587.highBoundary(2)",
      "status": "error",
      "execution_time_ms": 0.280208,
      "expected": [
        1.59
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal2",
      "description": "HighBoundaryDecimal2",
      "expression": "1.587.highBoundary(6)",
      "status": "error",
      "execution_time_ms": 0.28725,
      "expected": [
        1.5875
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal3",
      "description": "HighBoundaryDecimal3",
      "expression": "1.587.highBoundary(-1)",
      "status": "error",
      "execution_time_ms": 0.281542,
      "expected": [],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal4",
      "description": "HighBoundaryDecimal4",
      "expression": "(-1.587).highBoundary()",
      "status": "error",
      "execution_time_ms": 0.212833,
      "expected": [
        -1.5865
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal5",
      "description": "HighBoundaryDecimal5",
      "expression": "(-1.587).highBoundary(2)",
      "status": "error",
      "execution_time_ms": 0.298333,
      "expected": [
        -1.58
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal6",
      "description": "HighBoundaryDecimal6",
      "expression": "(-1.587).highBoundary(6)",
      "status": "error",
      "execution_time_ms": 0.430167,
      "expected": [
        -1.5865
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal7",
      "description": "HighBoundaryDecimal7",
      "expression": "1.587.highBoundary(39)",
      "status": "error",
      "execution_time_ms": 0.372667,
      "expected": [],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal8",
      "description": "HighBoundaryDecimal8",
      "expression": "1.highBoundary()",
      "status": "error",
      "execution_time_ms": 0.235625,
      "expected": [
        1.5
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal9",
      "description": "HighBoundaryDecimal9",
      "expression": "1.highBoundary(0)",
      "status": "error",
      "execution_time_ms": 0.3295,
      "expected": [
        2
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal10",
      "description": "HighBoundaryDecimal10",
      "expression": "1.highBoundary(5)",
      "status": "error",
      "execution_time_ms": 0.289709,
      "expected": [
        1.5
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal11",
      "description": "HighBoundaryDecimal11",
      "expression": "12.587.highBoundary(2)",
      "status": "error",
      "execution_time_ms": 0.380875,
      "expected": [
        12.59
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal12",
      "description": "HighBoundaryDecimal12",
      "expression": "12.500.highBoundary(4)",
      "status": "error",
      "execution_time_ms": 0.314125,
      "expected": [
        12.5005
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal13",
      "description": "HighBoundaryDecimal13",
      "expression": "120.highBoundary(2)",
      "status": "error",
      "execution_time_ms": 0.285666,
      "expected": [
        120.5
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal14",
      "description": "HighBoundaryDecimal14",
      "expression": "-120.highBoundary(2)",
      "status": "error",
      "execution_time_ms": 0.342542,
      "expected": [
        -120.5
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal15",
      "description": "HighBoundaryDecimal15",
      "expression": "0.0034.highBoundary(1)",
      "status": "error",
      "execution_time_ms": 0.291208,
      "expected": [
        0
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal16",
      "description": "HighBoundaryDecimal16",
      "expression": "-0.0034.highBoundary(1)",
      "status": "error",
      "execution_time_ms": 0.270625,
      "expected": [
        0
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDecimal",
      "description": "HighBoundaryDecimal",
      "expression": "1.587.highBoundary(8)",
      "status": "error",
      "execution_time_ms": 2.018,
      "expected": [
        1.5875
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryQuantity",
      "description": "HighBoundaryQuantity",
      "expression": "1.587 'm'.highBoundary(8)",
      "status": "error",
      "execution_time_ms": 0.272125,
      "expected": [
        "1.58750000 'm'"
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDateMonth",
      "description": "HighBoundaryDateMonth",
      "expression": "@2014.highBoundary(6)",
      "status": "error",
      "execution_time_ms": 0.209542,
      "expected": [
        "@2014-12"
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDateTimeMillisecond1",
      "description": "HighBoundaryDateTimeMillisecond1",
      "expression": "@2014-01-01T08.highBoundary(17)",
      "status": "error",
      "execution_time_ms": 0.234208,
      "expected": [
        "@2014-01-01T08:00:59.999-12:00"
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDateTimeMillisecond2",
      "description": "HighBoundaryDateTimeMillisecond2",
      "expression": "@2014-01-01T08:05-05:00.highBoundary(17)",
      "status": "error",
      "execution_time_ms": 0.215917,
      "expected": [
        "@2014-01-01T08:05:59.999-05:00"
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryDateTimeMillisecond3",
      "description": "HighBoundaryDateTimeMillisecond3",
      "expression": "@2014-01-01T08.highBoundary(17)",
      "status": "error",
      "execution_time_ms": 0.195375,
      "expected": [
        "@2014-01-01T08:00:59.999-12:00"
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "HighBoundaryTimeMillisecond",
      "description": "HighBoundaryTimeMillisecond",
      "expression": "@T10:30.highBoundary(9)",
      "status": "error",
      "execution_time_ms": 0.207584,
      "expected": [
        "@T10:30:59.999"
      ],
      "actual": null,
      "error": "Not implemented: highBoundary"
    },
    {
      "name": "testIif1",
      "description": "testIif1",
      "expression": "iif(Patient.name.exists(), 'named', 'unnamed') = 'named'",
      "status": "passed",
      "execution_time_ms": 0.198958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIif2",
      "description": "testIif2",
      "expression": "iif(Patient.name.empty(), 'unnamed', 'named') = 'named'",
      "status": "passed",
      "execution_time_ms": 0.15725,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIif3",
      "description": "testIif3",
      "expression": "iif(true, true, (1 | 2).toString())",
      "status": "passed",
      "execution_time_ms": 0.391333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIif4",
      "description": "testIif4",
      "expression": "iif(false, (1 | 2).toString(), true)",
      "status": "passed",
      "execution_time_ms": 0.324583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIif5",
      "description": "testIif5",
      "expression": "iif(false, 'true-result').empty()",
      "status": "passed",
      "execution_time_ms": 0.128458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIif6",
      "description": "testIif6",
      "expression": "iif('non boolean criteria', 'true-result', 'true-result')",
      "status": "passed",
      "execution_time_ms": 0.155458,
      "expected": [],
      "actual": [
        "true-result"
      ]
    },
    {
      "name": "testIif7",
      "description": "testIif7",
      "expression": "{}.iif(true, 'true-result', 'false-result')",
      "status": "passed",
      "execution_time_ms": 0.138833,
      "expected": [
        "true-result"
      ],
      "actual": [
        "true-result"
      ]
    },
    {
      "name": "testIif8",
      "description": "testIif8",
      "expression": "('item').iif(true, 'true-result', 'false-result')",
      "status": "passed",
      "execution_time_ms": 0.12925,
      "expected": [
        "true-result"
      ],
      "actual": [
        "true-result"
      ]
    },
    {
      "name": "testIif9",
      "description": "testIif9",
      "expression": "('context').iif(true, select($this), 'false-result')",
      "status": "passed",
      "execution_time_ms": 0.163458,
      "expected": [
        "context"
      ],
      "actual": [
        "context"
      ]
    },
    {
      "name": "testIif10",
      "description": "testIif10",
      "expression": "('item1' | 'item2').iif(true, 'true-result', 'false-result')",
      "status": "passed",
      "execution_time_ms": 0.151791,
      "expected": [],
      "actual": [
        "true-result"
      ]
    },
    {
      "name": "testIif11",
      "description": "testIif11",
      "expression": "('context').iif($this = 'context','true-result', 'false-result')",
      "status": "passed",
      "execution_time_ms": 0.159208,
      "expected": [
        "true-result"
      ],
      "actual": [
        "true-result"
      ]
    },
    {
      "name": "testIn1",
      "description": "testIn1",
      "expression": "1 in (1 | 2 | 3)",
      "status": "passed",
      "execution_time_ms": 0.825875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIn2",
      "description": "testIn2",
      "expression": "1 in (2 | 3)",
      "status": "passed",
      "execution_time_ms": 0.427875,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testIn3",
      "description": "testIn3",
      "expression": "'a' in ('a' | 'c' | 'd')",
      "status": "passed",
      "execution_time_ms": 0.169375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIn4",
      "description": "testIn4",
      "expression": "'b' in ('a' | 'c' | 'd')",
      "status": "passed",
      "execution_time_ms": 0.131833,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testIn5",
      "description": "testIn5",
      "expression": "('a' | 'c' | 'd') in 'b'",
      "status": "error",
      "execution_time_ms": 0.246792,
      "expected": [],
      "actual": null,
      "error": "Expected singleton on right side of in, got [\"b\"]"
    },
    {
      "name": "testInEmptyCollection",
      "description": "testInEmptyCollection",
      "expression": "1 in {}",
      "status": "passed",
      "execution_time_ms": 0.268625,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testInEmptyValue",
      "description": "testInEmptyValue",
      "expression": "{} in (1 | 2 | 3)",
      "status": "passed",
      "execution_time_ms": 0.59875,
      "expected": [],
      "actual": []
    },
    {
      "name": "testInEmptyBoth",
      "description": "testInEmptyBoth",
      "expression": "{} in {}",
      "status": "passed",
      "execution_time_ms": 0.16175,
      "expected": [],
      "actual": []
    },
    {
      "name": "testIndexOf1",
      "description": "testIndexOf1",
      "expression": "'LogicalModel-Person'.indexOf('-')",
      "status": "passed",
      "execution_time_ms": 0.28375,
      "expected": [
        12
      ],
      "actual": [
        12
      ]
    },
    {
      "name": "testIndexOf2",
      "description": "testIndexOf2",
      "expression": "'LogicalModel-Person'.indexOf('z')",
      "status": "passed",
      "execution_time_ms": 0.134583,
      "expected": [
        -1
      ],
      "actual": [
        -1
      ]
    },
    {
      "name": "testIndexOf3",
      "description": "testIndexOf3",
      "expression": "'LogicalModel-Person'.indexOf('')",
      "status": "passed",
      "execution_time_ms": 0.25725,
      "expected": [
        0
      ],
      "actual": [
        0
      ]
    },
    {
      "name": "testIndexOf5",
      "description": "testIndexOf5",
      "expression": "'LogicalModel-Person'.indexOf({}).empty() = true",
      "status": "passed",
      "execution_time_ms": 0.22575,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIndexOf4",
      "description": "testIndexOf4",
      "expression": "{}.indexOf('-').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.166917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIndexOf6",
      "description": "testIndexOf6",
      "expression": "{}.indexOf({}).empty() = true",
      "status": "passed",
      "execution_time_ms": 0.16225,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIndex",
      "description": "testIndex",
      "expression": "Patient.telecom.select(iif(value='(03) 3410 5613', $index, {} ))",
      "status": "passed",
      "execution_time_ms": 0.463416,
      "expected": [
        2
      ],
      "actual": [
        2
      ]
    },
    {
      "name": "testIndexer1",
      "description": "testIndexer1",
      "expression": "Patient.name[0].given = 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.808541,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIndexer2",
      "description": "testIndexer2",
      "expression": "Patient.name[1].given = 'Jim'",
      "status": "passed",
      "execution_time_ms": 0.223125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFHIRPathIsFunction1",
      "description": "testFHIRPathIsFunction1",
      "expression": "Patient.gender.is(code)",
      "status": "error",
      "execution_time_ms": 0.309833,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathIsFunction2",
      "description": "testFHIRPathIsFunction2",
      "expression": "Patient.gender.is(string)",
      "status": "error",
      "execution_time_ms": 0.153292,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathIsFunction3",
      "description": "testFHIRPathIsFunction3",
      "expression": "Patient.gender.is(id)",
      "status": "error",
      "execution_time_ms": 0.137334,
      "expected": [
        false
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathIsFunction4",
      "description": "testFHIRPathIsFunction4",
      "expression": "Questionnaire.url.is(uri)",
      "status": "error",
      "execution_time_ms": 0.133458,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathIsFunction5",
      "description": "testFHIRPathIsFunction5",
      "expression": "Questionnaire.url.is(url)",
      "status": "error",
      "execution_time_ms": 0.1315,
      "expected": [
        false
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathIsFunction6",
      "description": "testFHIRPathIsFunction6",
      "expression": "ValueSet.version.is(string)",
      "status": "error",
      "execution_time_ms": 0.147833,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathIsFunction7",
      "description": "testFHIRPathIsFunction7",
      "expression": "ValueSet.version.is(code)",
      "status": "error",
      "execution_time_ms": 0.130583,
      "expected": [
        false
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathIsFunction8",
      "description": "testFHIRPathIsFunction8",
      "expression": "Observation.extension('http://example.com/fhir/StructureDefinition/patient-age').value is Age",
      "status": "error",
      "execution_time_ms": 0.443791,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathIsFunction9",
      "description": "testFHIRPathIsFunction9",
      "expression": "Observation.extension('http://example.com/fhir/StructureDefinition/patient-age').value is Quantity",
      "status": "passed",
      "execution_time_ms": 0.158417,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testFHIRPathIsFunction10",
      "description": "testFHIRPathIsFunction10",
      "expression": "Observation.extension('http://example.com/fhir/StructureDefinition/patient-age').value is Duration",
      "status": "error",
      "execution_time_ms": 0.166917,
      "expected": [
        false
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction11",
      "description": "testFHIRPathAsFunction11",
      "expression": "Patient.gender.as(string)",
      "status": "error",
      "execution_time_ms": 0.2515,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction12",
      "description": "testFHIRPathAsFunction12",
      "expression": "Patient.gender.as(code)",
      "status": "error",
      "execution_time_ms": 0.135583,
      "expected": [
        "male"
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction13",
      "description": "testFHIRPathAsFunction13",
      "expression": "Patient.gender.as(id)",
      "status": "error",
      "execution_time_ms": 1.821042,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction14",
      "description": "testFHIRPathAsFunction14",
      "expression": "ValueSet.version.as(string)",
      "status": "error",
      "execution_time_ms": 0.190167,
      "expected": [
        "20150622"
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction15",
      "description": "testFHIRPathAsFunction15",
      "expression": "ValueSet.version.as(code)",
      "status": "error",
      "execution_time_ms": 0.142542,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction16",
      "description": "testFHIRPathAsFunction16",
      "expression": "Patient.gender.ofType(string)",
      "status": "error",
      "execution_time_ms": 0.162959,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction17",
      "description": "testFHIRPathAsFunction17",
      "expression": "Patient.gender.ofType(code)",
      "status": "error",
      "execution_time_ms": 0.136584,
      "expected": [
        "male"
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction18",
      "description": "testFHIRPathAsFunction18",
      "expression": "Patient.gender.ofType(id)",
      "status": "error",
      "execution_time_ms": 0.166875,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction19",
      "description": "testFHIRPathAsFunction19",
      "expression": "ValueSet.version.ofType(string)",
      "status": "error",
      "execution_time_ms": 0.128083,
      "expected": [
        "20150622"
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction20",
      "description": "testFHIRPathAsFunction20",
      "expression": "ValueSet.version.ofType(code)",
      "status": "error",
      "execution_time_ms": 0.129208,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction21",
      "description": "testFHIRPathAsFunction21",
      "expression": "Patient.name.as(HumanName).use",
      "status": "error",
      "execution_time_ms": 0.155875,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction22",
      "description": "testFHIRPathAsFunction22",
      "expression": "Patient.name.ofType(HumanName).use",
      "status": "error",
      "execution_time_ms": 0.138417,
      "expected": [
        "official",
        "usual",
        "maiden"
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction23",
      "description": "testFHIRPathAsFunction23",
      "expression": "Patient.gender.as(string1)",
      "status": "error",
      "execution_time_ms": 0.131,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testFHIRPathAsFunction24",
      "description": "testFHIRPathAsFunction24",
      "expression": "Patient.gender.ofType(string1)",
      "status": "error",
      "execution_time_ms": 0.130667,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testIntersect1",
      "description": "testIntersect1",
      "expression": "(1 | 2 | 3).intersect(2 | 4) = 2",
      "status": "passed",
      "execution_time_ms": 0.79125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntersect2",
      "description": "testIntersect2",
      "expression": "(1 | 2).intersect(4).empty()",
      "status": "passed",
      "execution_time_ms": 0.422167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntersect3",
      "description": "testIntersect3",
      "expression": "(1 | 2).intersect({}).empty()",
      "status": "passed",
      "execution_time_ms": 0.357458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntersect4",
      "description": "testIntersect4",
      "expression": "1.combine(1).intersect(1).count() = 1",
      "status": "passed",
      "execution_time_ms": 0.439708,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testJoin",
      "description": "testJoin",
      "expression": "name.given.join(',')",
      "status": "passed",
      "execution_time_ms": 0.165083,
      "expected": [
        "Peter,James,Jim,Peter,James"
      ],
      "actual": [
        "Peter,James,Jim,Peter,James"
      ]
    },
    {
      "name": "testLength1",
      "description": "testLength1",
      "expression": "'123456'.length() = 6",
      "status": "passed",
      "execution_time_ms": 0.186833,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLength2",
      "description": "testLength2",
      "expression": "'12345'.length() = 5",
      "status": "passed",
      "execution_time_ms": 0.171166,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLength3",
      "description": "testLength3",
      "expression": "'123'.length() = 3",
      "status": "passed",
      "execution_time_ms": 0.164417,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLength4",
      "description": "testLength4",
      "expression": "'1'.length() = 1",
      "status": "passed",
      "execution_time_ms": 0.295209,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLength5",
      "description": "testLength5",
      "expression": "''.length() = 0",
      "status": "passed",
      "execution_time_ms": 0.164792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLength6",
      "description": "testLength6",
      "expression": "{}.length().empty() = true",
      "status": "passed",
      "execution_time_ms": 0.137583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual1",
      "description": "testLessOrEqual1",
      "expression": "1 <= 2",
      "status": "passed",
      "execution_time_ms": 0.528,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual2",
      "description": "testLessOrEqual2",
      "expression": "1.0 <= 1.2",
      "status": "passed",
      "execution_time_ms": 0.23025,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual3",
      "description": "testLessOrEqual3",
      "expression": "'a' <= 'b'",
      "status": "passed",
      "execution_time_ms": 0.108125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual4",
      "description": "testLessOrEqual4",
      "expression": "'A' <= 'a'",
      "status": "passed",
      "execution_time_ms": 0.100209,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual5",
      "description": "testLessOrEqual5",
      "expression": "@2014-12-12 <= @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.131333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual6",
      "description": "testLessOrEqual6",
      "expression": "@2014-12-13T12:00:00 <= @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.117292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual7",
      "description": "testLessOrEqual7",
      "expression": "@T12:00:00 <= @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.128625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual8",
      "description": "testLessOrEqual8",
      "expression": "1 <= 1",
      "status": "passed",
      "execution_time_ms": 0.233792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual9",
      "description": "testLessOrEqual9",
      "expression": "1.0 <= 1.0",
      "status": "passed",
      "execution_time_ms": 0.22125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual10",
      "description": "testLessOrEqual10",
      "expression": "'a' <= 'a'",
      "status": "passed",
      "execution_time_ms": 0.110209,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual11",
      "description": "testLessOrEqual11",
      "expression": "'A' <= 'A'",
      "status": "passed",
      "execution_time_ms": 0.112583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual12",
      "description": "testLessOrEqual12",
      "expression": "@2014-12-12 <= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.113958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual13",
      "description": "testLessOrEqual13",
      "expression": "@2014-12-13T12:00:00 <= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.107959,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual14",
      "description": "testLessOrEqual14",
      "expression": "@T12:00:00 <= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.107167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual15",
      "description": "testLessOrEqual15",
      "expression": "2 <= 1",
      "status": "passed",
      "execution_time_ms": 0.22625,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual16",
      "description": "testLessOrEqual16",
      "expression": "1.1 <= 1.0",
      "status": "passed",
      "execution_time_ms": 0.221708,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual17",
      "description": "testLessOrEqual17",
      "expression": "'b' <= 'a'",
      "status": "passed",
      "execution_time_ms": 0.098708,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual18",
      "description": "testLessOrEqual18",
      "expression": "'B' <= 'A'",
      "status": "passed",
      "execution_time_ms": 0.098916,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual19",
      "description": "testLessOrEqual19",
      "expression": "@2014-12-13 <= @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.102416,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual20",
      "description": "testLessOrEqual20",
      "expression": "@2014-12-13T12:00:01 <= @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.10425,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual21",
      "description": "testLessOrEqual21",
      "expression": "@T12:00:01 <= @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.161958,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessOrEqual22",
      "description": "testLessOrEqual22",
      "expression": "Observation.value <= 200 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.188833,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testLessOrEqual23",
      "description": "testLessOrEqual23",
      "expression": "@2018-03 <= @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.120125,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessOrEqual24",
      "description": "testLessOrEqual24",
      "expression": "@2018-03-01T10:30 <= @2018-03-01T10:30:00",
      "status": "passed",
      "execution_time_ms": 0.115375,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessOrEqual25",
      "description": "testLessOrEqual25",
      "expression": "@T10:30 <= @T10:30:00",
      "status": "passed",
      "execution_time_ms": 0.11075,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessOrEqual26",
      "description": "testLessOrEqual26",
      "expression": "@2018-03-01T10:30:00  <= @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.111167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqual27",
      "description": "testLessOrEqual27",
      "expression": "@T10:30:00 <= @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 1.955292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessOrEqualEmpty1",
      "description": "testLessOrEqualEmpty1",
      "expression": "1 <= {}",
      "status": "passed",
      "execution_time_ms": 0.393417,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessOrEqualEmpty2",
      "description": "testLessOrEqualEmpty2",
      "expression": "{} <= 1",
      "status": "passed",
      "execution_time_ms": 0.163375,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessOrEqualEmpty3",
      "description": "testLessOrEqualEmpty3",
      "expression": "{} <= {}",
      "status": "passed",
      "execution_time_ms": 0.105084,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessThan1",
      "description": "testLessThan1",
      "expression": "1 < 2",
      "status": "passed",
      "execution_time_ms": 0.452416,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan2",
      "description": "testLessThan2",
      "expression": "1.0 < 1.2",
      "status": "passed",
      "execution_time_ms": 0.226833,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan3",
      "description": "testLessThan3",
      "expression": "'a' < 'b'",
      "status": "passed",
      "execution_time_ms": 0.108666,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan4",
      "description": "testLessThan4",
      "expression": "'A' < 'a'",
      "status": "passed",
      "execution_time_ms": 0.099875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan5",
      "description": "testLessThan5",
      "expression": "@2014-12-12 < @2014-12-13",
      "status": "passed",
      "execution_time_ms": 0.123333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan6",
      "description": "testLessThan6",
      "expression": "@2014-12-13T12:00:00 < @2014-12-13T12:00:01",
      "status": "passed",
      "execution_time_ms": 0.1195,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan7",
      "description": "testLessThan7",
      "expression": "@T12:00:00 < @T14:00:00",
      "status": "passed",
      "execution_time_ms": 0.111834,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLessThan8",
      "description": "testLessThan8",
      "expression": "1 < 1",
      "status": "passed",
      "execution_time_ms": 0.227875,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan9",
      "description": "testLessThan9",
      "expression": "1.0 < 1.0",
      "status": "passed",
      "execution_time_ms": 0.218916,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan10",
      "description": "testLessThan10",
      "expression": "'a' < 'a'",
      "status": "passed",
      "execution_time_ms": 0.098084,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan11",
      "description": "testLessThan11",
      "expression": "'A' < 'A'",
      "status": "passed",
      "execution_time_ms": 0.098917,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan12",
      "description": "testLessThan12",
      "expression": "@2014-12-12 < @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.099917,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan13",
      "description": "testLessThan13",
      "expression": "@2014-12-13T12:00:00 < @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.106166,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan14",
      "description": "testLessThan14",
      "expression": "@T12:00:00 < @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.100333,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan15",
      "description": "testLessThan15",
      "expression": "2 < 1",
      "status": "passed",
      "execution_time_ms": 0.229875,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan16",
      "description": "testLessThan16",
      "expression": "1.1 < 1.0",
      "status": "passed",
      "execution_time_ms": 0.214625,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan17",
      "description": "testLessThan17",
      "expression": "'b' < 'a'",
      "status": "passed",
      "execution_time_ms": 0.099167,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan18",
      "description": "testLessThan18",
      "expression": "'B' < 'A'",
      "status": "passed",
      "execution_time_ms": 0.098667,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan19",
      "description": "testLessThan19",
      "expression": "@2014-12-13 < @2014-12-12",
      "status": "passed",
      "execution_time_ms": 0.101917,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan20",
      "description": "testLessThan20",
      "expression": "@2014-12-13T12:00:01 < @2014-12-13T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.1035,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan21",
      "description": "testLessThan21",
      "expression": "@T12:00:01 < @T12:00:00",
      "status": "passed",
      "execution_time_ms": 0.10075,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan22",
      "description": "testLessThan22",
      "expression": "Observation.value < 200 '[lb_av]'",
      "status": "passed",
      "execution_time_ms": 0.160167,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testLessThan23",
      "description": "testLessThan23",
      "expression": "@2018-03 < @2018-03-01",
      "status": "passed",
      "execution_time_ms": 0.10475,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessThan24",
      "description": "testLessThan24",
      "expression": "@2018-03-01T10:30 < @2018-03-01T10:30:00",
      "status": "passed",
      "execution_time_ms": 0.101958,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessThan25",
      "description": "testLessThan25",
      "expression": "@T10:30 < @T10:30:00",
      "status": "passed",
      "execution_time_ms": 0.10375,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessThan26",
      "description": "testLessThan26",
      "expression": "@2018-03-01T10:30:00 < @2018-03-01T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.102291,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThan27",
      "description": "testLessThan27",
      "expression": "@T10:30:00 < @T10:30:00.0",
      "status": "passed",
      "execution_time_ms": 0.100917,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLessThanEmpty1",
      "description": "testLessThanEmpty1",
      "expression": "1 < {}",
      "status": "passed",
      "execution_time_ms": 0.184709,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessThanEmpty2",
      "description": "testLessThanEmpty2",
      "expression": "{} < 1",
      "status": "passed",
      "execution_time_ms": 0.141833,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLessThanEmpty3",
      "description": "testLessThanEmpty3",
      "expression": "{} < {}",
      "status": "passed",
      "execution_time_ms": 0.096916,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLiteralTrue",
      "description": "testLiteralTrue",
      "expression": "Patient.name.exists() = true",
      "status": "passed",
      "execution_time_ms": 0.143542,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralFalse",
      "description": "testLiteralFalse",
      "expression": "Patient.name.empty() = false",
      "status": "passed",
      "execution_time_ms": 0.12275,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralString1",
      "description": "testLiteralString1",
      "expression": "Patient.name.given.first() = 'Peter'",
      "status": "passed",
      "execution_time_ms": 0.133167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralInteger1",
      "description": "testLiteralInteger1",
      "expression": "1.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.235459,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralInteger0",
      "description": "testLiteralInteger0",
      "expression": "0.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.16575,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerNegative1",
      "description": "testLiteralIntegerNegative1",
      "expression": "(-1).convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.197916,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerNegative1Invalid",
      "description": "testLiteralIntegerNegative1Invalid",
      "expression": "-1.convertsToInteger()",
      "status": "error",
      "execution_time_ms": 0.201667,
      "expected": [],
      "actual": null,
      "error": "Unary - can only be applied to a number or Quantity."
    },
    {
      "name": "testLiteralIntegerMax",
      "description": "testLiteralIntegerMax",
      "expression": "2147483647.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.182291,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralString2",
      "description": "testLiteralString2",
      "expression": "'test'.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.103916,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralStringEscapes",
      "description": "testLiteralStringEscapes",
      "expression": "'\\\\\\/\\f\\r\\n\\t\\\"\\`\\'\\u002a'.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.336375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralBooleanTrue",
      "description": "testLiteralBooleanTrue",
      "expression": "true.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.123,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralBooleanFalse",
      "description": "testLiteralBooleanFalse",
      "expression": "false.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.101209,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimal10",
      "description": "testLiteralDecimal10",
      "expression": "1.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.177667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimal01",
      "description": "testLiteralDecimal01",
      "expression": "0.1.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.157959,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimal00",
      "description": "testLiteralDecimal00",
      "expression": "0.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.150916,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalNegative01",
      "description": "testLiteralDecimalNegative01",
      "expression": "(-0.1).convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.184875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalNegative01Invalid",
      "description": "testLiteralDecimalNegative01Invalid",
      "expression": "-0.1.convertsToDecimal()",
      "status": "error",
      "execution_time_ms": 0.180542,
      "expected": [],
      "actual": null,
      "error": "Unary - can only be applied to a number or Quantity."
    },
    {
      "name": "testLiteralDecimalMax",
      "description": "testLiteralDecimalMax",
      "expression": "1234567890987654321.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.158083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalStep",
      "description": "testLiteralDecimalStep",
      "expression": "0.00000001.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.219625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateYear",
      "description": "testLiteralDateYear",
      "expression": "@2015.is(Date)",
      "status": "passed",
      "execution_time_ms": 1.867042,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLiteralDateMonth",
      "description": "testLiteralDateMonth",
      "expression": "@2015-02.is(Date)",
      "status": "passed",
      "execution_time_ms": 0.206417,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLiteralDateDay",
      "description": "testLiteralDateDay",
      "expression": "@2015-02-04.is(Date)",
      "status": "passed",
      "execution_time_ms": 0.162583,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLiteralDateTimeYear",
      "description": "testLiteralDateTimeYear",
      "expression": "@2015T.is(DateTime)",
      "status": "error",
      "execution_time_ms": 0.308959,
      "expected": [
        true
      ],
      "actual": null,
      "error": "line: 1; column: 5; message: mismatched input 'T' expecting <EOF>"
    },
    {
      "name": "testLiteralDateTimeMonth",
      "description": "testLiteralDateTimeMonth",
      "expression": "@2015-02T.is(DateTime)",
      "status": "error",
      "execution_time_ms": 0.248459,
      "expected": [
        true
      ],
      "actual": null,
      "error": "line: 1; column: 8; message: mismatched input 'T' expecting <EOF>"
    },
    {
      "name": "testLiteralDateTimeDay",
      "description": "testLiteralDateTimeDay",
      "expression": "@2015-02-04T.is(DateTime)",
      "status": "error",
      "execution_time_ms": 0.17425,
      "expected": [
        true
      ],
      "actual": null,
      "error": "line: 1; column: 11; message: mismatched input 'T' expecting <EOF>"
    },
    {
      "name": "testLiteralDateTimeHour",
      "description": "testLiteralDateTimeHour",
      "expression": "@2015-02-04T14.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.167042,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeMinute",
      "description": "testLiteralDateTimeMinute",
      "expression": "@2015-02-04T14:34.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.148125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeSecond",
      "description": "testLiteralDateTimeSecond",
      "expression": "@2015-02-04T14:34:28.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.1465,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeMillisecond",
      "description": "testLiteralDateTimeMillisecond",
      "expression": "@2015-02-04T14:34:28.123.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.151458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeUTC",
      "description": "testLiteralDateTimeUTC",
      "expression": "@2015-02-04T14:34:28Z.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.175417,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeTimezoneOffset",
      "description": "testLiteralDateTimeTimezoneOffset",
      "expression": "@2015-02-04T14:34:28+10:00.is(DateTime)",
      "status": "passed",
      "execution_time_ms": 0.140958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralTimeHour",
      "description": "testLiteralTimeHour",
      "expression": "@T14.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.139,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralTimeMinute",
      "description": "testLiteralTimeMinute",
      "expression": "@T14:34.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.138417,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralTimeSecond",
      "description": "testLiteralTimeSecond",
      "expression": "@T14:34:28.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.137875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralTimeMillisecond",
      "description": "testLiteralTimeMillisecond",
      "expression": "@T14:34:28.123.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.182125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralTimeUTC",
      "description": "testLiteralTimeUTC",
      "expression": "@T14:34:28Z.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.155334,
      "expected": [],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralTimeTimezoneOffset",
      "description": "testLiteralTimeTimezoneOffset",
      "expression": "@T14:34:28+10:00.is(Time)",
      "status": "passed",
      "execution_time_ms": 0.219042,
      "expected": [],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralQuantityDecimal",
      "description": "testLiteralQuantityDecimal",
      "expression": "10.1 'mg'.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.215375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralQuantityInteger",
      "description": "testLiteralQuantityInteger",
      "expression": "10 'mg'.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.127208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralQuantityDay",
      "description": "testLiteralQuantityDay",
      "expression": "4 days.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.312042,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerNotEqual",
      "description": "testLiteralIntegerNotEqual",
      "expression": "-3 != 3",
      "status": "passed",
      "execution_time_ms": 0.533792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerEqual",
      "description": "testLiteralIntegerEqual",
      "expression": "Patient.name.given.count() = 5",
      "status": "passed",
      "execution_time_ms": 0.209166,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPolarityPrecedence",
      "description": "testPolarityPrecedence",
      "expression": "-Patient.name.given.count() = -5",
      "status": "passed",
      "execution_time_ms": 0.217875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerGreaterThan",
      "description": "testLiteralIntegerGreaterThan",
      "expression": "Patient.name.given.count() > -3",
      "status": "passed",
      "execution_time_ms": 0.217334,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerCountNotEqual",
      "description": "testLiteralIntegerCountNotEqual",
      "expression": "Patient.name.given.count() != 0",
      "status": "passed",
      "execution_time_ms": 0.198542,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerLessThanTrue",
      "description": "testLiteralIntegerLessThanTrue",
      "expression": "1 < 2",
      "status": "passed",
      "execution_time_ms": 0.272167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerLessThanFalse",
      "description": "testLiteralIntegerLessThanFalse",
      "expression": "1 < -2",
      "status": "passed",
      "execution_time_ms": 0.240125,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLiteralIntegerLessThanPolarityTrue",
      "description": "testLiteralIntegerLessThanPolarityTrue",
      "expression": "+1 < +2",
      "status": "passed",
      "execution_time_ms": 0.252041,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralIntegerLessThanPolarityFalse",
      "description": "testLiteralIntegerLessThanPolarityFalse",
      "expression": "-1 < 2",
      "status": "passed",
      "execution_time_ms": 0.238291,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDecimalGreaterThanNonZeroTrue",
      "description": "testLiteralDecimalGreaterThanNonZeroTrue",
      "expression": "Observation.value.value > 180.0",
      "status": "passed",
      "execution_time_ms": 0.187291,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testLiteralDecimalGreaterThanZeroTrue",
      "description": "testLiteralDecimalGreaterThanZeroTrue",
      "expression": "Observation.value.value > 0.0",
      "status": "passed",
      "execution_time_ms": 0.176875,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testLiteralDecimalGreaterThanIntegerTrue",
      "description": "testLiteralDecimalGreaterThanIntegerTrue",
      "expression": "Observation.value.value > 0",
      "status": "passed",
      "execution_time_ms": 0.172708,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testLiteralDecimalLessThanInteger",
      "description": "testLiteralDecimalLessThanInteger",
      "expression": "Observation.value.value < 190",
      "status": "passed",
      "execution_time_ms": 0.170292,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testLiteralDecimalLessThanInvalid",
      "description": "testLiteralDecimalLessThanInvalid",
      "expression": "Observation.value.value < 'test'",
      "status": "passed",
      "execution_time_ms": 0.131166,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDateEqual",
      "description": "testDateEqual",
      "expression": "Patient.birthDate = @1974-12-25",
      "status": "passed",
      "execution_time_ms": 0.152084,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testDateNotEqual",
      "description": "testDateNotEqual",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00",
      "status": "passed",
      "execution_time_ms": 0.132625,
      "expected": [],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateNotEqualTimezoneOffsetBefore",
      "description": "testDateNotEqualTimezoneOffsetBefore",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00-10:00",
      "status": "passed",
      "execution_time_ms": 0.128666,
      "expected": [],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateNotEqualTimezoneOffsetAfter",
      "description": "testDateNotEqualTimezoneOffsetAfter",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00+10:00",
      "status": "passed",
      "execution_time_ms": 0.118834,
      "expected": [],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateNotEqualUTC",
      "description": "testDateNotEqualUTC",
      "expression": "Patient.birthDate != @1974-12-25T12:34:00Z",
      "status": "passed",
      "execution_time_ms": 0.123042,
      "expected": [],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateNotEqualTimeSecond",
      "description": "testDateNotEqualTimeSecond",
      "expression": "Patient.birthDate != @T12:14:15",
      "status": "passed",
      "execution_time_ms": 0.148875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateNotEqualTimeMinute",
      "description": "testDateNotEqualTimeMinute",
      "expression": "Patient.birthDate != @T12:14",
      "status": "passed",
      "execution_time_ms": 0.143792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateNotEqualToday",
      "description": "testDateNotEqualToday",
      "expression": "Patient.birthDate < today()",
      "status": "error",
      "execution_time_ms": 0.276667,
      "expected": [
        true
      ],
      "actual": null
    },
    {
      "name": "testDateTimeGreaterThanDate1",
      "description": "testDateTimeGreaterThanDate1",
      "expression": "now() > Patient.birthDate",
      "status": "error",
      "execution_time_ms": 0.238208,
      "expected": [
        true
      ],
      "actual": null
    },
    {
      "name": "testDateGreaterThanDate",
      "description": "testDateGreaterThanDate",
      "expression": "today() > Patient.birthDate",
      "status": "error",
      "execution_time_ms": 0.192584,
      "expected": [
        true
      ],
      "actual": null
    },
    {
      "name": "testDateTimeGreaterThanDate2",
      "description": "testDateTimeGreaterThanDate2",
      "expression": "now() > today()",
      "status": "passed",
      "execution_time_ms": 0.33725,
      "expected": [],
      "actual": []
    },
    {
      "name": "testLiteralDateTimeTZGreater",
      "description": "testLiteralDateTimeTZGreater",
      "expression": "@2017-11-05T01:30:00.0-04:00 > @2017-11-05T01:15:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.239625,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLiteralDateTimeTZLess",
      "description": "testLiteralDateTimeTZLess",
      "expression": "@2017-11-05T01:30:00.0-04:00 < @2017-11-05T01:15:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.169584,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralDateTimeTZEqualFalse",
      "description": "testLiteralDateTimeTZEqualFalse",
      "expression": "@2017-11-05T01:30:00.0-04:00 = @2017-11-05T01:15:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.141166,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testLiteralDateTimeTZEqualTrue",
      "description": "testLiteralDateTimeTZEqualTrue",
      "expression": "@2017-11-05T01:30:00.0-04:00 = @2017-11-05T00:30:00.0-05:00",
      "status": "passed",
      "execution_time_ms": 0.123958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralUnicode",
      "description": "testLiteralUnicode",
      "expression": "Patient.name.given.first() = 'P\\u0065ter'",
      "status": "passed",
      "execution_time_ms": 0.196917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCollectionNotEmpty",
      "description": "testCollectionNotEmpty",
      "expression": "Patient.name.given.empty().not()",
      "status": "passed",
      "execution_time_ms": 0.145959,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testCollectionNotEqualEmpty",
      "description": "testCollectionNotEqualEmpty",
      "expression": "Patient.name.given != {}",
      "status": "passed",
      "execution_time_ms": 0.135417,
      "expected": [],
      "actual": []
    },
    {
      "name": "testExpressions",
      "description": "testExpressions",
      "expression": "Patient.name.select(given | family).distinct()",
      "status": "passed",
      "execution_time_ms": 0.200416,
      "expected": [
        "Peter",
        "James",
        "Chalmers",
        "Jim",
        "Windsor"
      ],
      "actual": [
        "Peter",
        "James",
        "Chalmers",
        "Jim",
        "Windsor"
      ]
    },
    {
      "name": "testExpressionsEqual",
      "description": "testExpressionsEqual",
      "expression": "Patient.name.given.count() = 1 + 4",
      "status": "passed",
      "execution_time_ms": 2.16725,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEmpty",
      "description": "testNotEmpty",
      "expression": "Patient.name.empty().not()",
      "status": "passed",
      "execution_time_ms": 0.158417,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testEmpty",
      "description": "testEmpty",
      "expression": "Patient.link.empty()",
      "status": "passed",
      "execution_time_ms": 0.125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralNotOnEmpty",
      "description": "testLiteralNotOnEmpty",
      "expression": "{}.not().empty()",
      "status": "passed",
      "execution_time_ms": 0.123334,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralNotTrue",
      "description": "testLiteralNotTrue",
      "expression": "true.not() = false",
      "status": "passed",
      "execution_time_ms": 0.132291,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLiteralNotFalse",
      "description": "testLiteralNotFalse",
      "expression": "false.not() = true",
      "status": "passed",
      "execution_time_ms": 0.123625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerBooleanNotTrue",
      "description": "testIntegerBooleanNotTrue",
      "expression": "(0).not() = false",
      "status": "passed",
      "execution_time_ms": 0.214125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerBooleanNotFalse",
      "description": "testIntegerBooleanNotFalse",
      "expression": "(1).not() = false",
      "status": "passed",
      "execution_time_ms": 0.20025,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotInvalid",
      "description": "testNotInvalid",
      "expression": "(1|2).not() = false",
      "status": "error",
      "execution_time_ms": 0.329333,
      "expected": [],
      "actual": null,
      "error": "Unexpected collection[1,2]; expected singleton of type Boolean"
    },
    {
      "name": "testLn1",
      "description": "testLn1",
      "expression": "1.ln() = 0.0",
      "status": "passed",
      "execution_time_ms": 0.271625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLn2",
      "description": "testLn2",
      "expression": "1.0.ln() = 0.0",
      "status": "passed",
      "execution_time_ms": 0.225667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLnEmpty",
      "description": "testLnEmpty",
      "expression": "{}.ln().empty()",
      "status": "passed",
      "execution_time_ms": 0.118292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLog1",
      "description": "testLog1",
      "expression": "16.log(2) = 4.0",
      "status": "passed",
      "execution_time_ms": 0.334875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLog2",
      "description": "testLog2",
      "expression": "100.0.log(10.0) = 2.0",
      "status": "passed",
      "execution_time_ms": 0.304333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLogEmpty",
      "description": "testLogEmpty",
      "expression": "{}.log(10).empty()",
      "status": "passed",
      "execution_time_ms": 0.256125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLogEmpty2",
      "description": "testLogEmpty2",
      "expression": "{}.log({}).empty()",
      "status": "passed",
      "execution_time_ms": 0.127458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testLogEmpty3",
      "description": "testLogEmpty3",
      "expression": "16.log({}).empty()",
      "status": "passed",
      "execution_time_ms": 0.183417,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "LowBoundaryDecimalDefault",
      "description": "LowBoundaryDecimalDefault",
      "expression": "1.587.lowBoundary()",
      "status": "error",
      "execution_time_ms": 0.180375,
      "expected": [
        1.5865
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal1",
      "description": "LowBoundaryDecimal1",
      "expression": "1.587.lowBoundary(6)",
      "status": "error",
      "execution_time_ms": 0.249792,
      "expected": [
        1.5865
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal2",
      "description": "LowBoundaryDecimal2",
      "expression": "1.587.lowBoundary(2)",
      "status": "error",
      "execution_time_ms": 0.247125,
      "expected": [
        1.58
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal3",
      "description": "LowBoundaryDecimal3",
      "expression": "1.587.lowBoundary(-1)",
      "status": "error",
      "execution_time_ms": 0.261708,
      "expected": [],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal4",
      "description": "LowBoundaryDecimal4",
      "expression": "1.587.lowBoundary(0)",
      "status": "error",
      "execution_time_ms": 0.251334,
      "expected": [
        1
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal5",
      "description": "LowBoundaryDecimal5",
      "expression": "1.587.lowBoundary(32)",
      "status": "error",
      "execution_time_ms": 0.25075,
      "expected": [],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryNegDecimalDefault",
      "description": "LowBoundaryNegDecimalDefault",
      "expression": "(-1.587).lowBoundary()",
      "status": "error",
      "execution_time_ms": 0.196833,
      "expected": [
        -1.5875
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryNegDecimal1",
      "description": "LowBoundaryNegDecimal1",
      "expression": "(-1.587).lowBoundary(6)",
      "status": "error",
      "execution_time_ms": 0.268833,
      "expected": [
        -1.5875
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryNegDecimal2",
      "description": "LowBoundaryNegDecimal2",
      "expression": "(-1.587).lowBoundary(2)",
      "status": "error",
      "execution_time_ms": 0.276959,
      "expected": [
        -1.59
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryNegDecimal3",
      "description": "LowBoundaryNegDecimal3",
      "expression": "(-1.587).lowBoundary(-1)",
      "status": "error",
      "execution_time_ms": 0.2745,
      "expected": [],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryNegDecimal4",
      "description": "LowBoundaryNegDecimal4",
      "expression": "(-1.587).lowBoundary(0)",
      "status": "error",
      "execution_time_ms": 0.267583,
      "expected": [
        -2
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryNegDecimal5",
      "description": "LowBoundaryNegDecimal5",
      "expression": "(-1.587).lowBoundary(32)",
      "status": "error",
      "execution_time_ms": 0.3065,
      "expected": [],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal6",
      "description": "LowBoundaryDecimal6",
      "expression": "1.587.lowBoundary(39)",
      "status": "error",
      "execution_time_ms": 0.281875,
      "expected": [],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal7",
      "description": "LowBoundaryDecimal7",
      "expression": "1.toDecimal().lowBoundary()",
      "status": "error",
      "execution_time_ms": 0.188417,
      "expected": [
        0.5
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal8",
      "description": "LowBoundaryDecimal8",
      "expression": "1.lowBoundary(0)",
      "status": "error",
      "execution_time_ms": 0.244792,
      "expected": [
        0
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal9",
      "description": "LowBoundaryDecimal9",
      "expression": "1.lowBoundary(5)",
      "status": "error",
      "execution_time_ms": 0.252667,
      "expected": [
        0.5
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal10",
      "description": "LowBoundaryDecimal10",
      "expression": "12.587.lowBoundary(2)",
      "status": "error",
      "execution_time_ms": 0.25475,
      "expected": [
        12.58
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal11",
      "description": "LowBoundaryDecimal11",
      "expression": "12.500.lowBoundary(4)",
      "status": "error",
      "execution_time_ms": 0.259333,
      "expected": [
        12.4995
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal12",
      "description": "LowBoundaryDecimal12",
      "expression": "120.lowBoundary(2)",
      "status": "error",
      "execution_time_ms": 0.244875,
      "expected": [
        119.5
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal13",
      "description": "LowBoundaryDecimal13",
      "expression": "(-120).lowBoundary(2)",
      "status": "error",
      "execution_time_ms": 0.277875,
      "expected": [
        -120.5
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal14",
      "description": "LowBoundaryDecimal14",
      "expression": "0.0034.lowBoundary(1)",
      "status": "error",
      "execution_time_ms": 2.095792,
      "expected": [
        0
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDecimal15",
      "description": "LowBoundaryDecimal15",
      "expression": "(-0.0034).lowBoundary(1)",
      "status": "error",
      "execution_time_ms": 0.573084,
      "expected": [
        0
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryQuantity",
      "description": "LowBoundaryQuantity",
      "expression": "1.587 'cm'.lowBoundary(8)",
      "status": "error",
      "execution_time_ms": 0.358125,
      "expected": [
        "1.58650000 'cm'"
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDateMonth",
      "description": "LowBoundaryDateMonth",
      "expression": "@2014.lowBoundary(6)",
      "status": "error",
      "execution_time_ms": 0.331834,
      "expected": [
        "@2014-01"
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDateTimeMillisecond1",
      "description": "LowBoundaryDateTimeMillisecond1",
      "expression": "@2014-01-01T08.lowBoundary(17)",
      "status": "error",
      "execution_time_ms": 0.31825,
      "expected": [
        "@2014-01-01T08:00:00.000+14:00"
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDateTimeMillisecond2",
      "description": "LowBoundaryDateTimeMillisecond2",
      "expression": "@2014-01-01T08:05+08:00.lowBoundary(17)",
      "status": "error",
      "execution_time_ms": 0.345875,
      "expected": [
        "@2014-01-01T08:05:00.000+08:00"
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryDateTimeMillisecond3",
      "description": "LowBoundaryDateTimeMillisecond3",
      "expression": "@2014-01-01T08.lowBoundary(8)",
      "status": "error",
      "execution_time_ms": 1.776542,
      "expected": [
        "@2014-01-01"
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "LowBoundaryTimeMillisecond",
      "description": "LowBoundaryTimeMillisecond",
      "expression": "@T10:30.lowBoundary(9)",
      "status": "error",
      "execution_time_ms": 0.354792,
      "expected": [
        "@T10:30:00.000"
      ],
      "actual": null,
      "error": "Not implemented: lowBoundary"
    },
    {
      "name": "testMatchesCaseSensitive1",
      "description": "testMatchesCaseSensitive1",
      "expression": "'FHIR'.matches('FHIR')",
      "status": "passed",
      "execution_time_ms": 0.250292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMatchesCaseSensitive2",
      "description": "testMatchesCaseSensitive2",
      "expression": "'FHIR'.matches('fhir')",
      "status": "passed",
      "execution_time_ms": 0.133084,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testMatchesEmpty",
      "description": "testMatchesEmpty",
      "expression": "'FHIR'.matches({}).empty() = true",
      "status": "passed",
      "execution_time_ms": 0.189959,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMatchesEmpty2",
      "description": "testMatchesEmpty2",
      "expression": "{}.matches('FHIR').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.145708,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMatchesEmpty3",
      "description": "testMatchesEmpty3",
      "expression": "{}.matches({}).empty() = true",
      "status": "passed",
      "execution_time_ms": 0.142458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMatchesSingleLineMode1",
      "description": "testMatchesSingleLineMode1",
      "expression": "'A\n\t\t\tB'.matches('A.*B')",
      "status": "passed",
      "execution_time_ms": 0.167584,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMatchesWithinUrl1",
      "description": "testMatchesWithinUrl1",
      "expression": "'http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1'.matches('library')",
      "status": "passed",
      "execution_time_ms": 0.12075,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testMatchesWithinUrl2",
      "description": "testMatchesWithinUrl2",
      "expression": "'http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1'.matches('Library')",
      "status": "passed",
      "execution_time_ms": 0.119917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMatchesWithinUrl3",
      "description": "testMatchesWithinUrl3",
      "expression": "'http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1'.matches('^Library$')",
      "status": "passed",
      "execution_time_ms": 0.1395,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testMatchesWithinUrl1a",
      "description": "testMatchesWithinUrl1a",
      "expression": "'http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1'.matches('.*Library.*')",
      "status": "passed",
      "execution_time_ms": 0.183916,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMatchesWithinUrl4",
      "description": "testMatchesWithinUrl4",
      "expression": "'http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1'.matches('Measure')",
      "status": "passed",
      "execution_time_ms": 0.129959,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testMatchesFullWithinUrl1",
      "description": "testMatchesFullWithinUrl1",
      "expression": "'http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1'.matchesFull('library')",
      "status": "error",
      "execution_time_ms": 0.156584,
      "expected": [
        false
      ],
      "actual": null,
      "error": "Not implemented: matchesFull"
    },
    {
      "name": "testMatchesFullWithinUrl3",
      "description": "testMatchesFullWithinUrl3",
      "expression": "'http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1'.matchesFull('Library')",
      "status": "error",
      "execution_time_ms": 0.125083,
      "expected": [
        false
      ],
      "actual": null,
      "error": "Not implemented: matchesFull"
    },
    {
      "name": "testMatchesFullWithinUrl4",
      "description": "testMatchesFullWithinUrl4",
      "expression": "'http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1'.matchesFull('^Library$')",
      "status": "error",
      "execution_time_ms": 0.124291,
      "expected": [
        false
      ],
      "actual": null,
      "error": "Not implemented: matchesFull"
    },
    {
      "name": "testMatchesFullWithinUrl1a",
      "description": "testMatchesFullWithinUrl1a",
      "expression": "'http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1'.matchesFull('.*Library.*')",
      "status": "error",
      "execution_time_ms": 0.192583,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: matchesFull"
    },
    {
      "name": "testMatchesFullWithinUrl2",
      "description": "testMatchesFullWithinUrl2",
      "expression": "'http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1'.matchesFull('Measure')",
      "status": "error",
      "execution_time_ms": 0.125083,
      "expected": [
        false
      ],
      "actual": null,
      "error": "Not implemented: matchesFull"
    },
    {
      "name": "testMinus1",
      "description": "testMinus1",
      "expression": "1 - 1 = 0",
      "status": "passed",
      "execution_time_ms": 0.57275,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMinus2",
      "description": "testMinus2",
      "expression": "1 - 0 = 1",
      "status": "passed",
      "execution_time_ms": 0.32375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMinus3",
      "description": "testMinus3",
      "expression": "1.8 - 1.2 = 0.6",
      "status": "passed",
      "execution_time_ms": 0.352958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMinus4",
      "description": "testMinus4",
      "expression": "'a'-'b' = 'ab'",
      "status": "error",
      "execution_time_ms": 0.137667,
      "expected": [],
      "actual": null,
      "error": "Cannot [\"a\"] - [\"b\"]"
    },
    {
      "name": "testMinus5",
      "description": "testMinus5",
      "expression": "@1974-12-25 - 1 'month'",
      "status": "error",
      "execution_time_ms": 0.228375,
      "expected": [
        "@1974-11-25"
      ],
      "actual": null,
      "error": "For date/time arithmetic, the unit of the quantity must be one of the following time-based units: years,months,weeks,days,hours,minutes,seconds,milliseconds,year,month,week,day,hour,minute,second,millisecond,'s','ms'"
    },
    {
      "name": "testMinus6",
      "description": "testMinus6",
      "expression": "@1974-12-25 - 1 'cm'",
      "status": "error",
      "execution_time_ms": 0.125292,
      "expected": [],
      "actual": null,
      "error": "For date/time arithmetic, the unit of the quantity must be one of the following time-based units: years,months,weeks,days,hours,minutes,seconds,milliseconds,year,month,week,day,hour,minute,second,millisecond,'s','ms'"
    },
    {
      "name": "testMinus7",
      "description": "testMinus7",
      "expression": "@T00:30:00 - 1 hour",
      "status": "passed",
      "execution_time_ms": 0.35275,
      "expected": [
        "@T23:30:00"
      ],
      "actual": [
        "23:30:00+03:00"
      ]
    },
    {
      "name": "testMinus8",
      "description": "testMinus8",
      "expression": "@T01:00:00 - 2 hours",
      "status": "passed",
      "execution_time_ms": 0.180167,
      "expected": [
        "@T23:00:00"
      ],
      "actual": [
        "23:00:00+03:00"
      ]
    },
    {
      "name": "testMinusEmpty1",
      "description": "testMinusEmpty1",
      "expression": "1 - {}",
      "status": "passed",
      "execution_time_ms": 0.201958,
      "expected": [],
      "actual": []
    },
    {
      "name": "testMinusEmpty2",
      "description": "testMinusEmpty2",
      "expression": "{} - 1",
      "status": "passed",
      "execution_time_ms": 0.156792,
      "expected": [],
      "actual": []
    },
    {
      "name": "testMinusEmpty3",
      "description": "testMinusEmpty3",
      "expression": "{} - {}",
      "status": "passed",
      "execution_time_ms": 0.107083,
      "expected": [],
      "actual": []
    },
    {
      "name": "testExtractBirthDate",
      "description": "Extract birthDate",
      "expression": "birthDate",
      "status": "passed",
      "execution_time_ms": 0.121541,
      "expected": [
        "@1974-12-25"
      ],
      "actual": [
        "1974-12-25"
      ]
    },
    {
      "name": "testPatientHasBirthDate",
      "description": "patient has a birthDate",
      "expression": "birthDate",
      "status": "passed",
      "execution_time_ms": 0.101208,
      "expected": [
        true
      ],
      "actual": [
        "1974-12-25"
      ]
    },
    {
      "name": "testPatientTelecomTypes",
      "description": "patient telecom types",
      "expression": "telecom.use",
      "status": "passed",
      "execution_time_ms": 0.113333,
      "expected": [
        "home",
        "work",
        "mobile",
        "old"
      ],
      "actual": [
        "home",
        "work",
        "mobile",
        "old"
      ]
    },
    {
      "name": "testMod1",
      "description": "testMod1",
      "expression": "1 mod 1 = 0",
      "status": "passed",
      "execution_time_ms": 0.561916,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMod2",
      "description": "testMod2",
      "expression": "4 mod 2 = 0",
      "status": "passed",
      "execution_time_ms": 0.321375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMod3",
      "description": "testMod3",
      "expression": "5 mod 2 = 1",
      "status": "passed",
      "execution_time_ms": 0.330292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMod4",
      "description": "testMod4",
      "expression": "2.2 mod 1.8 = 0.4",
      "status": "passed",
      "execution_time_ms": 0.326667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMod5",
      "description": "testMod5",
      "expression": "5 mod 0",
      "status": "passed",
      "execution_time_ms": 0.225917,
      "expected": [],
      "actual": []
    },
    {
      "name": "testModEmpty1",
      "description": "testModEmpty1",
      "expression": "1 mod {}",
      "status": "passed",
      "execution_time_ms": 0.18475,
      "expected": [],
      "actual": []
    },
    {
      "name": "testModEmpty2",
      "description": "testModEmpty2",
      "expression": "{} mod 1",
      "status": "passed",
      "execution_time_ms": 0.151417,
      "expected": [],
      "actual": []
    },
    {
      "name": "testModEmpty3",
      "description": "testModEmpty3",
      "expression": "{} mod {}",
      "status": "passed",
      "execution_time_ms": 0.104916,
      "expected": [],
      "actual": []
    },
    {
      "name": "testMultiply1",
      "description": "testMultiply1",
      "expression": "1 * 1 = 1",
      "status": "passed",
      "execution_time_ms": 0.479917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMultiply2",
      "description": "testMultiply2",
      "expression": "1 * 0 = 0",
      "status": "passed",
      "execution_time_ms": 0.308375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMultiply3",
      "description": "testMultiply3",
      "expression": "1.2 * 1.8 = 2.16",
      "status": "passed",
      "execution_time_ms": 0.324375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testMultiplyEmpty1",
      "description": "testMultiplyEmpty1",
      "expression": "1 * {}",
      "status": "passed",
      "execution_time_ms": 0.181125,
      "expected": [],
      "actual": []
    },
    {
      "name": "testMultiplyEmpty2",
      "description": "testMultiplyEmpty2",
      "expression": "{} * 1",
      "status": "passed",
      "execution_time_ms": 0.150208,
      "expected": [],
      "actual": []
    },
    {
      "name": "testMultiplyEmpty3",
      "description": "testMultiplyEmpty3",
      "expression": "{} * {}",
      "status": "passed",
      "execution_time_ms": 0.105292,
      "expected": [],
      "actual": []
    },
    {
      "name": "testNEquality1",
      "description": "testNEquality1",
      "expression": "1 != 1",
      "status": "passed",
      "execution_time_ms": 0.284834,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality2",
      "description": "testNEquality2",
      "expression": "{} != {}",
      "status": "passed",
      "execution_time_ms": 0.107166,
      "expected": [],
      "actual": []
    },
    {
      "name": "testNEquality3",
      "description": "testNEquality3",
      "expression": "1 != 2",
      "status": "passed",
      "execution_time_ms": 0.228959,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality4",
      "description": "testNEquality4",
      "expression": "'a' != 'a'",
      "status": "passed",
      "execution_time_ms": 0.11325,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality5",
      "description": "testNEquality5",
      "expression": "'a' != 'b'",
      "status": "passed",
      "execution_time_ms": 0.114667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality6",
      "description": "testNEquality6",
      "expression": "1.1 != 1.1",
      "status": "passed",
      "execution_time_ms": 0.226166,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality7",
      "description": "testNEquality7",
      "expression": "1.1 != 1.2",
      "status": "passed",
      "execution_time_ms": 0.224041,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality8",
      "description": "testNEquality8",
      "expression": "1.10 != 1.1",
      "status": "passed",
      "execution_time_ms": 0.221958,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality9",
      "description": "testNEquality9",
      "expression": "0 != 0",
      "status": "passed",
      "execution_time_ms": 0.234,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality10",
      "description": "testNEquality10",
      "expression": "0.0 != 0",
      "status": "passed",
      "execution_time_ms": 0.225833,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality11",
      "description": "testNEquality11",
      "expression": "@2012-04-15 != @2012-04-15",
      "status": "passed",
      "execution_time_ms": 0.146542,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality12",
      "description": "testNEquality12",
      "expression": "@2012-04-15 != @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.112917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality13",
      "description": "testNEquality13",
      "expression": "@2012-04-15 != @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.131709,
      "expected": [],
      "actual": []
    },
    {
      "name": "testNEquality14",
      "description": "testNEquality14",
      "expression": "@2012-04-15T15:00:00 != @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.11,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality15",
      "description": "testNEquality15",
      "expression": "@2012-04-15T15:30:31 != @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.11025,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality16",
      "description": "testNEquality16",
      "expression": "@2012-04-15T15:30:31 != @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.108541,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality17",
      "description": "testNEquality17",
      "expression": "@2012-04-15T15:00:00Z != @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.121458,
      "expected": [],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality18",
      "description": "testNEquality18",
      "expression": "@2012-04-15T15:00:00+02:00 != @2012-04-15T16:00:00+03:00",
      "status": "passed",
      "execution_time_ms": 0.117791,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality19",
      "description": "testNEquality19",
      "expression": "name != name",
      "status": "passed",
      "execution_time_ms": 0.13925,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality20",
      "description": "testNEquality20",
      "expression": "name.take(2) != name.take(2).first() | name.take(2).last()",
      "status": "passed",
      "execution_time_ms": 0.48575,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality21",
      "description": "testNEquality21",
      "expression": "name.take(2) != name.take(2).last() | name.take(2).first()",
      "status": "passed",
      "execution_time_ms": 1.398625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality22",
      "description": "testNEquality22",
      "expression": "(1.2 / 1.8).round(2) != 0.6666667",
      "status": "passed",
      "execution_time_ms": 0.582417,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNEquality23",
      "description": "testNEquality23",
      "expression": "(1.2 / 1.8).round(2) != 0.67",
      "status": "passed",
      "execution_time_ms": 0.420208,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNEquality24",
      "description": "testNEquality24",
      "expression": "Observation.value != 185 'kg'",
      "status": "passed",
      "execution_time_ms": 0.147333,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testNotEquivalent1",
      "description": "testNotEquivalent1",
      "expression": "1 !~ 1",
      "status": "passed",
      "execution_time_ms": 0.49725,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent2",
      "description": "testNotEquivalent2",
      "expression": "{} !~ {}",
      "status": "passed",
      "execution_time_ms": 0.120292,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent3",
      "description": "testNotEquivalent3",
      "expression": "{} !~ 1",
      "status": "passed",
      "execution_time_ms": 0.156958,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent4",
      "description": "testNotEquivalent4",
      "expression": "1 !~ 2",
      "status": "passed",
      "execution_time_ms": 0.233083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent5",
      "description": "testNotEquivalent5",
      "expression": "'a' !~ 'a'",
      "status": "passed",
      "execution_time_ms": 0.1155,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent6",
      "description": "testNotEquivalent6",
      "expression": "'a' !~ 'A'",
      "status": "passed",
      "execution_time_ms": 0.135666,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent7",
      "description": "testNotEquivalent7",
      "expression": "'a' !~ 'b'",
      "status": "passed",
      "execution_time_ms": 0.110167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent8",
      "description": "testNotEquivalent8",
      "expression": "1.1 !~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.233,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent9",
      "description": "testNotEquivalent9",
      "expression": "1.1 !~ 1.2",
      "status": "passed",
      "execution_time_ms": 0.228666,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent10",
      "description": "testNotEquivalent10",
      "expression": "1.10 !~ 1.1",
      "status": "passed",
      "execution_time_ms": 0.22575,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent11",
      "description": "testNotEquivalent11",
      "expression": "0 !~ 0",
      "status": "passed",
      "execution_time_ms": 0.228917,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent12",
      "description": "testNotEquivalent12",
      "expression": "0.0 !~ 0",
      "status": "passed",
      "execution_time_ms": 0.22725,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent13",
      "description": "testNotEquivalent13",
      "expression": "1.2 / 1.8 !~ 0.6",
      "status": "passed",
      "execution_time_ms": 0.324375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent14",
      "description": "testNotEquivalent14",
      "expression": "@2012-04-15 !~ @2012-04-15",
      "status": "passed",
      "execution_time_ms": 0.13525,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent15",
      "description": "testNotEquivalent15",
      "expression": "@2012-04-15 !~ @2012-04-16",
      "status": "passed",
      "execution_time_ms": 0.113625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent16",
      "description": "testNotEquivalent16",
      "expression": "@2012-04-15 !~ @2012-04-15T10:00:00",
      "status": "passed",
      "execution_time_ms": 0.111625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent17",
      "description": "testNotEquivalent17",
      "expression": "@2012-04-15T15:30:31 !~ @2012-04-15T15:30:31.0",
      "status": "passed",
      "execution_time_ms": 0.118292,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent18",
      "description": "testNotEquivalent18",
      "expression": "@2012-04-15T15:30:31 !~ @2012-04-15T15:30:31.1",
      "status": "passed",
      "execution_time_ms": 0.116584,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent19",
      "description": "testNotEquivalent19",
      "expression": "name !~ name",
      "status": "passed",
      "execution_time_ms": 0.129709,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent20",
      "description": "testNotEquivalent20",
      "expression": "name.take(2).given !~ name.take(2).first().given | name.take(2).last().given",
      "status": "passed",
      "execution_time_ms": 0.493625,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNotEquivalent21",
      "description": "testNotEquivalent21",
      "expression": "name.take(2).given !~ name.take(2).last().given | name.take(2).first().given",
      "status": "passed",
      "execution_time_ms": 0.452,
      "expected": [
        false
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNotEquivalent22",
      "description": "testNotEquivalent22",
      "expression": "Observation.value !~ 185 'kg'",
      "status": "passed",
      "execution_time_ms": 0.132542,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNow1",
      "description": "testNow1",
      "expression": "Patient.birthDate < now()",
      "status": "error",
      "execution_time_ms": 0.171166,
      "expected": [
        true
      ],
      "actual": null
    },
    {
      "name": "testNow2",
      "description": "testNow2",
      "expression": "now().toString().length() > 10",
      "status": "passed",
      "execution_time_ms": 0.200417,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPolymorphismA",
      "description": "testPolymorphismA",
      "expression": "Observation.value.unit",
      "status": "passed",
      "execution_time_ms": 0.114625,
      "expected": [
        "lbs"
      ],
      "actual": []
    },
    {
      "name": "testPolymorphismB",
      "description": "testPolymorphismB",
      "expression": "Observation.valueQuantity.unit",
      "status": "passed",
      "execution_time_ms": 0.116,
      "expected": [
        "lbs"
      ],
      "actual": [
        "lbs"
      ]
    },
    {
      "name": "testPolymorphismIsA1",
      "description": "testPolymorphismIsA1",
      "expression": "Observation.value.is(Quantity)",
      "status": "passed",
      "execution_time_ms": 0.147208,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testPolymorphismIsA2",
      "description": "testPolymorphismIsA2",
      "expression": "Observation.value is Quantity",
      "status": "passed",
      "execution_time_ms": 0.185167,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testPolymorphismIsA3",
      "description": "testPolymorphismIsA3",
      "expression": "Observation.issued is instant",
      "status": "error",
      "execution_time_ms": 0.254084,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testPolymorphismIsB",
      "description": "testPolymorphismIsB",
      "expression": "Observation.value.is(Period).not()",
      "status": "error",
      "execution_time_ms": 0.159375,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testPolymorphismAsA",
      "description": "testPolymorphismAsA",
      "expression": "Observation.value.as(Quantity).unit",
      "status": "passed",
      "execution_time_ms": 0.165292,
      "expected": [
        "lbs"
      ],
      "actual": []
    },
    {
      "name": "testPolymorphismAsAFunction",
      "description": "testPolymorphismAsAFunction",
      "expression": "(Observation.value as Quantity).unit",
      "status": "passed",
      "execution_time_ms": 0.171792,
      "expected": [
        "lbs"
      ],
      "actual": []
    },
    {
      "name": "testPolymorphismAsB",
      "description": "testPolymorphismAsB",
      "expression": "(Observation.value as Period).unit",
      "status": "error",
      "execution_time_ms": 0.147167,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testPolymorphismAsBFunction",
      "description": "testPolymorphismAsBFunction",
      "expression": "Observation.value.as(Period).start",
      "status": "error",
      "execution_time_ms": 1.940042,
      "expected": [],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testPlus1",
      "description": "testPlus1",
      "expression": "1 + 1 = 2",
      "status": "passed",
      "execution_time_ms": 0.465208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPlus2",
      "description": "testPlus2",
      "expression": "1 + 0 = 1",
      "status": "passed",
      "execution_time_ms": 0.319083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPlus3",
      "description": "testPlus3",
      "expression": "1.2 + 1.8 = 3.0",
      "status": "passed",
      "execution_time_ms": 0.309792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPlus4",
      "description": "testPlus4",
      "expression": "'a'+'b' = 'ab'",
      "status": "passed",
      "execution_time_ms": 0.122,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPlus5",
      "description": "testPlus5",
      "expression": "'a'+{}",
      "status": "passed",
      "execution_time_ms": 0.107334,
      "expected": [],
      "actual": []
    },
    {
      "name": "testPlusDate1",
      "description": "testPlusDate1",
      "expression": "@1973-12-25 + 7 days",
      "status": "passed",
      "execution_time_ms": 0.192667,
      "expected": [
        "@1974-01-01"
      ],
      "actual": [
        "1974-01-01"
      ]
    },
    {
      "name": "testPlusDate2",
      "description": "testPlusDate2",
      "expression": "@1973-12-25 + 7.7 days",
      "status": "passed",
      "execution_time_ms": 0.140708,
      "expected": [
        "@1974-01-01"
      ],
      "actual": [
        "1974-01-01"
      ]
    },
    {
      "name": "testPlusDate3",
      "description": "testPlusDate3",
      "expression": "@1973-12-25T00:00:00.000+10:00 + 7 days",
      "status": "passed",
      "execution_time_ms": 0.155625,
      "expected": [
        "@1974-01-01T00:00:00.000+10:00"
      ],
      "actual": [
        "1973-12-31T17:00:00+03:00"
      ]
    },
    {
      "name": "testPlusDate4",
      "description": "testPlusDate4",
      "expression": "@1973-12-25T00:00:00.000+10:00 + 7.7 days",
      "status": "passed",
      "execution_time_ms": 0.119,
      "expected": [
        "@1974-01-01T00:00:00.000+10:00"
      ],
      "actual": [
        "1973-12-31T17:00:00+03:00"
      ]
    },
    {
      "name": "testPlusDate5",
      "description": "testPlusDate5",
      "expression": "@1973-12-25T00:00:00.000+10:00 + 1 second",
      "status": "passed",
      "execution_time_ms": 0.295416,
      "expected": [
        "@1973-12-25T00:00:01.000+10:00"
      ],
      "actual": [
        "1973-12-24T17:00:01+03:00"
      ]
    },
    {
      "name": "testPlusDate6",
      "description": "testPlusDate6",
      "expression": "@1973-12-25T00:00:00.000+10:00 + 10 millisecond",
      "status": "passed",
      "execution_time_ms": 0.320208,
      "expected": [
        "@1973-12-25T00:00:00.010+10:00"
      ],
      "actual": [
        "1973-12-24T17:00:00.010+03:00"
      ]
    },
    {
      "name": "testPlusDate7",
      "description": "testPlusDate7",
      "expression": "@1973-12-25T00:00:00.000+10:00 + 1 minute",
      "status": "passed",
      "execution_time_ms": 0.202125,
      "expected": [
        "@1973-12-25T00:01:00.000+10:00"
      ],
      "actual": [
        "1973-12-24T17:01:00+03:00"
      ]
    },
    {
      "name": "testPlusDate8",
      "description": "testPlusDate8",
      "expression": "@1973-12-25T00:00:00.000+10:00 + 1 hour",
      "status": "passed",
      "execution_time_ms": 0.120709,
      "expected": [
        "@1973-12-25T01:00:00.000+10:00"
      ],
      "actual": [
        "1973-12-24T18:00:00+03:00"
      ]
    },
    {
      "name": "testPlusDate9",
      "description": "testPlusDate9",
      "expression": "@1973-12-25 + 1 day",
      "status": "passed",
      "execution_time_ms": 0.116958,
      "expected": [
        "@1973-12-26"
      ],
      "actual": [
        "1973-12-26"
      ]
    },
    {
      "name": "testPlusDate10",
      "description": "testPlusDate10",
      "expression": "@1973-12-25 + 1 month",
      "status": "passed",
      "execution_time_ms": 0.21525,
      "expected": [
        "@1974-01-25"
      ],
      "actual": [
        "1974-01-25"
      ]
    },
    {
      "name": "testPlusDate11",
      "description": "testPlusDate11",
      "expression": "@1973-12-25 + 1 week",
      "status": "passed",
      "execution_time_ms": 0.185333,
      "expected": [
        "@1974-01-01"
      ],
      "actual": [
        "1974-01-01"
      ]
    },
    {
      "name": "testPlusDate12",
      "description": "testPlusDate12",
      "expression": "@1973-12-25 + 1 year",
      "status": "passed",
      "execution_time_ms": 0.273,
      "expected": [
        "@1974-12-25"
      ],
      "actual": [
        "1974-12-25"
      ]
    },
    {
      "name": "testPlusDate13",
      "description": "testPlusDate13",
      "expression": "@1973-12-25 + 1 'd'",
      "status": "error",
      "execution_time_ms": 0.131958,
      "expected": [
        "@1973-12-26"
      ],
      "actual": null,
      "error": "For date/time arithmetic, the unit of the quantity must be one of the following time-based units: years,months,weeks,days,hours,minutes,seconds,milliseconds,year,month,week,day,hour,minute,second,millisecond,'s','ms'"
    },
    {
      "name": "testPlusDate14",
      "description": "testPlusDate14",
      "expression": "@1973-12-25 + 1 'mo'",
      "status": "error",
      "execution_time_ms": 0.118208,
      "expected": [],
      "actual": null,
      "error": "For date/time arithmetic, the unit of the quantity must be one of the following time-based units: years,months,weeks,days,hours,minutes,seconds,milliseconds,year,month,week,day,hour,minute,second,millisecond,'s','ms'"
    },
    {
      "name": "testPlusDate15",
      "description": "testPlusDate15",
      "expression": "@1973-12-25 + 1 'wk'",
      "status": "error",
      "execution_time_ms": 0.132542,
      "expected": [
        "@1974-01-01"
      ],
      "actual": null,
      "error": "For date/time arithmetic, the unit of the quantity must be one of the following time-based units: years,months,weeks,days,hours,minutes,seconds,milliseconds,year,month,week,day,hour,minute,second,millisecond,'s','ms'"
    },
    {
      "name": "testPlusDate16",
      "description": "testPlusDate16",
      "expression": "@1973-12-25 + 1 'a'",
      "status": "error",
      "execution_time_ms": 0.112042,
      "expected": [],
      "actual": null,
      "error": "For date/time arithmetic, the unit of the quantity must be one of the following time-based units: years,months,weeks,days,hours,minutes,seconds,milliseconds,year,month,week,day,hour,minute,second,millisecond,'s','ms'"
    },
    {
      "name": "testPlusDate17",
      "description": "testPlusDate17",
      "expression": "@1975-12-25 + 1 'a'",
      "status": "error",
      "execution_time_ms": 0.112166,
      "expected": [],
      "actual": null,
      "error": "For date/time arithmetic, the unit of the quantity must be one of the following time-based units: years,months,weeks,days,hours,minutes,seconds,milliseconds,year,month,week,day,hour,minute,second,millisecond,'s','ms'"
    },
    {
      "name": "testPlusDate18",
      "description": "testPlusDate18",
      "expression": "@1973-12-25T00:00:00.000+10:00 + 1 's'",
      "status": "passed",
      "execution_time_ms": 0.121625,
      "expected": [
        "@1973-12-25T00:00:01.000+10:00"
      ],
      "actual": [
        "1973-12-24T17:00:01+03:00"
      ]
    },
    {
      "name": "testPlusDate19",
      "description": "testPlusDate19",
      "expression": "@1973-12-25T00:00:00.000+10:00 + 0.1 's'",
      "status": "passed",
      "execution_time_ms": 0.11525,
      "expected": [
        "@1973-12-25T00:00:00.100+10:00"
      ],
      "actual": [
        "1973-12-24T17:00:00.100+03:00"
      ]
    },
    {
      "name": "testPlusDate20",
      "description": "testPlusDate20",
      "expression": "@1973-12-25T00:00:00.000+10:00 + 10 'ms'",
      "status": "passed",
      "execution_time_ms": 0.116375,
      "expected": [
        "@1973-12-25T00:00:00.010+10:00"
      ],
      "actual": [
        "1973-12-24T17:00:00.010+03:00"
      ]
    },
    {
      "name": "testPlusDate21",
      "description": "testPlusDate21",
      "expression": "@1973-12-25T00:00:00.000+10:00 + 1 'min'",
      "status": "error",
      "execution_time_ms": 0.111666,
      "expected": [
        "@1973-12-25T00:01:00.000+10:00"
      ],
      "actual": null,
      "error": "For date/time arithmetic, the unit of the quantity must be one of the following time-based units: years,months,weeks,days,hours,minutes,seconds,milliseconds,year,month,week,day,hour,minute,second,millisecond,'s','ms'"
    },
    {
      "name": "testPlusDate22",
      "description": "testPlusDate22",
      "expression": "@1973-12-25T00:00:00.000+10:00 + 1 'h'",
      "status": "error",
      "execution_time_ms": 0.111417,
      "expected": [
        "@1973-12-25T01:00:00.000+10:00"
      ],
      "actual": null,
      "error": "For date/time arithmetic, the unit of the quantity must be one of the following time-based units: years,months,weeks,days,hours,minutes,seconds,milliseconds,year,month,week,day,hour,minute,second,millisecond,'s','ms'"
    },
    {
      "name": "testPlus6",
      "description": "testPlus6",
      "expression": "@1974-12-25 + 7",
      "status": "error",
      "execution_time_ms": 0.207208,
      "expected": [],
      "actual": null,
      "error": "For date/time arithmetic, the unit of the quantity must be one of the following time-based units: years,months,weeks,days,hours,minutes,seconds,milliseconds,year,month,week,day,hour,minute,second,millisecond,'s','ms'"
    },
    {
      "name": "testPlusTime1",
      "description": "testPlusTime1",
      "expression": "@T01:00:00 + 2 hours",
      "status": "passed",
      "execution_time_ms": 0.154542,
      "expected": [
        "@T03:00:00"
      ],
      "actual": [
        "03:00:00+03:00"
      ]
    },
    {
      "name": "testPlusTime2",
      "description": "testPlusTime2",
      "expression": "@T23:00:00 + 2 hours",
      "status": "passed",
      "execution_time_ms": 0.134791,
      "expected": [
        "@T01:00:00"
      ],
      "actual": [
        "01:00:00+03:00"
      ]
    },
    {
      "name": "testPlusTime3",
      "description": "testPlusTime3",
      "expression": "@T23:00:00 + 50 hours",
      "status": "passed",
      "execution_time_ms": 0.16875,
      "expected": [
        "@T01:00:00"
      ],
      "actual": [
        "01:00:00+03:00"
      ]
    },
    {
      "name": "testPlusEmpty1",
      "description": "testPlusEmpty1",
      "expression": "1 + {}",
      "status": "passed",
      "execution_time_ms": 0.212958,
      "expected": [],
      "actual": []
    },
    {
      "name": "testPlusEmpty2",
      "description": "testPlusEmpty2",
      "expression": "{} + 1",
      "status": "passed",
      "execution_time_ms": 0.145917,
      "expected": [],
      "actual": []
    },
    {
      "name": "testPlusEmpty3",
      "description": "testPlusEmpty3",
      "expression": "{} + {}",
      "status": "passed",
      "execution_time_ms": 0.0985,
      "expected": [],
      "actual": []
    },
    {
      "name": "testPolymorphicsA",
      "description": "testPolymorphicsA",
      "expression": "Observation.value.exists()",
      "status": "passed",
      "execution_time_ms": 0.13275,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testPolymorphicsB",
      "description": "testPolymorphicsB",
      "expression": "Observation.valueQuantity.exists()",
      "status": "passed",
      "execution_time_ms": 0.108292,
      "expected": [
        false
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPower1",
      "description": "testPower1",
      "expression": "2.power(3) = 8",
      "status": "passed",
      "execution_time_ms": 0.372375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPower2",
      "description": "testPower2",
      "expression": "2.5.power(2) = 6.25",
      "status": "passed",
      "execution_time_ms": 0.305291,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPower3",
      "description": "testPower3",
      "expression": "(-1).power(0.5)",
      "status": "passed",
      "execution_time_ms": 0.271292,
      "expected": [],
      "actual": []
    },
    {
      "name": "testPowerEmpty",
      "description": "testPowerEmpty",
      "expression": "{}.power(2).empty()",
      "status": "passed",
      "execution_time_ms": 0.190292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPowerEmpty2",
      "description": "testPowerEmpty2",
      "expression": "{}.power({}).empty()",
      "status": "passed",
      "execution_time_ms": 0.111917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPowerEmpty3",
      "description": "testPowerEmpty3",
      "expression": "2.5.power({}).empty()",
      "status": "passed",
      "execution_time_ms": 0.167708,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPrecedence1",
      "description": "test unary precedence",
      "expression": "-1.convertsToInteger()",
      "status": "error",
      "execution_time_ms": 0.185292,
      "expected": [],
      "actual": null,
      "error": "Unary - can only be applied to a number or Quantity."
    },
    {
      "name": "testPrecedence2",
      "description": "testPrecedence2",
      "expression": "1+2*3+4 = 11",
      "status": "passed",
      "execution_time_ms": 0.560416,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPrecedence3",
      "description": "testPrecedence3",
      "expression": "1 > 2 is Boolean",
      "status": "passed",
      "execution_time_ms": 0.3675,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPrecedence4",
      "description": "testPrecedence4",
      "expression": "1 | 1 is Integer",
      "status": "passed",
      "execution_time_ms": 0.329291,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPrecedence5",
      "description": "testPrecedence5",
      "expression": "true and '0215' in ('0215' | '0216')",
      "status": "passed",
      "execution_time_ms": 0.190125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testPrecedence6",
      "description": "testPrecedence6",
      "expression": "category.exists(coding.exists(system = 'http://terminology.hl7.org/CodeSystem/observation-category' and code.trace('c') in ('vital-signs' | 'vital-signs2').trace('codes')))",
      "status": "passed",
      "execution_time_ms": 0.325,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "PrecisionDecimal",
      "description": "PrecisionDecimal",
      "expression": "1.58700.precision()",
      "status": "error",
      "execution_time_ms": 0.215042,
      "expected": [
        5
      ],
      "actual": null,
      "error": "Not implemented: precision"
    },
    {
      "name": "PrecisionYear",
      "description": "PrecisionYear",
      "expression": "@2014.precision()",
      "status": "error",
      "execution_time_ms": 0.1235,
      "expected": [
        4
      ],
      "actual": null,
      "error": "Not implemented: precision"
    },
    {
      "name": "PrecisionDateTimeMilliseconds",
      "description": "PrecisionDateTimeMilliseconds",
      "expression": "@2014-01-05T10:30:00.000.precision()",
      "status": "error",
      "execution_time_ms": 0.116792,
      "expected": [
        17
      ],
      "actual": null,
      "error": "Not implemented: precision"
    },
    {
      "name": "PrecisionTimeMinutes",
      "description": "PrecisionTimeMinutes",
      "expression": "@T10:30.precision()",
      "status": "error",
      "execution_time_ms": 0.116875,
      "expected": [
        4
      ],
      "actual": null,
      "error": "Not implemented: precision"
    },
    {
      "name": "PrecisionTimeMilliseconds",
      "description": "PrecisionTimeMilliseconds",
      "expression": "@T10:30:00.000.precision()",
      "status": "error",
      "execution_time_ms": 0.133125,
      "expected": [
        9
      ],
      "actual": null,
      "error": "Not implemented: precision"
    },
    {
      "name": "PrecisionEmpty",
      "description": "PrecisionEmpty",
      "expression": "{}.precision().empty()",
      "status": "error",
      "execution_time_ms": 0.118375,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: precision"
    },
    {
      "name": "testQuantity1",
      "description": "testQuantity1",
      "expression": "4.0000 'g' = 4000.0 'mg'",
      "status": "passed",
      "execution_time_ms": 2.158167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantity2",
      "description": "testQuantity2",
      "expression": "4 'g' ~ 4000 'mg'",
      "status": "passed",
      "execution_time_ms": 0.349833,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantity3",
      "description": "testQuantity3",
      "expression": "4 'g' != 4040 'mg'",
      "status": "passed",
      "execution_time_ms": 0.248625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantity4",
      "description": "testQuantity4",
      "expression": "4 'g' ~ 4040 'mg'",
      "status": "passed",
      "execution_time_ms": 0.193417,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantity5",
      "description": "testQuantity5",
      "expression": "7 days = 1 week",
      "status": "passed",
      "execution_time_ms": 0.268625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantity6",
      "description": "testQuantity6",
      "expression": "7 days = 1 'wk'",
      "status": "passed",
      "execution_time_ms": 0.13175,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testQuantity7",
      "description": "testQuantity7",
      "expression": "6 days < 1 week",
      "status": "passed",
      "execution_time_ms": 0.228875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantity8",
      "description": "testQuantity8",
      "expression": "8 days > 1 week",
      "status": "passed",
      "execution_time_ms": 0.15725,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantity9",
      "description": "testQuantity9",
      "expression": "2.0 'cm' * 2.0 'm' = 0.040 'm2'",
      "status": "passed",
      "execution_time_ms": 1.936083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantity10",
      "description": "testQuantity10",
      "expression": "4.0 'g' / 2.0 'm' = 2 'g/m'",
      "status": "passed",
      "execution_time_ms": 0.965583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantity11",
      "description": "testQuantity11",
      "expression": "1.0 'm' / 1.0 'm' = 1 '1'",
      "status": "passed",
      "execution_time_ms": 0.234875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testRepeat1",
      "description": "testRepeat1",
      "expression": "ValueSet.expansion.repeat(contains).count() = 10",
      "status": "passed",
      "execution_time_ms": 0.555084,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testRepeat2",
      "description": "testRepeat2",
      "expression": "Questionnaire.repeat(item).code.count() = 11",
      "status": "passed",
      "execution_time_ms": 0.380166,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testRepeat3",
      "description": "testRepeat3",
      "expression": "Questionnaire.descendants().code.count() = 23",
      "status": "passed",
      "execution_time_ms": 0.269208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testRepeat4",
      "description": "testRepeat4",
      "expression": "Questionnaire.children().code.count() = 2",
      "status": "passed",
      "execution_time_ms": 0.189584,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testRepeat5",
      "description": "testRepeat5",
      "expression": "Patient.name.repeat('test')",
      "status": "passed",
      "execution_time_ms": 0.140333,
      "expected": [
        "test"
      ],
      "actual": [
        "test"
      ]
    },
    {
      "name": "testReplaceMatches1",
      "description": "testReplaceMatches1",
      "expression": "'123456'.replaceMatches('234', 'X')",
      "status": "passed",
      "execution_time_ms": 0.180833,
      "expected": [
        "1X56"
      ],
      "actual": [
        "1X56"
      ]
    },
    {
      "name": "testReplaceMatches2",
      "description": "testReplaceMatches2",
      "expression": "'abc'.replaceMatches('', 'x')",
      "status": "passed",
      "execution_time_ms": 0.146709,
      "expected": [
        "abc"
      ],
      "actual": [
        "xaxbxcx"
      ]
    },
    {
      "name": "testReplaceMatches3",
      "description": "testReplaceMatches3",
      "expression": "'123456'.replaceMatches('234', '')",
      "status": "passed",
      "execution_time_ms": 0.118333,
      "expected": [
        "156"
      ],
      "actual": [
        "156"
      ]
    },
    {
      "name": "testReplaceMatches4",
      "description": "testReplaceMatches4",
      "expression": "{}.replaceMatches('234', 'X').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.149625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testReplaceMatches5",
      "description": "testReplaceMatches5",
      "expression": "'123'.replaceMatches({}, 'X').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.138917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testReplaceMatches6",
      "description": "testReplaceMatches6",
      "expression": "'123'.replaceMatches('2', {}).empty() = true",
      "status": "passed",
      "execution_time_ms": 0.132791,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testReplaceMatches7",
      "description": "testReplaceMatches7",
      "expression": "'abc123'.replaceMatches('[0-9]', '-')",
      "status": "passed",
      "execution_time_ms": 0.134041,
      "expected": [
        "abc---"
      ],
      "actual": [
        "abc---"
      ]
    },
    {
      "name": "testReplace1",
      "description": "testReplace1",
      "expression": "'123456'.replace('234', 'X')",
      "status": "passed",
      "execution_time_ms": 0.120834,
      "expected": [
        "1X56"
      ],
      "actual": [
        "1X56"
      ]
    },
    {
      "name": "testReplace2",
      "description": "testReplace2",
      "expression": "'abc'.replace('', 'x')",
      "status": "passed",
      "execution_time_ms": 0.127667,
      "expected": [
        "xaxbxcx"
      ],
      "actual": [
        "xaxbxcx"
      ]
    },
    {
      "name": "testReplace3",
      "description": "testReplace3",
      "expression": "'123456'.replace('234', '')",
      "status": "passed",
      "execution_time_ms": 0.116875,
      "expected": [
        "156"
      ],
      "actual": [
        "156"
      ]
    },
    {
      "name": "testReplace4",
      "description": "testReplace4",
      "expression": "{}.replace('234', 'X').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.155708,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testReplace5",
      "description": "testReplace5",
      "expression": "'123'.replace({}, 'X').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.13575,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testReplace6",
      "description": "testReplace6",
      "expression": "'123'.replace('2', {}).empty() = true",
      "status": "passed",
      "execution_time_ms": 0.136208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testRound1",
      "description": "testRound1",
      "expression": "1.round() = 1",
      "status": "passed",
      "execution_time_ms": 0.297208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testRound2",
      "description": "testRound2",
      "expression": "3.14159.round(3) = 3.142",
      "status": "passed",
      "execution_time_ms": 0.356459,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testRoundEmpty",
      "description": "testRoundEmpty",
      "expression": "{}.round().empty()",
      "status": "passed",
      "execution_time_ms": 0.113416,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSelect1",
      "description": "testSelect1",
      "expression": "Patient.name.select(given).count() = 5",
      "status": "passed",
      "execution_time_ms": 0.207292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSelect2",
      "description": "testSelect2",
      "expression": "Patient.name.select(given | family).count() = 7",
      "status": "passed",
      "execution_time_ms": 0.230542,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSelect3",
      "description": "testSelect3",
      "expression": "name.select(use.contains('i')).count()",
      "status": "passed",
      "execution_time_ms": 0.159583,
      "expected": [
        3
      ],
      "actual": [
        3
      ]
    },
    {
      "name": "testSingle1",
      "description": "testSingle1",
      "expression": "Patient.name.first().single().exists()",
      "status": "passed",
      "execution_time_ms": 0.185875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSingle2",
      "description": "testSingle2",
      "expression": "Patient.name.single().exists()",
      "status": "error",
      "execution_time_ms": 0.140583,
      "expected": [],
      "actual": null,
      "error": "Expected single"
    },
    {
      "name": "testSkip1",
      "description": "testSkip1",
      "expression": "(0 | 1 | 2).skip(1) = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.800541,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSkip2",
      "description": "testSkip2",
      "expression": "(0 | 1 | 2).skip(2) = 2",
      "status": "passed",
      "execution_time_ms": 0.819083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSkip3",
      "description": "testSkip3",
      "expression": "Patient.name.skip(1).given.trace('test') = 'Jim' | 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.3705,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSkip4",
      "description": "testSkip4",
      "expression": "Patient.name.skip(3).given.exists() = false",
      "status": "passed",
      "execution_time_ms": 0.253292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSort1",
      "description": "Prototype definition - not part of spec yet",
      "expression": "(1 | 2 | 3).sort() = (1 | 2 | 3)",
      "status": "error",
      "execution_time_ms": 2.614958,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: sort"
    },
    {
      "name": "testSort2",
      "description": "Prototype definition - not part of spec yet",
      "expression": "(3 | 2 | 1).sort() = (1 | 2 | 3)",
      "status": "error",
      "execution_time_ms": 0.69625,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: sort"
    },
    {
      "name": "testSort3",
      "description": "Prototype definition - not part of spec yet",
      "expression": "(1 | 2 | 3).sort($this) = (1 | 2 | 3)",
      "status": "error",
      "execution_time_ms": 0.630542,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: sort"
    },
    {
      "name": "testSort4",
      "description": "Prototype definition - not part of spec yet",
      "expression": "(3 | 2 | 1).sort($this) = (1 | 2 | 3)",
      "status": "error",
      "execution_time_ms": 0.601625,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: sort"
    },
    {
      "name": "testSort5",
      "description": "Prototype definition - not part of spec yet",
      "expression": "(1 | 2 | 3).sort(-$this) = (3 | 2 | 1)",
      "status": "error",
      "execution_time_ms": 0.604417,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: sort"
    },
    {
      "name": "testSort6",
      "description": "Prototype definition - not part of spec yet",
      "expression": "('a' | 'b' | 'c').sort($this) = ('a' | 'b' | 'c')",
      "status": "error",
      "execution_time_ms": 0.204083,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: sort"
    },
    {
      "name": "testSort7",
      "description": "Prototype definition - not part of spec yet",
      "expression": "('c' | 'b' | 'a').sort($this) = ('a' | 'b' | 'c')",
      "status": "error",
      "execution_time_ms": 0.1695,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: sort"
    },
    {
      "name": "testSort8",
      "description": "Prototype definition - not part of spec yet",
      "expression": "('a' | 'b' | 'c').sort(-$this) = ('c' | 'b' | 'a')",
      "status": "error",
      "execution_time_ms": 0.172292,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: sort"
    },
    {
      "name": "testSort9",
      "description": "Prototype definition - not part of spec yet",
      "expression": "Patient.name[0].given.sort() = ('James' | 'Peter')",
      "status": "error",
      "execution_time_ms": 0.281667,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: sort"
    },
    {
      "name": "testSort10",
      "description": "Prototype definition - not part of spec yet",
      "expression": "Patient.name.sort(-family, -given.first()).first().use = 'usual'",
      "status": "error",
      "execution_time_ms": 0.205625,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Not implemented: sort"
    },
    {
      "name": "testSplit1",
      "description": "testSplit1",
      "expression": "'Peter,James,Jim,Peter,James'.split(',').count() = 5",
      "status": "passed",
      "execution_time_ms": 0.261583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSplit2",
      "description": "testSplit2",
      "expression": "'A,,C'.split(',').join(',') = 'A,,C'",
      "status": "passed",
      "execution_time_ms": 0.142375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSplit3",
      "description": "testSplit3",
      "expression": "'[stop]ONE[stop][stop]TWO[stop][stop][stop]THREE[stop][stop]'.split('[stop]').trace('n').count() = 9",
      "status": "passed",
      "execution_time_ms": 0.24025,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSplit4",
      "description": "testSplit4",
      "expression": "'[stop]ONE[stop][stop]TWO[stop][stop][stop]THREE[stop][stop]'.split('[stop]').join('[stop]')",
      "status": "passed",
      "execution_time_ms": 0.138625,
      "expected": [
        "[stop]ONE[stop][stop]TWO[stop][stop][stop]THREE[stop][stop]"
      ],
      "actual": [
        "[stop]ONE[stop][stop]TWO[stop][stop][stop]THREE[stop][stop]"
      ]
    },
    {
      "name": "testSqrt1",
      "description": "testSqrt1",
      "expression": "81.sqrt() = 9.0",
      "status": "passed",
      "execution_time_ms": 0.26,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSqrt2",
      "description": "testSqrt2",
      "expression": "(-1).sqrt()",
      "status": "passed",
      "execution_time_ms": 0.183167,
      "expected": [],
      "actual": []
    },
    {
      "name": "testSqrtEmpty",
      "description": "testSqrtEmpty",
      "expression": "{}.sqrt().empty()",
      "status": "passed",
      "execution_time_ms": 0.111958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith1",
      "description": "testStartsWith1",
      "expression": "'12345'.startsWith('2') = false",
      "status": "passed",
      "execution_time_ms": 0.258667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith2",
      "description": "testStartsWith2",
      "expression": "'12345'.startsWith('1') = true",
      "status": "passed",
      "execution_time_ms": 0.195208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith3",
      "description": "testStartsWith3",
      "expression": "'12345'.startsWith('12') = true",
      "status": "passed",
      "execution_time_ms": 0.151625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith4",
      "description": "testStartsWith4",
      "expression": "'12345'.startsWith('13') = false",
      "status": "passed",
      "execution_time_ms": 0.134959,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith5",
      "description": "testStartsWith5",
      "expression": "'12345'.startsWith('12345') = true",
      "status": "passed",
      "execution_time_ms": 0.127792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith6",
      "description": "testStartsWith6",
      "expression": "'12345'.startsWith('123456') = false",
      "status": "passed",
      "execution_time_ms": 0.134709,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith7",
      "description": "testStartsWith7",
      "expression": "'12345'.startsWith('') = true",
      "status": "passed",
      "execution_time_ms": 0.129209,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith8",
      "description": "testStartsWith8",
      "expression": "{}.startsWith('1').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.146959,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith9",
      "description": "testStartsWith9",
      "expression": "{}.startsWith('').empty() = true",
      "status": "passed",
      "execution_time_ms": 0.13875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith10",
      "description": "testStartsWith10",
      "expression": "''.startsWith('') = true",
      "status": "passed",
      "execution_time_ms": 0.120458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith11",
      "description": "testStartsWith11",
      "expression": "{}.startsWith('').exists() = false",
      "status": "passed",
      "execution_time_ms": 0.131333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWith12",
      "description": "testStartsWith12",
      "expression": "'987654321'.startsWith(length().toString())",
      "status": "passed",
      "execution_time_ms": 0.139834,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStartsWithNonString1",
      "description": "testStartsWithNonString1",
      "expression": "Appointment.identifier.startsWith('rand')",
      "status": "error",
      "execution_time_ms": 0.19725,
      "expected": [],
      "actual": null,
      "error": "Expected string, but got: [\"{\\\"system\\\":\\\"http://example.org/sampleappointment-identifier\\\",\\\"value\\\":\\\"123\\\"}\"]"
    },
    {
      "name": "testSubSetOf1",
      "description": "testSubSetOf1",
      "expression": "Patient.name.first().subsetOf($this.name)",
      "status": "passed",
      "execution_time_ms": 0.266666,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubSetOf2",
      "description": "testSubSetOf2",
      "expression": "Patient.name.subsetOf($this.name.first()).not()",
      "status": "passed",
      "execution_time_ms": 0.144208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubSetOf3",
      "description": "testSubSetOf3",
      "expression": "supportingInfo.where(category.coding.code = 'additionalbodysite').sequence.subsetOf($this.item.informationSequence)",
      "status": "passed",
      "execution_time_ms": 0.226125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring1",
      "description": "testSubstring1",
      "expression": "'12345'.substring(2) = '345'",
      "status": "passed",
      "execution_time_ms": 0.25,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring2",
      "description": "testSubstring2",
      "expression": "'12345'.substring(2,1) = '3'",
      "status": "passed",
      "execution_time_ms": 0.302875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring3",
      "description": "testSubstring3",
      "expression": "'12345'.substring(2,5) = '345'",
      "status": "passed",
      "execution_time_ms": 0.344166,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring4",
      "description": "testSubstring4",
      "expression": "'12345'.substring(25).empty()",
      "status": "passed",
      "execution_time_ms": 0.209083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring5",
      "description": "testSubstring5",
      "expression": "'12345'.substring(-1).empty()",
      "status": "passed",
      "execution_time_ms": 0.210458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring7",
      "description": "testSubstring7",
      "expression": "'LogicalModel-Person'.substring(0, 12)",
      "status": "passed",
      "execution_time_ms": 0.280292,
      "expected": [
        "LogicalModel"
      ],
      "actual": [
        "LogicalModel"
      ]
    },
    {
      "name": "testSubstring8",
      "description": "testSubstring8",
      "expression": "'LogicalModel-Person'.substring(0, 'LogicalModel-Person'.indexOf('-'))",
      "status": "passed",
      "execution_time_ms": 0.217791,
      "expected": [
        "LogicalModel"
      ],
      "actual": [
        "LogicalModel"
      ]
    },
    {
      "name": "testSubstring9",
      "description": "testSubstring9",
      "expression": "{}.substring(25).empty() = true",
      "status": "passed",
      "execution_time_ms": 1.826292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring10",
      "description": "testSubstring10",
      "expression": "Patient.name.family.first().substring(2, length()-5)",
      "status": "passed",
      "execution_time_ms": 0.437459,
      "expected": [
        "alm"
      ],
      "actual": [
        "alm"
      ]
    },
    {
      "name": "testSubstring11",
      "description": "testSubstring11",
      "expression": "{}.substring({}).empty() = true",
      "status": "passed",
      "execution_time_ms": 0.144041,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSubstring12",
      "description": "testSubstring12",
      "expression": "'string'.substring({}).empty() = true",
      "status": "passed",
      "execution_time_ms": 0.133292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSuperSetOf1",
      "description": "testSuperSetOf1",
      "expression": "Patient.name.first().supersetOf($this.name).not()",
      "status": "passed",
      "execution_time_ms": 0.182709,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testSuperSetOf2",
      "description": "testSuperSetOf2",
      "expression": "Patient.name.supersetOf($this.name.first())",
      "status": "passed",
      "execution_time_ms": 0.143292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTail1",
      "description": "testTail1",
      "expression": "(0 | 1 | 2).tail() = 1 | 2",
      "status": "passed",
      "execution_time_ms": 0.575208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTail2",
      "description": "testTail2",
      "expression": "Patient.name.tail().given = 'Jim' | 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.279583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake1",
      "description": "testTake1",
      "expression": "(0 | 1 | 2).take(1) = 0",
      "status": "passed",
      "execution_time_ms": 0.5265,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake2",
      "description": "testTake2",
      "expression": "(0 | 1 | 2).take(2) = 0 | 1",
      "status": "passed",
      "execution_time_ms": 0.57525,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake3",
      "description": "testTake3",
      "expression": "Patient.name.take(1).given = 'Peter' | 'James'",
      "status": "passed",
      "execution_time_ms": 0.212458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake4",
      "description": "testTake4",
      "expression": "Patient.name.take(2).given = 'Peter' | 'James' | 'Jim'",
      "status": "passed",
      "execution_time_ms": 0.21275,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake5",
      "description": "testTake5",
      "expression": "Patient.name.take(3).given.count() = 5",
      "status": "passed",
      "execution_time_ms": 0.244625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake6",
      "description": "testTake6",
      "expression": "Patient.name.take(4).given.count() = 5",
      "status": "passed",
      "execution_time_ms": 0.2425,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTake7",
      "description": "testTake7",
      "expression": "Patient.name.take(0).given.exists() = false",
      "status": "passed",
      "execution_time_ms": 0.212166,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToChars1",
      "description": "testToChars1",
      "expression": "'t2'.toChars() = 't' | '2'",
      "status": "passed",
      "execution_time_ms": 0.161834,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToDecimal1",
      "description": "testToDecimal1",
      "expression": "'1'.toDecimal() = 1",
      "status": "passed",
      "execution_time_ms": 0.184792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToDecimal2",
      "description": "testToDecimal2",
      "expression": "'-1'.toInteger() = -1",
      "status": "passed",
      "execution_time_ms": 0.17025,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToDecimal3",
      "description": "testToDecimal3",
      "expression": "'0'.toDecimal() = 0",
      "status": "passed",
      "execution_time_ms": 0.1735,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToDecimal4",
      "description": "testToDecimal4",
      "expression": "'0.0'.toDecimal() = 0.0",
      "status": "passed",
      "execution_time_ms": 0.151167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToDecimal5",
      "description": "testToDecimal5",
      "expression": "'st'.toDecimal().empty()",
      "status": "passed",
      "execution_time_ms": 0.104083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToInteger1",
      "description": "testToInteger1",
      "expression": "'1'.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.159542,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToInteger2",
      "description": "testToInteger2",
      "expression": "'-1'.toInteger() = -1",
      "status": "passed",
      "execution_time_ms": 0.152875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToInteger3",
      "description": "testToInteger3",
      "expression": "'0'.toInteger() = 0",
      "status": "passed",
      "execution_time_ms": 0.146375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToInteger4",
      "description": "testToInteger4",
      "expression": "'0.0'.toInteger().empty()",
      "status": "passed",
      "execution_time_ms": 0.10225,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToInteger5",
      "description": "testToInteger5",
      "expression": "'st'.toInteger().empty()",
      "status": "passed",
      "execution_time_ms": 0.104417,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToString1",
      "description": "testToString1",
      "expression": "1.toString() = '1'",
      "status": "passed",
      "execution_time_ms": 0.166875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToString2",
      "description": "testToString2",
      "expression": "'-1'.toInteger() = -1",
      "status": "passed",
      "execution_time_ms": 0.153625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToString3",
      "description": "testToString3",
      "expression": "0.toString() = '0'",
      "status": "passed",
      "execution_time_ms": 0.158542,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToString4",
      "description": "testToString4",
      "expression": "0.0.toString() = '0.0'",
      "status": "passed",
      "execution_time_ms": 0.1565,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testToString5",
      "description": "testToString5",
      "expression": "@2014-12-14.toString() = '2014-12-14'",
      "status": "passed",
      "execution_time_ms": 0.12275,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testToday1",
      "description": "testToday1",
      "expression": "Patient.birthDate < today()",
      "status": "error",
      "execution_time_ms": 0.152084,
      "expected": [
        true
      ],
      "actual": null
    },
    {
      "name": "testToday2",
      "description": "testToday2",
      "expression": "today().toString().length() = 10",
      "status": "passed",
      "execution_time_ms": 0.177458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTrace1",
      "description": "testTrace1",
      "expression": "name.given.trace('test').count() = 5",
      "status": "passed",
      "execution_time_ms": 0.194792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTrace2",
      "description": "testTrace2",
      "expression": "name.trace('test', given).count() = 3",
      "status": "passed",
      "execution_time_ms": 0.194958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTrim1",
      "description": "testTrim1",
      "expression": "'123456'.trim().length() = 6",
      "status": "passed",
      "execution_time_ms": 0.19075,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTrim2",
      "description": "testTrim2",
      "expression": "'123 456'.trim().length() = 7",
      "status": "passed",
      "execution_time_ms": 0.187666,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTrim3",
      "description": "testTrim3",
      "expression": "' 123456 '.trim().length() = 6",
      "status": "passed",
      "execution_time_ms": 0.152167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTrim4",
      "description": "testTrim4",
      "expression": "'  '.trim().length() = 0",
      "status": "passed",
      "execution_time_ms": 0.152542,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTrim5",
      "description": "testTrim5",
      "expression": "{}.trim().empty() = true",
      "status": "passed",
      "execution_time_ms": 0.12025,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTrim6",
      "description": "testTrim6",
      "expression": "'      '.trim() = ''",
      "status": "passed",
      "execution_time_ms": 0.102875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTruncate1",
      "description": "testTruncate1",
      "expression": "101.truncate() = 101",
      "status": "passed",
      "execution_time_ms": 0.225875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTruncate2",
      "description": "testTruncate2",
      "expression": "1.00000001.truncate() = 1",
      "status": "passed",
      "execution_time_ms": 0.198333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTruncate3",
      "description": "testTruncate3",
      "expression": "(-1.56).truncate() = -1",
      "status": "passed",
      "execution_time_ms": 1.555083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTruncateEmpty",
      "description": "testTruncateEmpty",
      "expression": "{}.truncate().empty()",
      "status": "passed",
      "execution_time_ms": 0.172666,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType1",
      "description": "testType1",
      "expression": "1.type().namespace = 'System'",
      "status": "passed",
      "execution_time_ms": 0.335333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType1a",
      "description": "testType1a",
      "expression": "1.type().name = 'Integer'",
      "status": "passed",
      "execution_time_ms": 0.194375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType2",
      "description": "testType2",
      "expression": "'1'.type().namespace = 'System'",
      "status": "passed",
      "execution_time_ms": 0.123167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType2a",
      "description": "testType2a",
      "expression": "'1'.type().name = 'String'",
      "status": "passed",
      "execution_time_ms": 0.119291,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType3",
      "description": "testType3",
      "expression": "true.type().namespace = 'System'",
      "status": "passed",
      "execution_time_ms": 0.117708,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType4",
      "description": "testType4",
      "expression": "true.type().name = 'Boolean'",
      "status": "passed",
      "execution_time_ms": 0.111542,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType5",
      "description": "testType5",
      "expression": "true.is(Boolean)",
      "status": "passed",
      "execution_time_ms": 0.118625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType6",
      "description": "testType6",
      "expression": "true.is(System.Boolean)",
      "status": "passed",
      "execution_time_ms": 0.136083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType7",
      "description": "testType7",
      "expression": "true is Boolean",
      "status": "passed",
      "execution_time_ms": 0.12925,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType8",
      "description": "testType8",
      "expression": "true is System.Boolean",
      "status": "passed",
      "execution_time_ms": 0.536042,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType9",
      "description": "testType9",
      "expression": "Patient.active.type().namespace = 'FHIR'",
      "status": "passed",
      "execution_time_ms": 0.133583,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testType10",
      "description": "testType10",
      "expression": "Patient.active.type().name = 'boolean'",
      "status": "passed",
      "execution_time_ms": 0.1235,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testType11",
      "description": "testType11",
      "expression": "Patient.active.is(boolean)",
      "status": "error",
      "execution_time_ms": 0.144917,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testType12",
      "description": "testType12",
      "expression": "Patient.active.is(Boolean).not()",
      "status": "passed",
      "execution_time_ms": 0.122417,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testType13",
      "description": "testType13",
      "expression": "Patient.active.is(FHIR.boolean)",
      "status": "error",
      "execution_time_ms": 0.151958,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testType14",
      "description": "testType14",
      "expression": "Patient.active.is(System.Boolean).not()",
      "status": "passed",
      "execution_time_ms": 0.123625,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testType15",
      "description": "testType15",
      "expression": "Patient.type().namespace = 'FHIR'",
      "status": "passed",
      "execution_time_ms": 0.22075,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType16",
      "description": "testType16",
      "expression": "Patient.type().name = 'Patient'",
      "status": "passed",
      "execution_time_ms": 0.138041,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testType17",
      "description": "testType17",
      "expression": "Patient.is(Patient)",
      "status": "error",
      "execution_time_ms": 0.123208,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testType18",
      "description": "testType18",
      "expression": "Patient.is(FHIR.Patient)",
      "status": "error",
      "execution_time_ms": 0.125875,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testType19",
      "description": "testType19",
      "expression": "Patient.is(FHIR.`Patient`)",
      "status": "error",
      "execution_time_ms": 0.124208,
      "expected": [
        true
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testType20",
      "description": "testType20",
      "expression": "Patient.ofType(Patient).type().name",
      "status": "error",
      "execution_time_ms": 0.135542,
      "expected": [
        "Patient"
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testType21",
      "description": "testType21",
      "expression": "Patient.ofType(FHIR.Patient).type().name",
      "status": "error",
      "execution_time_ms": 0.139041,
      "expected": [
        "Patient"
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testType22",
      "description": "Note: Some systems may return an error due to failing to resolve System.Patient",
      "expression": "Patient.is(System.Patient).not()",
      "status": "error",
      "execution_time_ms": 0.145459,
      "expected": [
        true
      ],
      "actual": null,
      "error": "\"System.Patient\" cannot be resolved to a valid type identifier"
    },
    {
      "name": "testType23",
      "description": "testType23",
      "expression": "Patient.ofType(FHIR.`Patient`).type().name",
      "status": "error",
      "execution_time_ms": 0.132875,
      "expected": [
        "Patient"
      ],
      "actual": null,
      "error": "Cannot read properties of undefined (reading 'availableTypes')"
    },
    {
      "name": "testStringYearConvertsToDate",
      "description": "testStringYearConvertsToDate",
      "expression": "'2015'.convertsToDate()",
      "status": "passed",
      "execution_time_ms": 0.174125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMonthConvertsToDate",
      "description": "testStringMonthConvertsToDate",
      "expression": "'2015-02'.convertsToDate()",
      "status": "passed",
      "execution_time_ms": 0.10175,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDayConvertsToDate",
      "description": "testStringDayConvertsToDate",
      "expression": "'2015-02-04'.convertsToDate()",
      "status": "passed",
      "execution_time_ms": 0.097792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringYearConvertsToDateTime",
      "description": "testStringYearConvertsToDateTime",
      "expression": "'2015'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.108917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMonthConvertsToDateTime",
      "description": "testStringMonthConvertsToDateTime",
      "expression": "'2015-02'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.096708,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDayConvertsToDateTime",
      "description": "testStringDayConvertsToDateTime",
      "expression": "'2015-02-04'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.096792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringHourConvertsToDateTime",
      "description": "testStringHourConvertsToDateTime",
      "expression": "'2015-02-04T14'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.098209,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMinuteConvertsToDateTime",
      "description": "testStringMinuteConvertsToDateTime",
      "expression": "'2015-02-04T14:34'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.094792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringSecondConvertsToDateTime",
      "description": "testStringSecondConvertsToDateTime",
      "expression": "'2015-02-04T14:34:28'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.096459,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMillisecondConvertsToDateTime",
      "description": "testStringMillisecondConvertsToDateTime",
      "expression": "'2015-02-04T14:34:28.123'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.09775,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringUTCConvertsToDateTime",
      "description": "testStringUTCConvertsToDateTime",
      "expression": "'2015-02-04T14:34:28Z'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.11575,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringTZConvertsToDateTime",
      "description": "testStringTZConvertsToDateTime",
      "expression": "'2015-02-04T14:34:28+10:00'.convertsToDateTime()",
      "status": "passed",
      "execution_time_ms": 0.104667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringHourConvertsToTime",
      "description": "testStringHourConvertsToTime",
      "expression": "'14'.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.108458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMinuteConvertsToTime",
      "description": "testStringMinuteConvertsToTime",
      "expression": "'14:34'.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.095916,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringSecondConvertsToTime",
      "description": "testStringSecondConvertsToTime",
      "expression": "'14:34:28'.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.096667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringMillisecondConvertsToTime",
      "description": "testStringMillisecondConvertsToTime",
      "expression": "'14:34:28.123'.convertsToTime()",
      "status": "passed",
      "execution_time_ms": 0.094875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToInteger",
      "description": "testIntegerLiteralConvertsToInteger",
      "expression": "1.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.197375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralIsInteger",
      "description": "testIntegerLiteralIsInteger",
      "expression": "1.is(Integer)",
      "status": "passed",
      "execution_time_ms": 0.176917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralIsSystemInteger",
      "description": "testIntegerLiteralIsSystemInteger",
      "expression": "1.is(System.Integer)",
      "status": "passed",
      "execution_time_ms": 0.175292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringLiteralConvertsToInteger",
      "description": "testStringLiteralConvertsToInteger",
      "expression": "'1'.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.097875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringLiteralConvertsToIntegerFalse",
      "description": "testStringLiteralConvertsToIntegerFalse",
      "expression": "'a'.convertsToInteger().not()",
      "status": "passed",
      "execution_time_ms": 0.103708,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalConvertsToIntegerFalse",
      "description": "testStringDecimalConvertsToIntegerFalse",
      "expression": "'1.0'.convertsToInteger().not()",
      "status": "passed",
      "execution_time_ms": 0.101625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringLiteralIsNotInteger",
      "description": "testStringLiteralIsNotInteger",
      "expression": "'1'.is(Integer).not()",
      "status": "passed",
      "execution_time_ms": 0.113083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToInteger",
      "description": "testBooleanLiteralConvertsToInteger",
      "expression": "true.convertsToInteger()",
      "status": "passed",
      "execution_time_ms": 0.101792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralIsNotInteger",
      "description": "testBooleanLiteralIsNotInteger",
      "expression": "true.is(Integer).not()",
      "status": "passed",
      "execution_time_ms": 0.115167,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDateIsNotInteger",
      "description": "testDateIsNotInteger",
      "expression": "@2013-04-05.is(Integer).not()",
      "status": "passed",
      "execution_time_ms": 0.125709,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToInteger",
      "description": "testIntegerLiteralToInteger",
      "expression": "1.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.248,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringIntegerLiteralToInteger",
      "description": "testStringIntegerLiteralToInteger",
      "expression": "'1'.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.167584,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralToInteger",
      "description": "testDecimalLiteralToInteger",
      "expression": "'1.1'.toInteger() = {}",
      "status": "passed",
      "execution_time_ms": 0.116334,
      "expected": [],
      "actual": []
    },
    {
      "name": "testDecimalLiteralToIntegerIsEmpty",
      "description": "testDecimalLiteralToIntegerIsEmpty",
      "expression": "'1.1'.toInteger().empty()",
      "status": "passed",
      "execution_time_ms": 0.108375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralToInteger",
      "description": "testBooleanLiteralToInteger",
      "expression": "true.toInteger() = 1",
      "status": "passed",
      "execution_time_ms": 0.214458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToDecimal",
      "description": "testIntegerLiteralConvertsToDecimal",
      "expression": "1.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.1855,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralIsNotDecimal",
      "description": "testIntegerLiteralIsNotDecimal",
      "expression": "1.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.205125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToDecimal",
      "description": "testDecimalLiteralConvertsToDecimal",
      "expression": "1.0.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 1.655083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralIsDecimal",
      "description": "testDecimalLiteralIsDecimal",
      "expression": "1.0.is(Decimal)",
      "status": "passed",
      "execution_time_ms": 0.341,
      "expected": [
        true
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testStringIntegerLiteralConvertsToDecimal",
      "description": "testStringIntegerLiteralConvertsToDecimal",
      "expression": "'1'.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.130333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringIntegerLiteralIsNotDecimal",
      "description": "testStringIntegerLiteralIsNotDecimal",
      "expression": "'1'.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.142416,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringLiteralConvertsToDecimalFalse",
      "description": "testStringLiteralConvertsToDecimalFalse",
      "expression": "'1.a'.convertsToDecimal().not()",
      "status": "passed",
      "execution_time_ms": 0.116542,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalLiteralConvertsToDecimal",
      "description": "testStringDecimalLiteralConvertsToDecimal",
      "expression": "'1.0'.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.104958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalLiteralIsNotDecimal",
      "description": "testStringDecimalLiteralIsNotDecimal",
      "expression": "'1.0'.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.123333,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToDecimal",
      "description": "testBooleanLiteralConvertsToDecimal",
      "expression": "true.convertsToDecimal()",
      "status": "passed",
      "execution_time_ms": 0.106291,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralIsNotDecimal",
      "description": "testBooleanLiteralIsNotDecimal",
      "expression": "true.is(Decimal).not()",
      "status": "passed",
      "execution_time_ms": 0.123334,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToDecimal",
      "description": "testIntegerLiteralToDecimal",
      "expression": "1.toDecimal() = 1.0",
      "status": "passed",
      "execution_time_ms": 0.26775,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToDeciamlEquivalent",
      "description": "testIntegerLiteralToDeciamlEquivalent",
      "expression": "1.toDecimal() ~ 1.0",
      "status": "passed",
      "execution_time_ms": 0.242208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralToDecimal",
      "description": "testDecimalLiteralToDecimal",
      "expression": "1.0.toDecimal() = 1.0",
      "status": "passed",
      "execution_time_ms": 0.22875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralToDecimalEqual",
      "description": "testDecimalLiteralToDecimalEqual",
      "expression": "'1.1'.toDecimal() = 1.1",
      "status": "passed",
      "execution_time_ms": 0.15975,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralToDecimal",
      "description": "testBooleanLiteralToDecimal",
      "expression": "true.toDecimal() = 1",
      "status": "passed",
      "execution_time_ms": 0.153834,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToQuantity",
      "description": "testIntegerLiteralConvertsToQuantity",
      "expression": "1.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.159958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralIsNotQuantity",
      "description": "testIntegerLiteralIsNotQuantity",
      "expression": "1.is(Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.175917,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToQuantity",
      "description": "testDecimalLiteralConvertsToQuantity",
      "expression": "1.0.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.156875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralIsNotQuantity",
      "description": "testDecimalLiteralIsNotQuantity",
      "expression": "1.0.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.179458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringIntegerLiteralConvertsToQuantity",
      "description": "testStringIntegerLiteralConvertsToQuantity",
      "expression": "'1'.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.154792,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringIntegerLiteralIsNotQuantity",
      "description": "testStringIntegerLiteralIsNotQuantity",
      "expression": "'1'.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.118583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringQuantityLiteralConvertsToQuantity",
      "description": "testStringQuantityLiteralConvertsToQuantity",
      "expression": "'1 day'.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.148875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringQuantityWeekConvertsToQuantity",
      "description": "testStringQuantityWeekConvertsToQuantity",
      "expression": "'1 \\'wk\\''.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.13475,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringQuantityWeekConvertsToQuantityFalse",
      "description": "testStringQuantityWeekConvertsToQuantityFalse",
      "expression": "'1 wk'.convertsToQuantity().not()",
      "status": "passed",
      "execution_time_ms": 0.168791,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalLiteralConvertsToQuantityFalse",
      "description": "testStringDecimalLiteralConvertsToQuantityFalse",
      "expression": "'1.a'.convertsToQuantity().not()",
      "status": "passed",
      "execution_time_ms": 0.106458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalLiteralConvertsToQuantity",
      "description": "testStringDecimalLiteralConvertsToQuantity",
      "expression": "'1.0'.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.098375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringDecimalLiteralIsNotSystemQuantity",
      "description": "testStringDecimalLiteralIsNotSystemQuantity",
      "expression": "'1.0'.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.117583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToQuantity",
      "description": "testBooleanLiteralConvertsToQuantity",
      "expression": "true.convertsToQuantity()",
      "status": "passed",
      "execution_time_ms": 0.099375,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralIsNotSystemQuantity",
      "description": "testBooleanLiteralIsNotSystemQuantity",
      "expression": "true.is(System.Quantity).not()",
      "status": "passed",
      "execution_time_ms": 0.1195,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToQuantity",
      "description": "testIntegerLiteralToQuantity",
      "expression": "1.toQuantity() = 1 '1'",
      "status": "passed",
      "execution_time_ms": 0.222208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralToQuantity",
      "description": "testDecimalLiteralToQuantity",
      "expression": "1.0.toQuantity() = 1.0 '1'",
      "status": "passed",
      "execution_time_ms": 0.177875,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringIntegerLiteralToQuantity",
      "description": "testStringIntegerLiteralToQuantity",
      "expression": "'1'.toQuantity()",
      "status": "passed",
      "execution_time_ms": 0.103417,
      "expected": [
        "1 '1'"
      ],
      "actual": [
        "1 '1'"
      ]
    },
    {
      "name": "testStringQuantityLiteralToQuantity",
      "description": "testStringQuantityLiteralToQuantity",
      "expression": "'1 day'.toQuantity() = 1 day",
      "status": "passed",
      "execution_time_ms": 0.127667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringQuantityDayLiteralToQuantity",
      "description": "testStringQuantityDayLiteralToQuantity",
      "expression": "'1 day'.toQuantity() = 1 'd'",
      "status": "passed",
      "execution_time_ms": 0.111416,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testStringQuantityWeekLiteralToQuantity",
      "description": "testStringQuantityWeekLiteralToQuantity",
      "expression": "'1 \\'wk\\''.toQuantity() = 1 week",
      "status": "passed",
      "execution_time_ms": 0.120083,
      "expected": [
        true
      ],
      "actual": []
    },
    {
      "name": "testStringQuantityMonthLiteralToQuantity",
      "description": "testStringQuantityMonthLiteralToQuantity",
      "expression": "'1 \\'mo\\''.toQuantity() = 1 month",
      "status": "passed",
      "execution_time_ms": 0.132958,
      "expected": [],
      "actual": []
    },
    {
      "name": "testStringQuantityYearLiteralToQuantity",
      "description": "testStringQuantityYearLiteralToQuantity",
      "expression": "'1 \\'a\\''.toQuantity() = 1 year",
      "status": "passed",
      "execution_time_ms": 0.126791,
      "expected": [],
      "actual": []
    },
    {
      "name": "testStringDecimalLiteralToQuantity",
      "description": "testStringDecimalLiteralToQuantity",
      "expression": "'1.0'.toQuantity() ~ 1 '1'",
      "status": "passed",
      "execution_time_ms": 0.114583,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToBoolean",
      "description": "testIntegerLiteralConvertsToBoolean",
      "expression": "1.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.164292,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToBooleanFalse",
      "description": "testIntegerLiteralConvertsToBooleanFalse",
      "expression": "2.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.156792,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testNegativeIntegerLiteralConvertsToBooleanFalse",
      "description": "testNegativeIntegerLiteralConvertsToBooleanFalse",
      "expression": "(-1).convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.220708,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testIntegerLiteralFalseConvertsToBoolean",
      "description": "testIntegerLiteralFalseConvertsToBoolean",
      "expression": "0.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.159791,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToBoolean",
      "description": "testDecimalLiteralConvertsToBoolean",
      "expression": "1.0.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.150458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringTrueLiteralConvertsToBoolean",
      "description": "testStringTrueLiteralConvertsToBoolean",
      "expression": "'true'.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.103791,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringFalseLiteralConvertsToBoolean",
      "description": "testStringFalseLiteralConvertsToBoolean",
      "expression": "'false'.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.095208,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringFalseLiteralAlsoConvertsToBoolean",
      "description": "testStringFalseLiteralAlsoConvertsToBoolean",
      "expression": "'False'.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.09525,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testTrueLiteralConvertsToBoolean",
      "description": "testTrueLiteralConvertsToBoolean",
      "expression": "true.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.097542,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testFalseLiteralConvertsToBoolean",
      "description": "testFalseLiteralConvertsToBoolean",
      "expression": "false.convertsToBoolean()",
      "status": "passed",
      "execution_time_ms": 0.096958,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToBoolean",
      "description": "testIntegerLiteralToBoolean",
      "expression": "1.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.153125,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToBooleanEmpty",
      "description": "testIntegerLiteralToBooleanEmpty",
      "expression": "2.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.154667,
      "expected": [],
      "actual": []
    },
    {
      "name": "testIntegerLiteralToBooleanFalse",
      "description": "testIntegerLiteralToBooleanFalse",
      "expression": "0.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.156333,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testStringTrueToBoolean",
      "description": "testStringTrueToBoolean",
      "expression": "'true'.toBoolean()",
      "status": "passed",
      "execution_time_ms": 0.115,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringFalseToBoolean",
      "description": "testStringFalseToBoolean",
      "expression": "'false'.toBoolean()",
      "status": "passed",
      "execution_time_ms": 1.625667,
      "expected": [
        false
      ],
      "actual": [
        false
      ]
    },
    {
      "name": "testIntegerLiteralConvertsToString",
      "description": "testIntegerLiteralConvertsToString",
      "expression": "1.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.26575,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralIsNotString",
      "description": "testIntegerLiteralIsNotString",
      "expression": "1.is(String).not()",
      "status": "passed",
      "execution_time_ms": 0.21425,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testNegativeIntegerLiteralConvertsToString",
      "description": "testNegativeIntegerLiteralConvertsToString",
      "expression": "(-1).convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.215458,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testDecimalLiteralConvertsToString",
      "description": "testDecimalLiteralConvertsToString",
      "expression": "1.0.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.159667,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testStringLiteralConvertsToString",
      "description": "testStringLiteralConvertsToString",
      "expression": "'true'.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.10625,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testBooleanLiteralConvertsToString",
      "description": "testBooleanLiteralConvertsToString",
      "expression": "true.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.105083,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testQuantityLiteralConvertsToString",
      "description": "testQuantityLiteralConvertsToString",
      "expression": "1 'wk'.convertsToString()",
      "status": "passed",
      "execution_time_ms": 0.119417,
      "expected": [
        true
      ],
      "actual": [
        true
      ]
    },
    {
      "name": "testIntegerLiteralToString",
      "description": "testIntegerLiteralToString",
      "expression": "1.toString()",
      "status": "passed",
      "execution_time_ms": 0.1565,
      "expected": [
        "1"
      ],
      "actual": [
        "1"
      ]
    },
    {
      "name": "testNegativeIntegerLiteralToString",
      "description": "testNegativeIntegerLiteralToString",
      "expression": "(-1).toString()",
      "status": "passed",
      "execution_time_ms": 0.199666,
      "expected": [
        "-1"
      ],
      "actual": [
        "-1"
      ]
    },
    {
      "name": "testDecimalLiteralToString",
      "description": "testDecimalLiteralToString",
      "expression": "1.0.toString()",
      "status": "passed",
      "execution_time_ms": 0.151208,
      "expected": [
        "1.0"
      ],
      "actual": [
        "1"
      ]
    },
    {
      "name": "testStringLiteralToString",
      "description": "testStringLiteralToString",
      "expression": "'true'.toString()",
      "status": "passed",
      "execution_time_ms": 0.09575,
      "expected": [
        "true"
      ],
      "actual": [
        "true"
      ]
    },
    {
      "name": "testBooleanLiteralToString",
      "description": "testBooleanLiteralToString",
      "expression": "true.toString()",
      "status": "passed",
      "execution_time_ms": 0.097,
      "expected": [
        "true"
      ],
      "actual": [
        "true"
      ]
    },
    {
      "name": "testQuantityLiteralWkToString",
      "description": "testQuantityLiteralWkToString",
      "expression": "1 'wk'.toString()",
      "status": "passed",
      "execution_time_ms": 0.10425,
      "expected": [
        "1 'wk'"
      ],
      "actual": [
        "1 'wk'"
      ]
    },
    {
      "name": "testQuantityLiteralWeekToString",
      "description": "testQuantityLiteralWeekToString",
      "expression": "1 week.toString()",
      "status": "passed",
      "execution_time_ms": 0.112833,
      "expected": [
        "1 week"
      ],
      "actual": [
        "1 week"
      ]
    }
  ],
  "summary": {
    "total": 992,
    "passed": 831,
    "failed": 0,
    "errors": 161
  }
}